# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class AlexaInfo(_serialization.Model):
    """AlexaInfo.

    :ivar alexa_rank:
    :vartype alexa_rank: int
    :ivar category:
    :vartype category: str
    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    """

    _attribute_map = {
        "alexa_rank": {"key": "alexaRank", "type": "int"},
        "category": {"key": "category", "type": "str"},
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
    }

    def __init__(
        self,
        *,
        alexa_rank: Optional[int] = None,
        category: Optional[str] = None,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword alexa_rank:
        :paramtype alexa_rank: int
        :keyword category:
        :paramtype category: str
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        """
        super().__init__(**kwargs)
        self.alexa_rank = alexa_rank
        self.category = category
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent


class AsAsset(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """AsAsset.

    :ivar admin_contacts:
    :vartype admin_contacts: list[~azure.easm.models.ObservedString]
    :ivar admin_names:
    :vartype admin_names: list[~azure.easm.models.ObservedString]
    :ivar admin_orgs:
    :vartype admin_orgs: list[~azure.easm.models.ObservedString]
    :ivar admin_phones:
    :vartype admin_phones: list[~azure.easm.models.ObservedString]
    :ivar as_names:
    :vartype as_names: list[~azure.easm.models.ObservedString]
    :ivar asn:
    :vartype asn: int
    :ivar count:
    :vartype count: int
    :ivar countries:
    :vartype countries: list[~azure.easm.models.ObservedString]
    :ivar detailed_from_whois_at:
    :vartype detailed_from_whois_at: ~datetime.datetime
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar org_ids:
    :vartype org_ids: list[~azure.easm.models.ObservedString]
    :ivar org_names:
    :vartype org_names: list[~azure.easm.models.ObservedString]
    :ivar registrant_contacts:
    :vartype registrant_contacts: list[~azure.easm.models.ObservedString]
    :ivar registrant_names:
    :vartype registrant_names: list[~azure.easm.models.ObservedString]
    :ivar registrant_phones:
    :vartype registrant_phones: list[~azure.easm.models.ObservedString]
    :ivar registrar_created_at:
    :vartype registrar_created_at: list[~azure.easm.models.ObservedLong]
    :ivar registrar_names:
    :vartype registrar_names: list[~azure.easm.models.ObservedString]
    :ivar registrar_updated_at:
    :vartype registrar_updated_at: list[~azure.easm.models.ObservedLong]
    :ivar registries:
    :vartype registries: list[~azure.easm.models.ObservedString]
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar technical_contacts:
    :vartype technical_contacts: list[~azure.easm.models.ObservedString]
    :ivar technical_names:
    :vartype technical_names: list[~azure.easm.models.ObservedString]
    :ivar technical_orgs:
    :vartype technical_orgs: list[~azure.easm.models.ObservedString]
    :ivar technical_phones:
    :vartype technical_phones: list[~azure.easm.models.ObservedString]
    """

    _attribute_map = {
        "admin_contacts": {"key": "adminContacts", "type": "[ObservedString]"},
        "admin_names": {"key": "adminNames", "type": "[ObservedString]"},
        "admin_orgs": {"key": "adminOrgs", "type": "[ObservedString]"},
        "admin_phones": {"key": "adminPhones", "type": "[ObservedString]"},
        "as_names": {"key": "asNames", "type": "[ObservedString]"},
        "asn": {"key": "asn", "type": "int"},
        "count": {"key": "count", "type": "int"},
        "countries": {"key": "countries", "type": "[ObservedString]"},
        "detailed_from_whois_at": {"key": "detailedFromWhoisAt", "type": "iso-8601"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "org_ids": {"key": "orgIds", "type": "[ObservedString]"},
        "org_names": {"key": "orgNames", "type": "[ObservedString]"},
        "registrant_contacts": {"key": "registrantContacts", "type": "[ObservedString]"},
        "registrant_names": {"key": "registrantNames", "type": "[ObservedString]"},
        "registrant_phones": {"key": "registrantPhones", "type": "[ObservedString]"},
        "registrar_created_at": {"key": "registrarCreatedAt", "type": "[ObservedLong]"},
        "registrar_names": {"key": "registrarNames", "type": "[ObservedString]"},
        "registrar_updated_at": {"key": "registrarUpdatedAt", "type": "[ObservedLong]"},
        "registries": {"key": "registries", "type": "[ObservedString]"},
        "sources": {"key": "sources", "type": "[Source]"},
        "technical_contacts": {"key": "technicalContacts", "type": "[ObservedString]"},
        "technical_names": {"key": "technicalNames", "type": "[ObservedString]"},
        "technical_orgs": {"key": "technicalOrgs", "type": "[ObservedString]"},
        "technical_phones": {"key": "technicalPhones", "type": "[ObservedString]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        admin_contacts: Optional[List["_models.ObservedString"]] = None,
        admin_names: Optional[List["_models.ObservedString"]] = None,
        admin_orgs: Optional[List["_models.ObservedString"]] = None,
        admin_phones: Optional[List["_models.ObservedString"]] = None,
        as_names: Optional[List["_models.ObservedString"]] = None,
        asn: Optional[int] = None,
        count: Optional[int] = None,
        countries: Optional[List["_models.ObservedString"]] = None,
        detailed_from_whois_at: Optional[datetime.datetime] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        org_ids: Optional[List["_models.ObservedString"]] = None,
        org_names: Optional[List["_models.ObservedString"]] = None,
        registrant_contacts: Optional[List["_models.ObservedString"]] = None,
        registrant_names: Optional[List["_models.ObservedString"]] = None,
        registrant_phones: Optional[List["_models.ObservedString"]] = None,
        registrar_created_at: Optional[List["_models.ObservedLong"]] = None,
        registrar_names: Optional[List["_models.ObservedString"]] = None,
        registrar_updated_at: Optional[List["_models.ObservedLong"]] = None,
        registries: Optional[List["_models.ObservedString"]] = None,
        sources: Optional[List["_models.Source"]] = None,
        technical_contacts: Optional[List["_models.ObservedString"]] = None,
        technical_names: Optional[List["_models.ObservedString"]] = None,
        technical_orgs: Optional[List["_models.ObservedString"]] = None,
        technical_phones: Optional[List["_models.ObservedString"]] = None,
        **kwargs
    ):
        """
        :keyword admin_contacts:
        :paramtype admin_contacts: list[~azure.easm.models.ObservedString]
        :keyword admin_names:
        :paramtype admin_names: list[~azure.easm.models.ObservedString]
        :keyword admin_orgs:
        :paramtype admin_orgs: list[~azure.easm.models.ObservedString]
        :keyword admin_phones:
        :paramtype admin_phones: list[~azure.easm.models.ObservedString]
        :keyword as_names:
        :paramtype as_names: list[~azure.easm.models.ObservedString]
        :keyword asn:
        :paramtype asn: int
        :keyword count:
        :paramtype count: int
        :keyword countries:
        :paramtype countries: list[~azure.easm.models.ObservedString]
        :keyword detailed_from_whois_at:
        :paramtype detailed_from_whois_at: ~datetime.datetime
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword org_ids:
        :paramtype org_ids: list[~azure.easm.models.ObservedString]
        :keyword org_names:
        :paramtype org_names: list[~azure.easm.models.ObservedString]
        :keyword registrant_contacts:
        :paramtype registrant_contacts: list[~azure.easm.models.ObservedString]
        :keyword registrant_names:
        :paramtype registrant_names: list[~azure.easm.models.ObservedString]
        :keyword registrant_phones:
        :paramtype registrant_phones: list[~azure.easm.models.ObservedString]
        :keyword registrar_created_at:
        :paramtype registrar_created_at: list[~azure.easm.models.ObservedLong]
        :keyword registrar_names:
        :paramtype registrar_names: list[~azure.easm.models.ObservedString]
        :keyword registrar_updated_at:
        :paramtype registrar_updated_at: list[~azure.easm.models.ObservedLong]
        :keyword registries:
        :paramtype registries: list[~azure.easm.models.ObservedString]
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword technical_contacts:
        :paramtype technical_contacts: list[~azure.easm.models.ObservedString]
        :keyword technical_names:
        :paramtype technical_names: list[~azure.easm.models.ObservedString]
        :keyword technical_orgs:
        :paramtype technical_orgs: list[~azure.easm.models.ObservedString]
        :keyword technical_phones:
        :paramtype technical_phones: list[~azure.easm.models.ObservedString]
        """
        super().__init__(**kwargs)
        self.admin_contacts = admin_contacts
        self.admin_names = admin_names
        self.admin_orgs = admin_orgs
        self.admin_phones = admin_phones
        self.as_names = as_names
        self.asn = asn
        self.count = count
        self.countries = countries
        self.detailed_from_whois_at = detailed_from_whois_at
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.org_ids = org_ids
        self.org_names = org_names
        self.registrant_contacts = registrant_contacts
        self.registrant_names = registrant_names
        self.registrant_phones = registrant_phones
        self.registrar_created_at = registrar_created_at
        self.registrar_names = registrar_names
        self.registrar_updated_at = registrar_updated_at
        self.registries = registries
        self.sources = sources
        self.technical_contacts = technical_contacts
        self.technical_names = technical_names
        self.technical_orgs = technical_orgs
        self.technical_phones = technical_phones


class AssetResponse(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """AssetResponse.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    AsAssetResponse, ContactAssetResponse, DomainAssetResponse, HostAssetResponse,
    IpAddressAssetResponse, IpBlockAssetResponse, PageAssetResponse, SslCertAssetResponse

    All required parameters must be populated in order to send to Azure.

    :ivar audit_trail:
    :vartype audit_trail: list[~azure.easm.models.AuditTrailItem]
    :ivar created_date:
    :vartype created_date: ~datetime.datetime
    :ivar disco_group_name:
    :vartype disco_group_name: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar external_id:
    :vartype external_id: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Required. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AssetResponseKind
    :ivar labels:
    :vartype labels: list[~azure.easm.models.LabelResource]
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    :ivar state: Known values are: "candidate", "confirmed", "dismissed", "candidateInvestigate",
     "associatedPartner", "associatedThirdparty", and "archived".
    :vartype state: str or ~azure.easm.models.AssetResponseState
    :ivar updated_date:
    :vartype updated_date: ~datetime.datetime
    :ivar uuid:
    :vartype uuid: str
    :ivar wildcard:
    :vartype wildcard: bool
    """

    _validation = {
        "kind": {"required": True},
    }

    _attribute_map = {
        "audit_trail": {"key": "auditTrail", "type": "[AuditTrailItem]"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "disco_group_name": {"key": "discoGroupName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "labels": {"key": "labels", "type": "[LabelResource]"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
        "uuid": {"key": "uuid", "type": "str"},
        "wildcard": {"key": "wildcard", "type": "bool"},
    }

    _subtype_map = {
        "kind": {
            "as": "AsAssetResponse",
            "contact": "ContactAssetResponse",
            "domain": "DomainAssetResponse",
            "host": "HostAssetResponse",
            "ipAddress": "IpAddressAssetResponse",
            "ipBlock": "IpBlockAssetResponse",
            "page": "PageAssetResponse",
            "sslCert": "SslCertAssetResponse",
        }
    }

    def __init__(
        self,
        *,
        audit_trail: Optional[List["_models.AuditTrailItem"]] = None,
        created_date: Optional[datetime.datetime] = None,
        disco_group_name: Optional[str] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        labels: Optional[List["_models.LabelResource"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        state: Optional[Union[str, "_models.AssetResponseState"]] = None,
        updated_date: Optional[datetime.datetime] = None,
        uuid: Optional[str] = None,
        wildcard: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword audit_trail:
        :paramtype audit_trail: list[~azure.easm.models.AuditTrailItem]
        :keyword created_date:
        :paramtype created_date: ~datetime.datetime
        :keyword disco_group_name:
        :paramtype disco_group_name: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword external_id:
        :paramtype external_id: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword labels:
        :paramtype labels: list[~azure.easm.models.LabelResource]
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        :keyword state: Known values are: "candidate", "confirmed", "dismissed",
         "candidateInvestigate", "associatedPartner", "associatedThirdparty", and "archived".
        :paramtype state: str or ~azure.easm.models.AssetResponseState
        :keyword updated_date:
        :paramtype updated_date: ~datetime.datetime
        :keyword uuid:
        :paramtype uuid: str
        :keyword wildcard:
        :paramtype wildcard: bool
        """
        super().__init__(**kwargs)
        self.audit_trail = audit_trail
        self.created_date = created_date
        self.disco_group_name = disco_group_name
        self.display_name = display_name
        self.external_id = external_id
        self.id = id
        self.kind = None  # type: Optional[str]
        self.labels = labels
        self.name = name
        self.reason = reason
        self.state = state
        self.updated_date = updated_date
        self.uuid = uuid
        self.wildcard = wildcard


class AsAssetResponse(AssetResponse):  # pylint: disable=too-many-instance-attributes
    """AsAssetResponse.

    All required parameters must be populated in order to send to Azure.

    :ivar audit_trail:
    :vartype audit_trail: list[~azure.easm.models.AuditTrailItem]
    :ivar created_date:
    :vartype created_date: ~datetime.datetime
    :ivar disco_group_name:
    :vartype disco_group_name: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar external_id:
    :vartype external_id: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Required. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AssetResponseKind
    :ivar labels:
    :vartype labels: list[~azure.easm.models.LabelResource]
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    :ivar state: Known values are: "candidate", "confirmed", "dismissed", "candidateInvestigate",
     "associatedPartner", "associatedThirdparty", and "archived".
    :vartype state: str or ~azure.easm.models.AssetResponseState
    :ivar updated_date:
    :vartype updated_date: ~datetime.datetime
    :ivar uuid:
    :vartype uuid: str
    :ivar wildcard:
    :vartype wildcard: bool
    :ivar asset: Required.
    :vartype asset: ~azure.easm.models.AsAsset
    """

    _validation = {
        "kind": {"required": True},
        "asset": {"required": True},
    }

    _attribute_map = {
        "audit_trail": {"key": "auditTrail", "type": "[AuditTrailItem]"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "disco_group_name": {"key": "discoGroupName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "labels": {"key": "labels", "type": "[LabelResource]"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
        "uuid": {"key": "uuid", "type": "str"},
        "wildcard": {"key": "wildcard", "type": "bool"},
        "asset": {"key": "asset", "type": "AsAsset"},
    }

    def __init__(
        self,
        *,
        asset: "_models.AsAsset",
        audit_trail: Optional[List["_models.AuditTrailItem"]] = None,
        created_date: Optional[datetime.datetime] = None,
        disco_group_name: Optional[str] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        labels: Optional[List["_models.LabelResource"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        state: Optional[Union[str, "_models.AssetResponseState"]] = None,
        updated_date: Optional[datetime.datetime] = None,
        uuid: Optional[str] = None,
        wildcard: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword audit_trail:
        :paramtype audit_trail: list[~azure.easm.models.AuditTrailItem]
        :keyword created_date:
        :paramtype created_date: ~datetime.datetime
        :keyword disco_group_name:
        :paramtype disco_group_name: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword external_id:
        :paramtype external_id: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword labels:
        :paramtype labels: list[~azure.easm.models.LabelResource]
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        :keyword state: Known values are: "candidate", "confirmed", "dismissed",
         "candidateInvestigate", "associatedPartner", "associatedThirdparty", and "archived".
        :paramtype state: str or ~azure.easm.models.AssetResponseState
        :keyword updated_date:
        :paramtype updated_date: ~datetime.datetime
        :keyword uuid:
        :paramtype uuid: str
        :keyword wildcard:
        :paramtype wildcard: bool
        :keyword asset: Required.
        :paramtype asset: ~azure.easm.models.AsAsset
        """
        super().__init__(
            audit_trail=audit_trail,
            created_date=created_date,
            disco_group_name=disco_group_name,
            display_name=display_name,
            external_id=external_id,
            id=id,
            labels=labels,
            name=name,
            reason=reason,
            state=state,
            updated_date=updated_date,
            uuid=uuid,
            wildcard=wildcard,
            **kwargs
        )
        self.kind = "as"  # type: str
        self.asset = asset


class AssetLabelRequest(_serialization.Model):
    """Any Labels to update the asset with.

    :ivar transfers: A list of asset types to cascade the updates to. Known values are: "as",
     "contact", "domain", "host", "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype transfers: str or ~azure.easm.models.AssetLabelRequestTransfers
    :ivar values: A map of labels to their state on this asset. Not currently supported.
    :vartype values: dict[str, bool]
    """

    _attribute_map = {
        "transfers": {"key": "transfers", "type": "str"},
        "values": {"key": "values", "type": "{bool}"},
    }

    def __init__(
        self,
        *,
        transfers: Optional[Union[str, "_models.AssetLabelRequestTransfers"]] = None,
        values: Optional[Dict[str, bool]] = None,
        **kwargs
    ):
        """
        :keyword transfers: A list of asset types to cascade the updates to. Known values are: "as",
         "contact", "domain", "host", "ipAddress", "ipBlock", "page", and "sslCert".
        :paramtype transfers: str or ~azure.easm.models.AssetLabelRequestTransfers
        :keyword values: A map of labels to their state on this asset. Not currently supported.
        :paramtype values: dict[str, bool]
        """
        super().__init__(**kwargs)
        self.transfers = transfers
        self.values = values


class AssetPageResponse(_serialization.Model):
    """AssetPageResponse.

    :ivar content:
    :vartype content: list[~azure.easm.models.AssetResponse]
    :ivar first:
    :vartype first: bool
    :ivar last:
    :vartype last: bool
    :ivar mark:
    :vartype mark: str
    :ivar next_link:
    :vartype next_link: str
    :ivar number:
    :vartype number: int
    :ivar number_of_elements:
    :vartype number_of_elements: int
    :ivar size:
    :vartype size: int
    :ivar total_elements:
    :vartype total_elements: int
    :ivar total_pages:
    :vartype total_pages: int
    """

    _attribute_map = {
        "content": {"key": "content", "type": "[AssetResponse]"},
        "first": {"key": "first", "type": "bool"},
        "last": {"key": "last", "type": "bool"},
        "mark": {"key": "mark", "type": "str"},
        "next_link": {"key": "nextLink", "type": "str"},
        "number": {"key": "number", "type": "int"},
        "number_of_elements": {"key": "numberOfElements", "type": "int"},
        "size": {"key": "size", "type": "int"},
        "total_elements": {"key": "totalElements", "type": "int"},
        "total_pages": {"key": "totalPages", "type": "int"},
    }

    def __init__(
        self,
        *,
        content: Optional[List["_models.AssetResponse"]] = None,
        first: Optional[bool] = None,
        last: Optional[bool] = None,
        mark: Optional[str] = None,
        next_link: Optional[str] = None,
        number: Optional[int] = None,
        number_of_elements: Optional[int] = None,
        size: Optional[int] = None,
        total_elements: Optional[int] = None,
        total_pages: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword content:
        :paramtype content: list[~azure.easm.models.AssetResponse]
        :keyword first:
        :paramtype first: bool
        :keyword last:
        :paramtype last: bool
        :keyword mark:
        :paramtype mark: str
        :keyword next_link:
        :paramtype next_link: str
        :keyword number:
        :paramtype number: int
        :keyword number_of_elements:
        :paramtype number_of_elements: int
        :keyword size:
        :paramtype size: int
        :keyword total_elements:
        :paramtype total_elements: int
        :keyword total_pages:
        :paramtype total_pages: int
        """
        super().__init__(**kwargs)
        self.content = content
        self.first = first
        self.last = last
        self.mark = mark
        self.next_link = next_link
        self.number = number
        self.number_of_elements = number_of_elements
        self.size = size
        self.total_elements = total_elements
        self.total_pages = total_pages


class AssetSecurityPolicy(_serialization.Model):
    """AssetSecurityPolicy.

    :ivar count:
    :vartype count: int
    :ivar description:
    :vartype description: str
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar is_affected:
    :vartype is_affected: bool
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar policy_name:
    :vartype policy_name: str
    :ivar recent:
    :vartype recent: bool
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "description": {"key": "description", "type": "str"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "is_affected": {"key": "isAffected", "type": "bool"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "policy_name": {"key": "policyName", "type": "str"},
        "recent": {"key": "recent", "type": "bool"},
        "sources": {"key": "sources", "type": "[Source]"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        description: Optional[str] = None,
        first_seen: Optional[datetime.datetime] = None,
        is_affected: Optional[bool] = None,
        last_seen: Optional[datetime.datetime] = None,
        policy_name: Optional[str] = None,
        recent: Optional[bool] = None,
        sources: Optional[List["_models.Source"]] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword description:
        :paramtype description: str
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword is_affected:
        :paramtype is_affected: bool
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword policy_name:
        :paramtype policy_name: str
        :keyword recent:
        :paramtype recent: bool
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        """
        super().__init__(**kwargs)
        self.count = count
        self.description = description
        self.first_seen = first_seen
        self.is_affected = is_affected
        self.last_seen = last_seen
        self.policy_name = policy_name
        self.recent = recent
        self.sources = sources


class AssetSummaryResponse(_serialization.Model):
    """AssetSummaryResponse.

    :ivar count:
    :vartype count: int
    :ivar description:
    :vartype description: str
    :ivar display_name:
    :vartype display_name: str
    :ivar filter:
    :vartype filter: str
    :ivar label_name:
    :vartype label_name: str
    :ivar link:
    :vartype link: str
    :ivar metric:
    :vartype metric: str
    :ivar metric_category:
    :vartype metric_category: str
    :ivar updated_at:
    :vartype updated_at: ~datetime.datetime
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "description": {"key": "description", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "filter": {"key": "filter", "type": "str"},
        "label_name": {"key": "labelName", "type": "str"},
        "link": {"key": "link", "type": "str"},
        "metric": {"key": "metric", "type": "str"},
        "metric_category": {"key": "metricCategory", "type": "str"},
        "updated_at": {"key": "updatedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        filter: Optional[str] = None,  # pylint: disable=redefined-builtin
        label_name: Optional[str] = None,
        link: Optional[str] = None,
        metric: Optional[str] = None,
        metric_category: Optional[str] = None,
        updated_at: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword description:
        :paramtype description: str
        :keyword display_name:
        :paramtype display_name: str
        :keyword filter:
        :paramtype filter: str
        :keyword label_name:
        :paramtype label_name: str
        :keyword link:
        :paramtype link: str
        :keyword metric:
        :paramtype metric: str
        :keyword metric_category:
        :paramtype metric_category: str
        :keyword updated_at:
        :paramtype updated_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.count = count
        self.description = description
        self.display_name = display_name
        self.filter = filter
        self.label_name = label_name
        self.link = link
        self.metric = metric
        self.metric_category = metric_category
        self.updated_at = updated_at


class AssetUpdateRequest(_serialization.Model):
    """A request body used to update an asset.

    :ivar external_id: A string which can be used to identify the asset in external systems.
    :vartype external_id: str
    :ivar labels: Any Labels to update the asset with.
    :vartype labels: ~azure.easm.models.AssetLabelRequest
    :ivar state: The state to update the asset to. Known values are: "candidate", "confirmed",
     "dismissed", "candidateInvestigate", "associatedPartner", and "associatedThirdparty".
    :vartype state: str or ~azure.easm.models.AssetUpdateRequestState
    """

    _attribute_map = {
        "external_id": {"key": "externalId", "type": "str"},
        "labels": {"key": "labels", "type": "AssetLabelRequest"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(
        self,
        *,
        external_id: Optional[str] = None,
        labels: Optional["_models.AssetLabelRequest"] = None,
        state: Optional[Union[str, "_models.AssetUpdateRequestState"]] = None,
        **kwargs
    ):
        """
        :keyword external_id: A string which can be used to identify the asset in external systems.
        :paramtype external_id: str
        :keyword labels: Any Labels to update the asset with.
        :paramtype labels: ~azure.easm.models.AssetLabelRequest
        :keyword state: The state to update the asset to. Known values are: "candidate", "confirmed",
         "dismissed", "candidateInvestigate", "associatedPartner", and "associatedThirdparty".
        :paramtype state: str or ~azure.easm.models.AssetUpdateRequestState
        """
        super().__init__(**kwargs)
        self.external_id = external_id
        self.labels = labels
        self.state = state


class Attribute(_serialization.Model):
    """Attribute.

    :ivar attribute_type:
    :vartype attribute_type: str
    :ivar attribute_value:
    :vartype attribute_value: str
    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    """

    _attribute_map = {
        "attribute_type": {"key": "attributeType", "type": "str"},
        "attribute_value": {"key": "attributeValue", "type": "str"},
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "sources": {"key": "sources", "type": "[Source]"},
    }

    def __init__(
        self,
        *,
        attribute_type: Optional[str] = None,
        attribute_value: Optional[str] = None,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        sources: Optional[List["_models.Source"]] = None,
        **kwargs
    ):
        """
        :keyword attribute_type:
        :paramtype attribute_type: str
        :keyword attribute_value:
        :paramtype attribute_value: str
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        """
        super().__init__(**kwargs)
        self.attribute_type = attribute_type
        self.attribute_value = attribute_value
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent
        self.sources = sources


class AuditTrailItem(_serialization.Model):
    """AuditTrailItem.

    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AuditTrailItemKind
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    """

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        kind: Optional[Union[str, "_models.AuditTrailItemKind"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword kind: The kind of asset. Known values are: "as", "contact", "domain", "host",
         "ipAddress", "ipBlock", "page", and "sslCert".
        :paramtype kind: str or ~azure.easm.models.AuditTrailItemKind
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.id = id
        self.kind = kind
        self.name = name
        self.reason = reason


class Banner(_serialization.Model):
    """Banner.

    :ivar banner:
    :vartype banner: str
    :ivar banner_metadata:
    :vartype banner_metadata: str
    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar port:
    :vartype port: int
    :ivar recent:
    :vartype recent: bool
    :ivar scan_type:
    :vartype scan_type: str
    :ivar sha256:
    :vartype sha256: str
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    """

    _attribute_map = {
        "banner": {"key": "banner", "type": "str"},
        "banner_metadata": {"key": "bannerMetadata", "type": "str"},
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "port": {"key": "port", "type": "int"},
        "recent": {"key": "recent", "type": "bool"},
        "scan_type": {"key": "scanType", "type": "str"},
        "sha256": {"key": "sha256", "type": "str"},
        "sources": {"key": "sources", "type": "[Source]"},
    }

    def __init__(
        self,
        *,
        banner: Optional[str] = None,
        banner_metadata: Optional[str] = None,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        port: Optional[int] = None,
        recent: Optional[bool] = None,
        scan_type: Optional[str] = None,
        sha256: Optional[str] = None,
        sources: Optional[List["_models.Source"]] = None,
        **kwargs
    ):
        """
        :keyword banner:
        :paramtype banner: str
        :keyword banner_metadata:
        :paramtype banner_metadata: str
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword port:
        :paramtype port: int
        :keyword recent:
        :paramtype recent: bool
        :keyword scan_type:
        :paramtype scan_type: str
        :keyword sha256:
        :paramtype sha256: str
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        """
        super().__init__(**kwargs)
        self.banner = banner
        self.banner_metadata = banner_metadata
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.port = port
        self.recent = recent
        self.scan_type = scan_type
        self.sha256 = sha256
        self.sources = sources


class ContactAsset(_serialization.Model):
    """ContactAsset.

    :ivar count:
    :vartype count: int
    :ivar email:
    :vartype email: str
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar names:
    :vartype names: list[~azure.easm.models.ObservedString]
    :ivar organizations:
    :vartype organizations: list[~azure.easm.models.ObservedString]
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "email": {"key": "email", "type": "str"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "names": {"key": "names", "type": "[ObservedString]"},
        "organizations": {"key": "organizations", "type": "[ObservedString]"},
        "sources": {"key": "sources", "type": "[Source]"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        email: Optional[str] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        names: Optional[List["_models.ObservedString"]] = None,
        organizations: Optional[List["_models.ObservedString"]] = None,
        sources: Optional[List["_models.Source"]] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword email:
        :paramtype email: str
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword names:
        :paramtype names: list[~azure.easm.models.ObservedString]
        :keyword organizations:
        :paramtype organizations: list[~azure.easm.models.ObservedString]
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        """
        super().__init__(**kwargs)
        self.count = count
        self.email = email
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.names = names
        self.organizations = organizations
        self.sources = sources


class ContactAssetResponse(AssetResponse):  # pylint: disable=too-many-instance-attributes
    """ContactAssetResponse.

    All required parameters must be populated in order to send to Azure.

    :ivar audit_trail:
    :vartype audit_trail: list[~azure.easm.models.AuditTrailItem]
    :ivar created_date:
    :vartype created_date: ~datetime.datetime
    :ivar disco_group_name:
    :vartype disco_group_name: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar external_id:
    :vartype external_id: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Required. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AssetResponseKind
    :ivar labels:
    :vartype labels: list[~azure.easm.models.LabelResource]
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    :ivar state: Known values are: "candidate", "confirmed", "dismissed", "candidateInvestigate",
     "associatedPartner", "associatedThirdparty", and "archived".
    :vartype state: str or ~azure.easm.models.AssetResponseState
    :ivar updated_date:
    :vartype updated_date: ~datetime.datetime
    :ivar uuid:
    :vartype uuid: str
    :ivar wildcard:
    :vartype wildcard: bool
    :ivar asset: Required.
    :vartype asset: ~azure.easm.models.ContactAsset
    """

    _validation = {
        "kind": {"required": True},
        "asset": {"required": True},
    }

    _attribute_map = {
        "audit_trail": {"key": "auditTrail", "type": "[AuditTrailItem]"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "disco_group_name": {"key": "discoGroupName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "labels": {"key": "labels", "type": "[LabelResource]"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
        "uuid": {"key": "uuid", "type": "str"},
        "wildcard": {"key": "wildcard", "type": "bool"},
        "asset": {"key": "asset", "type": "ContactAsset"},
    }

    def __init__(
        self,
        *,
        asset: "_models.ContactAsset",
        audit_trail: Optional[List["_models.AuditTrailItem"]] = None,
        created_date: Optional[datetime.datetime] = None,
        disco_group_name: Optional[str] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        labels: Optional[List["_models.LabelResource"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        state: Optional[Union[str, "_models.AssetResponseState"]] = None,
        updated_date: Optional[datetime.datetime] = None,
        uuid: Optional[str] = None,
        wildcard: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword audit_trail:
        :paramtype audit_trail: list[~azure.easm.models.AuditTrailItem]
        :keyword created_date:
        :paramtype created_date: ~datetime.datetime
        :keyword disco_group_name:
        :paramtype disco_group_name: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword external_id:
        :paramtype external_id: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword labels:
        :paramtype labels: list[~azure.easm.models.LabelResource]
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        :keyword state: Known values are: "candidate", "confirmed", "dismissed",
         "candidateInvestigate", "associatedPartner", "associatedThirdparty", and "archived".
        :paramtype state: str or ~azure.easm.models.AssetResponseState
        :keyword updated_date:
        :paramtype updated_date: ~datetime.datetime
        :keyword uuid:
        :paramtype uuid: str
        :keyword wildcard:
        :paramtype wildcard: bool
        :keyword asset: Required.
        :paramtype asset: ~azure.easm.models.ContactAsset
        """
        super().__init__(
            audit_trail=audit_trail,
            created_date=created_date,
            disco_group_name=disco_group_name,
            display_name=display_name,
            external_id=external_id,
            id=id,
            labels=labels,
            name=name,
            reason=reason,
            state=state,
            updated_date=updated_date,
            uuid=uuid,
            wildcard=wildcard,
            **kwargs
        )
        self.kind = "contact"  # type: str
        self.asset = asset


class Cookie(_serialization.Model):
    """Cookie.

    :ivar cookie_domain:
    :vartype cookie_domain: str
    :ivar cookie_expiry_date:
    :vartype cookie_expiry_date: ~datetime.datetime
    :ivar cookie_name:
    :vartype cookie_name: str
    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    """

    _attribute_map = {
        "cookie_domain": {"key": "cookieDomain", "type": "str"},
        "cookie_expiry_date": {"key": "cookieExpiryDate", "type": "iso-8601"},
        "cookie_name": {"key": "cookieName", "type": "str"},
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
    }

    def __init__(
        self,
        *,
        cookie_domain: Optional[str] = None,
        cookie_expiry_date: Optional[datetime.datetime] = None,
        cookie_name: Optional[str] = None,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword cookie_domain:
        :paramtype cookie_domain: str
        :keyword cookie_expiry_date:
        :paramtype cookie_expiry_date: ~datetime.datetime
        :keyword cookie_name:
        :paramtype cookie_name: str
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        """
        super().__init__(**kwargs)
        self.cookie_domain = cookie_domain
        self.cookie_expiry_date = cookie_expiry_date
        self.cookie_name = cookie_name
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent


class Cve(_serialization.Model):
    """Cve.

    :ivar cvss3_summary:
    :vartype cvss3_summary: ~azure.easm.models.CVSS3Summary
    :ivar cvss_score:
    :vartype cvss_score: float
    :ivar cwe_id:
    :vartype cwe_id: str
    :ivar name:
    :vartype name: str
    """

    _attribute_map = {
        "cvss3_summary": {"key": "cvss3Summary", "type": "CVSS3Summary"},
        "cvss_score": {"key": "cvssScore", "type": "float"},
        "cwe_id": {"key": "cweId", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(
        self,
        *,
        cvss3_summary: Optional["_models.CVSS3Summary"] = None,
        cvss_score: Optional[float] = None,
        cwe_id: Optional[str] = None,
        name: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword cvss3_summary:
        :paramtype cvss3_summary: ~azure.easm.models.CVSS3Summary
        :keyword cvss_score:
        :paramtype cvss_score: float
        :keyword cwe_id:
        :paramtype cwe_id: str
        :keyword name:
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.cvss3_summary = cvss3_summary
        self.cvss_score = cvss_score
        self.cwe_id = cwe_id
        self.name = name


class CVSS3Summary(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """CVSS3Summary.

    :ivar attack_complexity:
    :vartype attack_complexity: str
    :ivar attack_vector:
    :vartype attack_vector: str
    :ivar availability_impact:
    :vartype availability_impact: str
    :ivar base_score:
    :vartype base_score: float
    :ivar base_severity:
    :vartype base_severity: str
    :ivar confidentiality_impact:
    :vartype confidentiality_impact: str
    :ivar exploit_code_maturity:
    :vartype exploit_code_maturity: str
    :ivar exploitability_score:
    :vartype exploitability_score: float
    :ivar impact_score:
    :vartype impact_score: float
    :ivar integrity_impact:
    :vartype integrity_impact: str
    :ivar privileges_required:
    :vartype privileges_required: str
    :ivar remediation_level:
    :vartype remediation_level: str
    :ivar report_confidence:
    :vartype report_confidence: str
    :ivar scope:
    :vartype scope: str
    :ivar user_interaction:
    :vartype user_interaction: str
    :ivar vector_string:
    :vartype vector_string: str
    :ivar version:
    :vartype version: str
    """

    _attribute_map = {
        "attack_complexity": {"key": "attackComplexity", "type": "str"},
        "attack_vector": {"key": "attackVector", "type": "str"},
        "availability_impact": {"key": "availabilityImpact", "type": "str"},
        "base_score": {"key": "baseScore", "type": "float"},
        "base_severity": {"key": "baseSeverity", "type": "str"},
        "confidentiality_impact": {"key": "confidentialityImpact", "type": "str"},
        "exploit_code_maturity": {"key": "exploitCodeMaturity", "type": "str"},
        "exploitability_score": {"key": "exploitabilityScore", "type": "float"},
        "impact_score": {"key": "impactScore", "type": "float"},
        "integrity_impact": {"key": "integrityImpact", "type": "str"},
        "privileges_required": {"key": "privilegesRequired", "type": "str"},
        "remediation_level": {"key": "remediationLevel", "type": "str"},
        "report_confidence": {"key": "reportConfidence", "type": "str"},
        "scope": {"key": "scope", "type": "str"},
        "user_interaction": {"key": "userInteraction", "type": "str"},
        "vector_string": {"key": "vectorString", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(
        self,
        *,
        attack_complexity: Optional[str] = None,
        attack_vector: Optional[str] = None,
        availability_impact: Optional[str] = None,
        base_score: Optional[float] = None,
        base_severity: Optional[str] = None,
        confidentiality_impact: Optional[str] = None,
        exploit_code_maturity: Optional[str] = None,
        exploitability_score: Optional[float] = None,
        impact_score: Optional[float] = None,
        integrity_impact: Optional[str] = None,
        privileges_required: Optional[str] = None,
        remediation_level: Optional[str] = None,
        report_confidence: Optional[str] = None,
        scope: Optional[str] = None,
        user_interaction: Optional[str] = None,
        vector_string: Optional[str] = None,
        version: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword attack_complexity:
        :paramtype attack_complexity: str
        :keyword attack_vector:
        :paramtype attack_vector: str
        :keyword availability_impact:
        :paramtype availability_impact: str
        :keyword base_score:
        :paramtype base_score: float
        :keyword base_severity:
        :paramtype base_severity: str
        :keyword confidentiality_impact:
        :paramtype confidentiality_impact: str
        :keyword exploit_code_maturity:
        :paramtype exploit_code_maturity: str
        :keyword exploitability_score:
        :paramtype exploitability_score: float
        :keyword impact_score:
        :paramtype impact_score: float
        :keyword integrity_impact:
        :paramtype integrity_impact: str
        :keyword privileges_required:
        :paramtype privileges_required: str
        :keyword remediation_level:
        :paramtype remediation_level: str
        :keyword report_confidence:
        :paramtype report_confidence: str
        :keyword scope:
        :paramtype scope: str
        :keyword user_interaction:
        :paramtype user_interaction: str
        :keyword vector_string:
        :paramtype vector_string: str
        :keyword version:
        :paramtype version: str
        """
        super().__init__(**kwargs)
        self.attack_complexity = attack_complexity
        self.attack_vector = attack_vector
        self.availability_impact = availability_impact
        self.base_score = base_score
        self.base_severity = base_severity
        self.confidentiality_impact = confidentiality_impact
        self.exploit_code_maturity = exploit_code_maturity
        self.exploitability_score = exploitability_score
        self.impact_score = impact_score
        self.integrity_impact = integrity_impact
        self.privileges_required = privileges_required
        self.remediation_level = remediation_level
        self.report_confidence = report_confidence
        self.scope = scope
        self.user_interaction = user_interaction
        self.vector_string = vector_string
        self.version = version


class DataConnectionPageResponse(_serialization.Model):
    """DataConnectionPageResponse.

    :ivar content: The items in the current page of results.
    :vartype content: list[~azure.easm.models.DataConnectionResponse]
    :ivar first: Whether or not this is the first page of results.
    :vartype first: bool
    :ivar last: Whether or not this is the last page of results.
    :vartype last: bool
    :ivar next_link: The link to access the next page of results.  Not set if at the end of the
     result set.
    :vartype next_link: str
    :ivar number: The page number requested.
    :vartype number: int
    :ivar number_of_elements: The number of items in the current page of results.
    :vartype number_of_elements: int
    :ivar size: The page size requested.
    :vartype size: int
    :ivar total_elements: The total number of items available in the full result set.
    :vartype total_elements: int
    :ivar total_pages: The total number of pages available in the full result set.
    :vartype total_pages: int
    """

    _attribute_map = {
        "content": {"key": "content", "type": "[DataConnectionResponse]"},
        "first": {"key": "first", "type": "bool"},
        "last": {"key": "last", "type": "bool"},
        "next_link": {"key": "nextLink", "type": "str"},
        "number": {"key": "number", "type": "int"},
        "number_of_elements": {"key": "numberOfElements", "type": "int"},
        "size": {"key": "size", "type": "int"},
        "total_elements": {"key": "totalElements", "type": "int"},
        "total_pages": {"key": "totalPages", "type": "int"},
    }

    def __init__(
        self,
        *,
        content: Optional[List["_models.DataConnectionResponse"]] = None,
        first: Optional[bool] = None,
        last: Optional[bool] = None,
        next_link: Optional[str] = None,
        number: Optional[int] = None,
        number_of_elements: Optional[int] = None,
        size: Optional[int] = None,
        total_elements: Optional[int] = None,
        total_pages: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword content: The items in the current page of results.
        :paramtype content: list[~azure.easm.models.DataConnectionResponse]
        :keyword first: Whether or not this is the first page of results.
        :paramtype first: bool
        :keyword last: Whether or not this is the last page of results.
        :paramtype last: bool
        :keyword next_link: The link to access the next page of results.  Not set if at the end of the
         result set.
        :paramtype next_link: str
        :keyword number: The page number requested.
        :paramtype number: int
        :keyword number_of_elements: The number of items in the current page of results.
        :paramtype number_of_elements: int
        :keyword size: The page size requested.
        :paramtype size: int
        :keyword total_elements: The total number of items available in the full result set.
        :paramtype total_elements: int
        :keyword total_pages: The total number of pages available in the full result set.
        :paramtype total_pages: int
        """
        super().__init__(**kwargs)
        self.content = content
        self.first = first
        self.last = last
        self.next_link = next_link
        self.number = number
        self.number_of_elements = number_of_elements
        self.size = size
        self.total_elements = total_elements
        self.total_pages = total_pages


class DataConnectionRequest(_serialization.Model):
    """DataConnectionRequest.

    :ivar connection_string: The connection string for the data connection.
    :vartype connection_string: str
    :ivar kind: The kind of data connection. "sentinel"
    :vartype kind: str or ~azure.easm.models.DataConnectionRequestKind
    :ivar options: Any connection specific options.
    :vartype options: str
    """

    _attribute_map = {
        "connection_string": {"key": "connectionString", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "options": {"key": "options", "type": "str"},
    }

    def __init__(
        self,
        *,
        connection_string: Optional[str] = None,
        kind: Optional[Union[str, "_models.DataConnectionRequestKind"]] = None,
        options: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword connection_string: The connection string for the data connection.
        :paramtype connection_string: str
        :keyword kind: The kind of data connection. "sentinel"
        :paramtype kind: str or ~azure.easm.models.DataConnectionRequestKind
        :keyword options: Any connection specific options.
        :paramtype options: str
        """
        super().__init__(**kwargs)
        self.connection_string = connection_string
        self.kind = kind
        self.options = options


class DataConnectionResponse(_serialization.Model):
    """DataConnectionResponse.

    :ivar connection_string: The connection string for the data connection.
    :vartype connection_string: str
    :ivar created_date: The date the data connection was created.
    :vartype created_date: ~datetime.datetime
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of data connection. "sentinel"
    :vartype kind: str or ~azure.easm.models.DataConnectionResponseKind
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar options: Any connection specific options.
    :vartype options: str
    :ivar updated_date: The date the data connection was last updated.
    :vartype updated_date: ~datetime.datetime
    """

    _attribute_map = {
        "connection_string": {"key": "connectionString", "type": "str"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "display_name": {"key": "displayName", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "options": {"key": "options", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        connection_string: Optional[str] = None,
        created_date: Optional[datetime.datetime] = None,
        display_name: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        kind: Optional[Union[str, "_models.DataConnectionResponseKind"]] = None,
        name: Optional[str] = None,
        options: Optional[str] = None,
        updated_date: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword connection_string: The connection string for the data connection.
        :paramtype connection_string: str
        :keyword created_date: The date the data connection was created.
        :paramtype created_date: ~datetime.datetime
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword kind: The kind of data connection. "sentinel"
        :paramtype kind: str or ~azure.easm.models.DataConnectionResponseKind
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword options: Any connection specific options.
        :paramtype options: str
        :keyword updated_date: The date the data connection was last updated.
        :paramtype updated_date: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.connection_string = connection_string
        self.created_date = created_date
        self.display_name = display_name
        self.id = id
        self.kind = kind
        self.name = name
        self.options = options
        self.updated_date = updated_date


class DependentResource(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """DependentResource.

    :ivar host:
    :vartype host: str
    :ivar cached:
    :vartype cached: bool
    :ivar content_type:
    :vartype content_type: str
    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar first_seen_crawl_guid:
    :vartype first_seen_crawl_guid: str
    :ivar first_seen_page_guid:
    :vartype first_seen_page_guid: str
    :ivar first_seen_resource_guid:
    :vartype first_seen_resource_guid: str
    :ivar last_observed_actual_sri_hash:
    :vartype last_observed_actual_sri_hash: str
    :ivar last_observed_expected_sri_hash:
    :vartype last_observed_expected_sri_hash: str
    :ivar last_observed_validation:
    :vartype last_observed_validation: ~datetime.datetime
    :ivar last_observed_violation:
    :vartype last_observed_violation: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar last_seen_crawl_guid:
    :vartype last_seen_crawl_guid: str
    :ivar last_seen_page_guid:
    :vartype last_seen_page_guid: str
    :ivar last_seen_resource_guid:
    :vartype last_seen_resource_guid: str
    :ivar md5:
    :vartype md5: str
    :ivar response_body_minhash:
    :vartype response_body_minhash: list[int]
    :ivar response_body_size:
    :vartype response_body_size: int
    :ivar sha256:
    :vartype sha256: str
    :ivar sha384:
    :vartype sha384: str
    :ivar sha512:
    :vartype sha512: str
    :ivar sri_checks:
    :vartype sri_checks: list[~azure.easm.models.SubResourceIntegrityCheck]
    :ivar url:
    :vartype url: str
    """

    _attribute_map = {
        "host": {"key": "host", "type": "str"},
        "cached": {"key": "cached", "type": "bool"},
        "content_type": {"key": "contentType", "type": "str"},
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "first_seen_crawl_guid": {"key": "firstSeenCrawlGuid", "type": "str"},
        "first_seen_page_guid": {"key": "firstSeenPageGuid", "type": "str"},
        "first_seen_resource_guid": {"key": "firstSeenResourceGuid", "type": "str"},
        "last_observed_actual_sri_hash": {"key": "lastObservedActualSriHash", "type": "str"},
        "last_observed_expected_sri_hash": {"key": "lastObservedExpectedSriHash", "type": "str"},
        "last_observed_validation": {"key": "lastObservedValidation", "type": "iso-8601"},
        "last_observed_violation": {"key": "lastObservedViolation", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "last_seen_crawl_guid": {"key": "lastSeenCrawlGuid", "type": "str"},
        "last_seen_page_guid": {"key": "lastSeenPageGuid", "type": "str"},
        "last_seen_resource_guid": {"key": "lastSeenResourceGuid", "type": "str"},
        "md5": {"key": "md5", "type": "str"},
        "response_body_minhash": {"key": "responseBodyMinhash", "type": "[int]"},
        "response_body_size": {"key": "responseBodySize", "type": "int"},
        "sha256": {"key": "sha256", "type": "str"},
        "sha384": {"key": "sha384", "type": "str"},
        "sha512": {"key": "sha512", "type": "str"},
        "sri_checks": {"key": "sriChecks", "type": "[SubResourceIntegrityCheck]"},
        "url": {"key": "url", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        host: Optional[str] = None,
        cached: Optional[bool] = None,
        content_type: Optional[str] = None,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        first_seen_crawl_guid: Optional[str] = None,
        first_seen_page_guid: Optional[str] = None,
        first_seen_resource_guid: Optional[str] = None,
        last_observed_actual_sri_hash: Optional[str] = None,
        last_observed_expected_sri_hash: Optional[str] = None,
        last_observed_validation: Optional[datetime.datetime] = None,
        last_observed_violation: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        last_seen_crawl_guid: Optional[str] = None,
        last_seen_page_guid: Optional[str] = None,
        last_seen_resource_guid: Optional[str] = None,
        md5: Optional[str] = None,
        response_body_minhash: Optional[List[int]] = None,
        response_body_size: Optional[int] = None,
        sha256: Optional[str] = None,
        sha384: Optional[str] = None,
        sha512: Optional[str] = None,
        sri_checks: Optional[List["_models.SubResourceIntegrityCheck"]] = None,
        url: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword host:
        :paramtype host: str
        :keyword cached:
        :paramtype cached: bool
        :keyword content_type:
        :paramtype content_type: str
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword first_seen_crawl_guid:
        :paramtype first_seen_crawl_guid: str
        :keyword first_seen_page_guid:
        :paramtype first_seen_page_guid: str
        :keyword first_seen_resource_guid:
        :paramtype first_seen_resource_guid: str
        :keyword last_observed_actual_sri_hash:
        :paramtype last_observed_actual_sri_hash: str
        :keyword last_observed_expected_sri_hash:
        :paramtype last_observed_expected_sri_hash: str
        :keyword last_observed_validation:
        :paramtype last_observed_validation: ~datetime.datetime
        :keyword last_observed_violation:
        :paramtype last_observed_violation: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword last_seen_crawl_guid:
        :paramtype last_seen_crawl_guid: str
        :keyword last_seen_page_guid:
        :paramtype last_seen_page_guid: str
        :keyword last_seen_resource_guid:
        :paramtype last_seen_resource_guid: str
        :keyword md5:
        :paramtype md5: str
        :keyword response_body_minhash:
        :paramtype response_body_minhash: list[int]
        :keyword response_body_size:
        :paramtype response_body_size: int
        :keyword sha256:
        :paramtype sha256: str
        :keyword sha384:
        :paramtype sha384: str
        :keyword sha512:
        :paramtype sha512: str
        :keyword sri_checks:
        :paramtype sri_checks: list[~azure.easm.models.SubResourceIntegrityCheck]
        :keyword url:
        :paramtype url: str
        """
        super().__init__(**kwargs)
        self.host = host
        self.cached = cached
        self.content_type = content_type
        self.count = count
        self.first_seen = first_seen
        self.first_seen_crawl_guid = first_seen_crawl_guid
        self.first_seen_page_guid = first_seen_page_guid
        self.first_seen_resource_guid = first_seen_resource_guid
        self.last_observed_actual_sri_hash = last_observed_actual_sri_hash
        self.last_observed_expected_sri_hash = last_observed_expected_sri_hash
        self.last_observed_validation = last_observed_validation
        self.last_observed_violation = last_observed_violation
        self.last_seen = last_seen
        self.last_seen_crawl_guid = last_seen_crawl_guid
        self.last_seen_page_guid = last_seen_page_guid
        self.last_seen_resource_guid = last_seen_resource_guid
        self.md5 = md5
        self.response_body_minhash = response_body_minhash
        self.response_body_size = response_body_size
        self.sha256 = sha256
        self.sha384 = sha384
        self.sha512 = sha512
        self.sri_checks = sri_checks
        self.url = url


class DiscoGroupPageResponse(_serialization.Model):
    """DiscoGroupPageResponse.

    :ivar content: The items in the current page of results.
    :vartype content: list[~azure.easm.models.DiscoGroupResponse]
    :ivar first: Whether or not this is the first page of results.
    :vartype first: bool
    :ivar last: Whether or not this is the last page of results.
    :vartype last: bool
    :ivar next_link: The link to access the next page of results.  Not set if at the end of the
     result set.
    :vartype next_link: str
    :ivar number: The page number requested.
    :vartype number: int
    :ivar number_of_elements: The number of items in the current page of results.
    :vartype number_of_elements: int
    :ivar size: The page size requested.
    :vartype size: int
    :ivar total_elements: The total number of items available in the full result set.
    :vartype total_elements: int
    :ivar total_pages: The total number of pages available in the full result set.
    :vartype total_pages: int
    """

    _attribute_map = {
        "content": {"key": "content", "type": "[DiscoGroupResponse]"},
        "first": {"key": "first", "type": "bool"},
        "last": {"key": "last", "type": "bool"},
        "next_link": {"key": "nextLink", "type": "str"},
        "number": {"key": "number", "type": "int"},
        "number_of_elements": {"key": "numberOfElements", "type": "int"},
        "size": {"key": "size", "type": "int"},
        "total_elements": {"key": "totalElements", "type": "int"},
        "total_pages": {"key": "totalPages", "type": "int"},
    }

    def __init__(
        self,
        *,
        content: Optional[List["_models.DiscoGroupResponse"]] = None,
        first: Optional[bool] = None,
        last: Optional[bool] = None,
        next_link: Optional[str] = None,
        number: Optional[int] = None,
        number_of_elements: Optional[int] = None,
        size: Optional[int] = None,
        total_elements: Optional[int] = None,
        total_pages: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword content: The items in the current page of results.
        :paramtype content: list[~azure.easm.models.DiscoGroupResponse]
        :keyword first: Whether or not this is the first page of results.
        :paramtype first: bool
        :keyword last: Whether or not this is the last page of results.
        :paramtype last: bool
        :keyword next_link: The link to access the next page of results.  Not set if at the end of the
         result set.
        :paramtype next_link: str
        :keyword number: The page number requested.
        :paramtype number: int
        :keyword number_of_elements: The number of items in the current page of results.
        :paramtype number_of_elements: int
        :keyword size: The page size requested.
        :paramtype size: int
        :keyword total_elements: The total number of items available in the full result set.
        :paramtype total_elements: int
        :keyword total_pages: The total number of pages available in the full result set.
        :paramtype total_pages: int
        """
        super().__init__(**kwargs)
        self.content = content
        self.first = first
        self.last = last
        self.next_link = next_link
        self.number = number
        self.number_of_elements = number_of_elements
        self.size = size
        self.total_elements = total_elements
        self.total_pages = total_pages


class DiscoGroupRequest(_serialization.Model):
    """A request body used to create a discovery group.

    :ivar description: The description for a disco group.
    :vartype description: str
    :ivar excludes: The list of excludes used for the disco group runs, aka assets to exclude from
     the discovery algorithm.
    :vartype excludes: list[~azure.easm.models.DiscoSource]
    :ivar frequency_milliseconds: The frequency at which the disco group is supposed to be rerun in
     milliseconds.
    :vartype frequency_milliseconds: int
    :ivar names: The list of names used for the disco group runs.
    :vartype names: list[str]
    :ivar seeds: The list of seeds used for the disco group runs.
    :vartype seeds: list[~azure.easm.models.DiscoSource]
    :ivar template_id: The unique identifier for the disco template used for the disco group
     creation.
    :vartype template_id: str
    :ivar tier: The tier for the disco group which will affect the algorithm used for the disco
     runs in this group.
    :vartype tier: str
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "excludes": {"key": "excludes", "type": "[DiscoSource]"},
        "frequency_milliseconds": {"key": "frequencyMilliseconds", "type": "int"},
        "names": {"key": "names", "type": "[str]"},
        "seeds": {"key": "seeds", "type": "[DiscoSource]"},
        "template_id": {"key": "templateId", "type": "str"},
        "tier": {"key": "tier", "type": "str"},
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        excludes: Optional[List["_models.DiscoSource"]] = None,
        frequency_milliseconds: Optional[int] = None,
        names: Optional[List[str]] = None,
        seeds: Optional[List["_models.DiscoSource"]] = None,
        template_id: Optional[str] = None,
        tier: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword description: The description for a disco group.
        :paramtype description: str
        :keyword excludes: The list of excludes used for the disco group runs, aka assets to exclude
         from the discovery algorithm.
        :paramtype excludes: list[~azure.easm.models.DiscoSource]
        :keyword frequency_milliseconds: The frequency at which the disco group is supposed to be rerun
         in milliseconds.
        :paramtype frequency_milliseconds: int
        :keyword names: The list of names used for the disco group runs.
        :paramtype names: list[str]
        :keyword seeds: The list of seeds used for the disco group runs.
        :paramtype seeds: list[~azure.easm.models.DiscoSource]
        :keyword template_id: The unique identifier for the disco template used for the disco group
         creation.
        :paramtype template_id: str
        :keyword tier: The tier for the disco group which will affect the algorithm used for the disco
         runs in this group.
        :paramtype tier: str
        """
        super().__init__(**kwargs)
        self.description = description
        self.excludes = excludes
        self.frequency_milliseconds = frequency_milliseconds
        self.names = names
        self.seeds = seeds
        self.template_id = template_id
        self.tier = tier


class DiscoGroupResponse(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """DiscoGroupResponse.

    :ivar created_date: The date for the disco group was created.
    :vartype created_date: ~datetime.datetime
    :ivar description: The description for a disco group.
    :vartype description: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar excludes: The list of excludes used for the disco group runs, aka assets to exclude from
     the discovery algorithm.
    :vartype excludes: list[~azure.easm.models.DiscoSource]
    :ivar frequency_milliseconds: The frequency at which the disco group is supposed to be rerun in
     milliseconds.
    :vartype frequency_milliseconds: int
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar latest_run: The latest run of this disco group with some limited information, null if the
     group has never been run.
    :vartype latest_run: ~azure.easm.models.DiscoRunResponse
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar names: The list of names used for the disco group runs.
    :vartype names: list[str]
    :ivar seeds: The list of seeds used for the disco group runs.
    :vartype seeds: list[~azure.easm.models.DiscoSource]
    :ivar template_id: The unique identifier for the disco template used for the disco group
     creation.
    :vartype template_id: str
    :ivar tier: The tier for the disco group which will affect the algorithm used for the disco
     runs in this group.
    :vartype tier: str
    """

    _attribute_map = {
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "description": {"key": "description", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "excludes": {"key": "excludes", "type": "[DiscoSource]"},
        "frequency_milliseconds": {"key": "frequencyMilliseconds", "type": "int"},
        "id": {"key": "id", "type": "str"},
        "latest_run": {"key": "latestRun", "type": "DiscoRunResponse"},
        "name": {"key": "name", "type": "str"},
        "names": {"key": "names", "type": "[str]"},
        "seeds": {"key": "seeds", "type": "[DiscoSource]"},
        "template_id": {"key": "templateId", "type": "str"},
        "tier": {"key": "tier", "type": "str"},
    }

    def __init__(
        self,
        *,
        created_date: Optional[datetime.datetime] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        excludes: Optional[List["_models.DiscoSource"]] = None,
        frequency_milliseconds: Optional[int] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        latest_run: Optional["_models.DiscoRunResponse"] = None,
        name: Optional[str] = None,
        names: Optional[List[str]] = None,
        seeds: Optional[List["_models.DiscoSource"]] = None,
        template_id: Optional[str] = None,
        tier: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword created_date: The date for the disco group was created.
        :paramtype created_date: ~datetime.datetime
        :keyword description: The description for a disco group.
        :paramtype description: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword excludes: The list of excludes used for the disco group runs, aka assets to exclude
         from the discovery algorithm.
        :paramtype excludes: list[~azure.easm.models.DiscoSource]
        :keyword frequency_milliseconds: The frequency at which the disco group is supposed to be rerun
         in milliseconds.
        :paramtype frequency_milliseconds: int
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword latest_run: The latest run of this disco group with some limited information, null if
         the group has never been run.
        :paramtype latest_run: ~azure.easm.models.DiscoRunResponse
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword names: The list of names used for the disco group runs.
        :paramtype names: list[str]
        :keyword seeds: The list of seeds used for the disco group runs.
        :paramtype seeds: list[~azure.easm.models.DiscoSource]
        :keyword template_id: The unique identifier for the disco template used for the disco group
         creation.
        :paramtype template_id: str
        :keyword tier: The tier for the disco group which will affect the algorithm used for the disco
         runs in this group.
        :paramtype tier: str
        """
        super().__init__(**kwargs)
        self.created_date = created_date
        self.description = description
        self.display_name = display_name
        self.excludes = excludes
        self.frequency_milliseconds = frequency_milliseconds
        self.id = id
        self.latest_run = latest_run
        self.name = name
        self.names = names
        self.seeds = seeds
        self.template_id = template_id
        self.tier = tier


class DiscoRunPageResponse(_serialization.Model):
    """DiscoRunPageResponse.

    :ivar content: The items in the current page of results.
    :vartype content: list[~azure.easm.models.DiscoRunResponse]
    :ivar first: Whether or not this is the first page of results.
    :vartype first: bool
    :ivar last: Whether or not this is the last page of results.
    :vartype last: bool
    :ivar next_link: The link to access the next page of results.  Not set if at the end of the
     result set.
    :vartype next_link: str
    :ivar number: The page number requested.
    :vartype number: int
    :ivar number_of_elements: The number of items in the current page of results.
    :vartype number_of_elements: int
    :ivar size: The page size requested.
    :vartype size: int
    :ivar total_elements: The total number of items available in the full result set.
    :vartype total_elements: int
    :ivar total_pages: The total number of pages available in the full result set.
    :vartype total_pages: int
    """

    _attribute_map = {
        "content": {"key": "content", "type": "[DiscoRunResponse]"},
        "first": {"key": "first", "type": "bool"},
        "last": {"key": "last", "type": "bool"},
        "next_link": {"key": "nextLink", "type": "str"},
        "number": {"key": "number", "type": "int"},
        "number_of_elements": {"key": "numberOfElements", "type": "int"},
        "size": {"key": "size", "type": "int"},
        "total_elements": {"key": "totalElements", "type": "int"},
        "total_pages": {"key": "totalPages", "type": "int"},
    }

    def __init__(
        self,
        *,
        content: Optional[List["_models.DiscoRunResponse"]] = None,
        first: Optional[bool] = None,
        last: Optional[bool] = None,
        next_link: Optional[str] = None,
        number: Optional[int] = None,
        number_of_elements: Optional[int] = None,
        size: Optional[int] = None,
        total_elements: Optional[int] = None,
        total_pages: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword content: The items in the current page of results.
        :paramtype content: list[~azure.easm.models.DiscoRunResponse]
        :keyword first: Whether or not this is the first page of results.
        :paramtype first: bool
        :keyword last: Whether or not this is the last page of results.
        :paramtype last: bool
        :keyword next_link: The link to access the next page of results.  Not set if at the end of the
         result set.
        :paramtype next_link: str
        :keyword number: The page number requested.
        :paramtype number: int
        :keyword number_of_elements: The number of items in the current page of results.
        :paramtype number_of_elements: int
        :keyword size: The page size requested.
        :paramtype size: int
        :keyword total_elements: The total number of items available in the full result set.
        :paramtype total_elements: int
        :keyword total_pages: The total number of pages available in the full result set.
        :paramtype total_pages: int
        """
        super().__init__(**kwargs)
        self.content = content
        self.first = first
        self.last = last
        self.next_link = next_link
        self.number = number
        self.number_of_elements = number_of_elements
        self.size = size
        self.total_elements = total_elements
        self.total_pages = total_pages


class DiscoRunResponse(_serialization.Model):
    """The latest run of this disco group with some limited information, null if the group has never been run.

    :ivar completed_date: The date for when the disco run was completed by the system.
    :vartype completed_date: ~datetime.datetime
    :ivar excludes: The list of excludes used for the disco run, aka assets to exclude from the
     discovery algorithm.
    :vartype excludes: list[~azure.easm.models.DiscoSource]
    :ivar names: The list of names used for the disco run.
    :vartype names: list[str]
    :ivar seeds: The list of seeds used for the disco run.
    :vartype seeds: list[~azure.easm.models.DiscoSource]
    :ivar started_date: The date for when the disco run was actually started by the system.
    :vartype started_date: ~datetime.datetime
    :ivar state: The State of the disco run. Known values are: "pending", "running", "completed",
     and "failed".
    :vartype state: str or ~azure.easm.models.DiscoRunResponseState
    :ivar submitted_date: The date for when the disco run was created in the system.
    :vartype submitted_date: ~datetime.datetime
    :ivar tier: The tier which will affect the algorithm used for the disco run.
    :vartype tier: str
    :ivar total_assets_found_count: The total count of assets that were found this disco run.
    :vartype total_assets_found_count: int
    """

    _attribute_map = {
        "completed_date": {"key": "completedDate", "type": "iso-8601"},
        "excludes": {"key": "excludes", "type": "[DiscoSource]"},
        "names": {"key": "names", "type": "[str]"},
        "seeds": {"key": "seeds", "type": "[DiscoSource]"},
        "started_date": {"key": "startedDate", "type": "iso-8601"},
        "state": {"key": "state", "type": "str"},
        "submitted_date": {"key": "submittedDate", "type": "iso-8601"},
        "tier": {"key": "tier", "type": "str"},
        "total_assets_found_count": {"key": "totalAssetsFoundCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        completed_date: Optional[datetime.datetime] = None,
        excludes: Optional[List["_models.DiscoSource"]] = None,
        names: Optional[List[str]] = None,
        seeds: Optional[List["_models.DiscoSource"]] = None,
        started_date: Optional[datetime.datetime] = None,
        state: Optional[Union[str, "_models.DiscoRunResponseState"]] = None,
        submitted_date: Optional[datetime.datetime] = None,
        tier: Optional[str] = None,
        total_assets_found_count: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword completed_date: The date for when the disco run was completed by the system.
        :paramtype completed_date: ~datetime.datetime
        :keyword excludes: The list of excludes used for the disco run, aka assets to exclude from the
         discovery algorithm.
        :paramtype excludes: list[~azure.easm.models.DiscoSource]
        :keyword names: The list of names used for the disco run.
        :paramtype names: list[str]
        :keyword seeds: The list of seeds used for the disco run.
        :paramtype seeds: list[~azure.easm.models.DiscoSource]
        :keyword started_date: The date for when the disco run was actually started by the system.
        :paramtype started_date: ~datetime.datetime
        :keyword state: The State of the disco run. Known values are: "pending", "running",
         "completed", and "failed".
        :paramtype state: str or ~azure.easm.models.DiscoRunResponseState
        :keyword submitted_date: The date for when the disco run was created in the system.
        :paramtype submitted_date: ~datetime.datetime
        :keyword tier: The tier which will affect the algorithm used for the disco run.
        :paramtype tier: str
        :keyword total_assets_found_count: The total count of assets that were found this disco run.
        :paramtype total_assets_found_count: int
        """
        super().__init__(**kwargs)
        self.completed_date = completed_date
        self.excludes = excludes
        self.names = names
        self.seeds = seeds
        self.started_date = started_date
        self.state = state
        self.submitted_date = submitted_date
        self.tier = tier
        self.total_assets_found_count = total_assets_found_count


class DiscoSource(_serialization.Model):
    """Source entity used to drive discovery.

    :ivar kind: The kind of disco source. Known values are: "as", "attribute", "contact", "domain",
     "host", and "ipBlock".
    :vartype kind: str or ~azure.easm.models.DiscoSourceKind
    :ivar name: The name for the disco source.
    :vartype name: str
    """

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(
        self, *, kind: Optional[Union[str, "_models.DiscoSourceKind"]] = None, name: Optional[str] = None, **kwargs
    ):
        """
        :keyword kind: The kind of disco source. Known values are: "as", "attribute", "contact",
         "domain", "host", and "ipBlock".
        :paramtype kind: str or ~azure.easm.models.DiscoSourceKind
        :keyword name: The name for the disco source.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.kind = kind
        self.name = name


class DiscoTemplatePageResponse(_serialization.Model):
    """DiscoTemplatePageResponse.

    :ivar content: The items in the current page of results.
    :vartype content: list[~azure.easm.models.DiscoTemplateResponse]
    :ivar first: Whether or not this is the first page of results.
    :vartype first: bool
    :ivar last: Whether or not this is the last page of results.
    :vartype last: bool
    :ivar next_link: The link to access the next page of results.  Not set if at the end of the
     result set.
    :vartype next_link: str
    :ivar number: The page number requested.
    :vartype number: int
    :ivar number_of_elements: The number of items in the current page of results.
    :vartype number_of_elements: int
    :ivar size: The page size requested.
    :vartype size: int
    :ivar total_elements: The total number of items available in the full result set.
    :vartype total_elements: int
    :ivar total_pages: The total number of pages available in the full result set.
    :vartype total_pages: int
    """

    _attribute_map = {
        "content": {"key": "content", "type": "[DiscoTemplateResponse]"},
        "first": {"key": "first", "type": "bool"},
        "last": {"key": "last", "type": "bool"},
        "next_link": {"key": "nextLink", "type": "str"},
        "number": {"key": "number", "type": "int"},
        "number_of_elements": {"key": "numberOfElements", "type": "int"},
        "size": {"key": "size", "type": "int"},
        "total_elements": {"key": "totalElements", "type": "int"},
        "total_pages": {"key": "totalPages", "type": "int"},
    }

    def __init__(
        self,
        *,
        content: Optional[List["_models.DiscoTemplateResponse"]] = None,
        first: Optional[bool] = None,
        last: Optional[bool] = None,
        next_link: Optional[str] = None,
        number: Optional[int] = None,
        number_of_elements: Optional[int] = None,
        size: Optional[int] = None,
        total_elements: Optional[int] = None,
        total_pages: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword content: The items in the current page of results.
        :paramtype content: list[~azure.easm.models.DiscoTemplateResponse]
        :keyword first: Whether or not this is the first page of results.
        :paramtype first: bool
        :keyword last: Whether or not this is the last page of results.
        :paramtype last: bool
        :keyword next_link: The link to access the next page of results.  Not set if at the end of the
         result set.
        :paramtype next_link: str
        :keyword number: The page number requested.
        :paramtype number: int
        :keyword number_of_elements: The number of items in the current page of results.
        :paramtype number_of_elements: int
        :keyword size: The page size requested.
        :paramtype size: int
        :keyword total_elements: The total number of items available in the full result set.
        :paramtype total_elements: int
        :keyword total_pages: The total number of pages available in the full result set.
        :paramtype total_pages: int
        """
        super().__init__(**kwargs)
        self.content = content
        self.first = first
        self.last = last
        self.next_link = next_link
        self.number = number
        self.number_of_elements = number_of_elements
        self.size = size
        self.total_elements = total_elements
        self.total_pages = total_pages


class DiscoTemplateResponse(_serialization.Model):
    """The items in the current page of results.

    :ivar city: The name of the city.
    :vartype city: str
    :ivar country_code: The country code.
    :vartype country_code: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar industry: The name of the industry.
    :vartype industry: str
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar names: The list of disco template names.
    :vartype names: list[str]
    :ivar region: The name of the region.
    :vartype region: str
    :ivar seeds: The list of disco template seeds.
    :vartype seeds: list[~azure.easm.models.DiscoSource]
    :ivar state_code: The state code.
    :vartype state_code: str
    """

    _attribute_map = {
        "city": {"key": "city", "type": "str"},
        "country_code": {"key": "countryCode", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "industry": {"key": "industry", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "names": {"key": "names", "type": "[str]"},
        "region": {"key": "region", "type": "str"},
        "seeds": {"key": "seeds", "type": "[DiscoSource]"},
        "state_code": {"key": "stateCode", "type": "str"},
    }

    def __init__(
        self,
        *,
        city: Optional[str] = None,
        country_code: Optional[str] = None,
        display_name: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        industry: Optional[str] = None,
        name: Optional[str] = None,
        names: Optional[List[str]] = None,
        region: Optional[str] = None,
        seeds: Optional[List["_models.DiscoSource"]] = None,
        state_code: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword city: The name of the city.
        :paramtype city: str
        :keyword country_code: The country code.
        :paramtype country_code: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword industry: The name of the industry.
        :paramtype industry: str
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword names: The list of disco template names.
        :paramtype names: list[str]
        :keyword region: The name of the region.
        :paramtype region: str
        :keyword seeds: The list of disco template seeds.
        :paramtype seeds: list[~azure.easm.models.DiscoSource]
        :keyword state_code: The state code.
        :paramtype state_code: str
        """
        super().__init__(**kwargs)
        self.city = city
        self.country_code = country_code
        self.display_name = display_name
        self.id = id
        self.industry = industry
        self.name = name
        self.names = names
        self.region = region
        self.seeds = seeds
        self.state_code = state_code


class DomainAsset(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """DomainAsset.

    :ivar admin_contacts:
    :vartype admin_contacts: list[~azure.easm.models.ObservedString]
    :ivar admin_names:
    :vartype admin_names: list[~azure.easm.models.ObservedString]
    :ivar admin_orgs:
    :vartype admin_orgs: list[~azure.easm.models.ObservedString]
    :ivar admin_phones:
    :vartype admin_phones: list[~azure.easm.models.ObservedString]
    :ivar alexa_infos:
    :vartype alexa_infos: list[~azure.easm.models.AlexaInfo]
    :ivar count:
    :vartype count: int
    :ivar detailed_from_whois_at:
    :vartype detailed_from_whois_at: ~datetime.datetime
    :ivar domain:
    :vartype domain: str
    :ivar domain_statuses:
    :vartype domain_statuses: list[~azure.easm.models.ObservedString]
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar mail_servers:
    :vartype mail_servers: list[~azure.easm.models.ObservedString]
    :ivar name_servers:
    :vartype name_servers: list[~azure.easm.models.ObservedString]
    :ivar parked_domain:
    :vartype parked_domain: list[~azure.easm.models.ObservedBoolean]
    :ivar registrant_contacts:
    :vartype registrant_contacts: list[~azure.easm.models.ObservedString]
    :ivar registrant_names:
    :vartype registrant_names: list[~azure.easm.models.ObservedString]
    :ivar registrant_orgs:
    :vartype registrant_orgs: list[~azure.easm.models.ObservedString]
    :ivar registrant_phones:
    :vartype registrant_phones: list[~azure.easm.models.ObservedString]
    :ivar registrar_created_at:
    :vartype registrar_created_at: list[~azure.easm.models.ObservedLong]
    :ivar registrar_expires_at:
    :vartype registrar_expires_at: list[~azure.easm.models.ObservedLong]
    :ivar registrar_iana_ids:
    :vartype registrar_iana_ids: list[~azure.easm.models.ObservedInteger]
    :ivar registrar_names:
    :vartype registrar_names: list[~azure.easm.models.ObservedString]
    :ivar registrar_updated_at:
    :vartype registrar_updated_at: list[~azure.easm.models.ObservedLong]
    :ivar soa_records:
    :vartype soa_records: list[~azure.easm.models.SoaRecord]
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar technical_contacts:
    :vartype technical_contacts: list[~azure.easm.models.ObservedString]
    :ivar technical_names:
    :vartype technical_names: list[~azure.easm.models.ObservedString]
    :ivar technical_orgs:
    :vartype technical_orgs: list[~azure.easm.models.ObservedString]
    :ivar technical_phones:
    :vartype technical_phones: list[~azure.easm.models.ObservedString]
    :ivar whois_id:
    :vartype whois_id: int
    :ivar whois_servers:
    :vartype whois_servers: list[~azure.easm.models.ObservedString]
    """

    _attribute_map = {
        "admin_contacts": {"key": "adminContacts", "type": "[ObservedString]"},
        "admin_names": {"key": "adminNames", "type": "[ObservedString]"},
        "admin_orgs": {"key": "adminOrgs", "type": "[ObservedString]"},
        "admin_phones": {"key": "adminPhones", "type": "[ObservedString]"},
        "alexa_infos": {"key": "alexaInfos", "type": "[AlexaInfo]"},
        "count": {"key": "count", "type": "int"},
        "detailed_from_whois_at": {"key": "detailedFromWhoisAt", "type": "iso-8601"},
        "domain": {"key": "domain", "type": "str"},
        "domain_statuses": {"key": "domainStatuses", "type": "[ObservedString]"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "mail_servers": {"key": "mailServers", "type": "[ObservedString]"},
        "name_servers": {"key": "nameServers", "type": "[ObservedString]"},
        "parked_domain": {"key": "parkedDomain", "type": "[ObservedBoolean]"},
        "registrant_contacts": {"key": "registrantContacts", "type": "[ObservedString]"},
        "registrant_names": {"key": "registrantNames", "type": "[ObservedString]"},
        "registrant_orgs": {"key": "registrantOrgs", "type": "[ObservedString]"},
        "registrant_phones": {"key": "registrantPhones", "type": "[ObservedString]"},
        "registrar_created_at": {"key": "registrarCreatedAt", "type": "[ObservedLong]"},
        "registrar_expires_at": {"key": "registrarExpiresAt", "type": "[ObservedLong]"},
        "registrar_iana_ids": {"key": "registrarIanaIds", "type": "[ObservedInteger]"},
        "registrar_names": {"key": "registrarNames", "type": "[ObservedString]"},
        "registrar_updated_at": {"key": "registrarUpdatedAt", "type": "[ObservedLong]"},
        "soa_records": {"key": "soaRecords", "type": "[SoaRecord]"},
        "sources": {"key": "sources", "type": "[Source]"},
        "technical_contacts": {"key": "technicalContacts", "type": "[ObservedString]"},
        "technical_names": {"key": "technicalNames", "type": "[ObservedString]"},
        "technical_orgs": {"key": "technicalOrgs", "type": "[ObservedString]"},
        "technical_phones": {"key": "technicalPhones", "type": "[ObservedString]"},
        "whois_id": {"key": "whoisId", "type": "int"},
        "whois_servers": {"key": "whoisServers", "type": "[ObservedString]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        admin_contacts: Optional[List["_models.ObservedString"]] = None,
        admin_names: Optional[List["_models.ObservedString"]] = None,
        admin_orgs: Optional[List["_models.ObservedString"]] = None,
        admin_phones: Optional[List["_models.ObservedString"]] = None,
        alexa_infos: Optional[List["_models.AlexaInfo"]] = None,
        count: Optional[int] = None,
        detailed_from_whois_at: Optional[datetime.datetime] = None,
        domain: Optional[str] = None,
        domain_statuses: Optional[List["_models.ObservedString"]] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        mail_servers: Optional[List["_models.ObservedString"]] = None,
        name_servers: Optional[List["_models.ObservedString"]] = None,
        parked_domain: Optional[List["_models.ObservedBoolean"]] = None,
        registrant_contacts: Optional[List["_models.ObservedString"]] = None,
        registrant_names: Optional[List["_models.ObservedString"]] = None,
        registrant_orgs: Optional[List["_models.ObservedString"]] = None,
        registrant_phones: Optional[List["_models.ObservedString"]] = None,
        registrar_created_at: Optional[List["_models.ObservedLong"]] = None,
        registrar_expires_at: Optional[List["_models.ObservedLong"]] = None,
        registrar_iana_ids: Optional[List["_models.ObservedInteger"]] = None,
        registrar_names: Optional[List["_models.ObservedString"]] = None,
        registrar_updated_at: Optional[List["_models.ObservedLong"]] = None,
        soa_records: Optional[List["_models.SoaRecord"]] = None,
        sources: Optional[List["_models.Source"]] = None,
        technical_contacts: Optional[List["_models.ObservedString"]] = None,
        technical_names: Optional[List["_models.ObservedString"]] = None,
        technical_orgs: Optional[List["_models.ObservedString"]] = None,
        technical_phones: Optional[List["_models.ObservedString"]] = None,
        whois_id: Optional[int] = None,
        whois_servers: Optional[List["_models.ObservedString"]] = None,
        **kwargs
    ):
        """
        :keyword admin_contacts:
        :paramtype admin_contacts: list[~azure.easm.models.ObservedString]
        :keyword admin_names:
        :paramtype admin_names: list[~azure.easm.models.ObservedString]
        :keyword admin_orgs:
        :paramtype admin_orgs: list[~azure.easm.models.ObservedString]
        :keyword admin_phones:
        :paramtype admin_phones: list[~azure.easm.models.ObservedString]
        :keyword alexa_infos:
        :paramtype alexa_infos: list[~azure.easm.models.AlexaInfo]
        :keyword count:
        :paramtype count: int
        :keyword detailed_from_whois_at:
        :paramtype detailed_from_whois_at: ~datetime.datetime
        :keyword domain:
        :paramtype domain: str
        :keyword domain_statuses:
        :paramtype domain_statuses: list[~azure.easm.models.ObservedString]
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword mail_servers:
        :paramtype mail_servers: list[~azure.easm.models.ObservedString]
        :keyword name_servers:
        :paramtype name_servers: list[~azure.easm.models.ObservedString]
        :keyword parked_domain:
        :paramtype parked_domain: list[~azure.easm.models.ObservedBoolean]
        :keyword registrant_contacts:
        :paramtype registrant_contacts: list[~azure.easm.models.ObservedString]
        :keyword registrant_names:
        :paramtype registrant_names: list[~azure.easm.models.ObservedString]
        :keyword registrant_orgs:
        :paramtype registrant_orgs: list[~azure.easm.models.ObservedString]
        :keyword registrant_phones:
        :paramtype registrant_phones: list[~azure.easm.models.ObservedString]
        :keyword registrar_created_at:
        :paramtype registrar_created_at: list[~azure.easm.models.ObservedLong]
        :keyword registrar_expires_at:
        :paramtype registrar_expires_at: list[~azure.easm.models.ObservedLong]
        :keyword registrar_iana_ids:
        :paramtype registrar_iana_ids: list[~azure.easm.models.ObservedInteger]
        :keyword registrar_names:
        :paramtype registrar_names: list[~azure.easm.models.ObservedString]
        :keyword registrar_updated_at:
        :paramtype registrar_updated_at: list[~azure.easm.models.ObservedLong]
        :keyword soa_records:
        :paramtype soa_records: list[~azure.easm.models.SoaRecord]
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword technical_contacts:
        :paramtype technical_contacts: list[~azure.easm.models.ObservedString]
        :keyword technical_names:
        :paramtype technical_names: list[~azure.easm.models.ObservedString]
        :keyword technical_orgs:
        :paramtype technical_orgs: list[~azure.easm.models.ObservedString]
        :keyword technical_phones:
        :paramtype technical_phones: list[~azure.easm.models.ObservedString]
        :keyword whois_id:
        :paramtype whois_id: int
        :keyword whois_servers:
        :paramtype whois_servers: list[~azure.easm.models.ObservedString]
        """
        super().__init__(**kwargs)
        self.admin_contacts = admin_contacts
        self.admin_names = admin_names
        self.admin_orgs = admin_orgs
        self.admin_phones = admin_phones
        self.alexa_infos = alexa_infos
        self.count = count
        self.detailed_from_whois_at = detailed_from_whois_at
        self.domain = domain
        self.domain_statuses = domain_statuses
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.mail_servers = mail_servers
        self.name_servers = name_servers
        self.parked_domain = parked_domain
        self.registrant_contacts = registrant_contacts
        self.registrant_names = registrant_names
        self.registrant_orgs = registrant_orgs
        self.registrant_phones = registrant_phones
        self.registrar_created_at = registrar_created_at
        self.registrar_expires_at = registrar_expires_at
        self.registrar_iana_ids = registrar_iana_ids
        self.registrar_names = registrar_names
        self.registrar_updated_at = registrar_updated_at
        self.soa_records = soa_records
        self.sources = sources
        self.technical_contacts = technical_contacts
        self.technical_names = technical_names
        self.technical_orgs = technical_orgs
        self.technical_phones = technical_phones
        self.whois_id = whois_id
        self.whois_servers = whois_servers


class DomainAssetResponse(AssetResponse):  # pylint: disable=too-many-instance-attributes
    """DomainAssetResponse.

    All required parameters must be populated in order to send to Azure.

    :ivar audit_trail:
    :vartype audit_trail: list[~azure.easm.models.AuditTrailItem]
    :ivar created_date:
    :vartype created_date: ~datetime.datetime
    :ivar disco_group_name:
    :vartype disco_group_name: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar external_id:
    :vartype external_id: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Required. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AssetResponseKind
    :ivar labels:
    :vartype labels: list[~azure.easm.models.LabelResource]
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    :ivar state: Known values are: "candidate", "confirmed", "dismissed", "candidateInvestigate",
     "associatedPartner", "associatedThirdparty", and "archived".
    :vartype state: str or ~azure.easm.models.AssetResponseState
    :ivar updated_date:
    :vartype updated_date: ~datetime.datetime
    :ivar uuid:
    :vartype uuid: str
    :ivar wildcard:
    :vartype wildcard: bool
    :ivar asset: Required.
    :vartype asset: ~azure.easm.models.DomainAsset
    """

    _validation = {
        "kind": {"required": True},
        "asset": {"required": True},
    }

    _attribute_map = {
        "audit_trail": {"key": "auditTrail", "type": "[AuditTrailItem]"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "disco_group_name": {"key": "discoGroupName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "labels": {"key": "labels", "type": "[LabelResource]"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
        "uuid": {"key": "uuid", "type": "str"},
        "wildcard": {"key": "wildcard", "type": "bool"},
        "asset": {"key": "asset", "type": "DomainAsset"},
    }

    def __init__(
        self,
        *,
        asset: "_models.DomainAsset",
        audit_trail: Optional[List["_models.AuditTrailItem"]] = None,
        created_date: Optional[datetime.datetime] = None,
        disco_group_name: Optional[str] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        labels: Optional[List["_models.LabelResource"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        state: Optional[Union[str, "_models.AssetResponseState"]] = None,
        updated_date: Optional[datetime.datetime] = None,
        uuid: Optional[str] = None,
        wildcard: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword audit_trail:
        :paramtype audit_trail: list[~azure.easm.models.AuditTrailItem]
        :keyword created_date:
        :paramtype created_date: ~datetime.datetime
        :keyword disco_group_name:
        :paramtype disco_group_name: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword external_id:
        :paramtype external_id: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword labels:
        :paramtype labels: list[~azure.easm.models.LabelResource]
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        :keyword state: Known values are: "candidate", "confirmed", "dismissed",
         "candidateInvestigate", "associatedPartner", "associatedThirdparty", and "archived".
        :paramtype state: str or ~azure.easm.models.AssetResponseState
        :keyword updated_date:
        :paramtype updated_date: ~datetime.datetime
        :keyword uuid:
        :paramtype uuid: str
        :keyword wildcard:
        :paramtype wildcard: bool
        :keyword asset: Required.
        :paramtype asset: ~azure.easm.models.DomainAsset
        """
        super().__init__(
            audit_trail=audit_trail,
            created_date=created_date,
            disco_group_name=disco_group_name,
            display_name=display_name,
            external_id=external_id,
            id=id,
            labels=labels,
            name=name,
            reason=reason,
            state=state,
            updated_date=updated_date,
            uuid=uuid,
            wildcard=wildcard,
            **kwargs
        )
        self.kind = "domain"  # type: str
        self.asset = asset


class ErrorDetail(_serialization.Model):
    """This is the top-level error object whose code matches the x-ms-error-code response header.

    All required parameters must be populated in order to send to Azure.

    :ivar code: This is one of a server-defined set of error codes. Required.
    :vartype code: str
    :ivar details: This is an array of details about specific errors that led to this reported
     error.
    :vartype details: list[~azure.easm.models.ErrorDetail]
    :ivar innererror: This is an object containing more specific information than the current
     object about the error.
    :vartype innererror: ~azure.easm.models.InnerError
    :ivar message: This is a human-readable representation of the error. Required.
    :vartype message: str
    :ivar target: This is the error target.
    :vartype target: str
    """

    _validation = {
        "code": {"required": True},
        "message": {"required": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "innererror": {"key": "innererror", "type": "InnerError"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        details: Optional[List["_models.ErrorDetail"]] = None,
        innererror: Optional["_models.InnerError"] = None,
        target: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword code: This is one of a server-defined set of error codes. Required.
        :paramtype code: str
        :keyword details: This is an array of details about specific errors that led to this reported
         error.
        :paramtype details: list[~azure.easm.models.ErrorDetail]
        :keyword innererror: This is an object containing more specific information than the current
         object about the error.
        :paramtype innererror: ~azure.easm.models.InnerError
        :keyword message: This is a human-readable representation of the error. Required.
        :paramtype message: str
        :keyword target: This is the error target.
        :paramtype target: str
        """
        super().__init__(**kwargs)
        self.code = code
        self.details = details
        self.innererror = innererror
        self.message = message
        self.target = target


class ErrorResponse(_serialization.Model):
    """ErrorResponse.

    :ivar error: This is the top-level error object whose code matches the x-ms-error-code response
     header.
    :vartype error: ~azure.easm.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs):
        """
        :keyword error: This is the top-level error object whose code matches the x-ms-error-code
         response header.
        :paramtype error: ~azure.easm.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class GuidPair(_serialization.Model):
    """GuidPair.

    :ivar crawl_state_guid:
    :vartype crawl_state_guid: str
    :ivar load_date:
    :vartype load_date: ~datetime.datetime
    :ivar page_guid:
    :vartype page_guid: str
    :ivar recent:
    :vartype recent: bool
    """

    _attribute_map = {
        "crawl_state_guid": {"key": "crawlStateGuid", "type": "str"},
        "load_date": {"key": "loadDate", "type": "iso-8601"},
        "page_guid": {"key": "pageGuid", "type": "str"},
        "recent": {"key": "recent", "type": "bool"},
    }

    def __init__(
        self,
        *,
        crawl_state_guid: Optional[str] = None,
        load_date: Optional[datetime.datetime] = None,
        page_guid: Optional[str] = None,
        recent: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword crawl_state_guid:
        :paramtype crawl_state_guid: str
        :keyword load_date:
        :paramtype load_date: ~datetime.datetime
        :keyword page_guid:
        :paramtype page_guid: str
        :keyword recent:
        :paramtype recent: bool
        """
        super().__init__(**kwargs)
        self.crawl_state_guid = crawl_state_guid
        self.load_date = load_date
        self.page_guid = page_guid
        self.recent = recent


class HostAsset(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """HostAsset.

    :ivar host:
    :vartype host: str
    :ivar asns:
    :vartype asns: list[~azure.easm.models.ObservedLong]
    :ivar attributes:
    :vartype attributes: list[~azure.easm.models.Attribute]
    :ivar banners:
    :vartype banners: list[~azure.easm.models.Banner]
    :ivar child_hosts:
    :vartype child_hosts: list[~azure.easm.models.ObservedString]
    :ivar cnames:
    :vartype cnames: list[~azure.easm.models.ObservedString]
    :ivar cookies:
    :vartype cookies: list[~azure.easm.models.Cookie]
    :ivar count:
    :vartype count: int
    :ivar domain:
    :vartype domain: str
    :ivar domain_asset:
    :vartype domain_asset: ~azure.easm.models.DomainAsset
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar headers:
    :vartype headers: list[~azure.easm.models.ObservedHeader]
    :ivar host_core:
    :vartype host_core: ~azure.easm.models.HostCore
    :ivar ip_addresses:
    :vartype ip_addresses: list[~azure.easm.models.ObservedString]
    :ivar ip_blocks:
    :vartype ip_blocks: list[~azure.easm.models.IpBlock]
    :ivar ipv4:
    :vartype ipv4: list[~azure.easm.models.ObservedBoolean]
    :ivar ipv6:
    :vartype ipv6: list[~azure.easm.models.ObservedBoolean]
    :ivar is_wildcard:
    :vartype is_wildcard: list[~azure.easm.models.ObservedBoolean]
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar location:
    :vartype location: list[~azure.easm.models.ObservedLocation]
    :ivar mx_record:
    :vartype mx_record: list[~azure.easm.models.ObservedBoolean]
    :ivar ns_record:
    :vartype ns_record: list[~azure.easm.models.ObservedBoolean]
    :ivar nxdomain:
    :vartype nxdomain: list[~azure.easm.models.ObservedBoolean]
    :ivar parent_hosts:
    :vartype parent_hosts: list[~azure.easm.models.ObservedString]
    :ivar resource_urls:
    :vartype resource_urls: list[~azure.easm.models.ResourceUrl]
    :ivar response_bodies:
    :vartype response_bodies: list[~azure.easm.models.ObservedString]
    :ivar scan_metadata:
    :vartype scan_metadata: list[~azure.easm.models.ScanMetadata]
    :ivar services:
    :vartype services: list[~azure.easm.models.Service]
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar ssl_certs:
    :vartype ssl_certs: list[~azure.easm.models.SslCertAsset]
    :ivar ssl_server_config:
    :vartype ssl_server_config: list[~azure.easm.models.SslServerConfig]
    :ivar web_components:
    :vartype web_components: list[~azure.easm.models.WebComponent]
    :ivar webserver:
    :vartype webserver: list[~azure.easm.models.ObservedBoolean]
    """

    _attribute_map = {
        "host": {"key": "host", "type": "str"},
        "asns": {"key": "asns", "type": "[ObservedLong]"},
        "attributes": {"key": "attributes", "type": "[Attribute]"},
        "banners": {"key": "banners", "type": "[Banner]"},
        "child_hosts": {"key": "childHosts", "type": "[ObservedString]"},
        "cnames": {"key": "cnames", "type": "[ObservedString]"},
        "cookies": {"key": "cookies", "type": "[Cookie]"},
        "count": {"key": "count", "type": "int"},
        "domain": {"key": "domain", "type": "str"},
        "domain_asset": {"key": "domainAsset", "type": "DomainAsset"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "headers": {"key": "headers", "type": "[ObservedHeader]"},
        "host_core": {"key": "hostCore", "type": "HostCore"},
        "ip_addresses": {"key": "ipAddresses", "type": "[ObservedString]"},
        "ip_blocks": {"key": "ipBlocks", "type": "[IpBlock]"},
        "ipv4": {"key": "ipv4", "type": "[ObservedBoolean]"},
        "ipv6": {"key": "ipv6", "type": "[ObservedBoolean]"},
        "is_wildcard": {"key": "isWildcard", "type": "[ObservedBoolean]"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "location": {"key": "location", "type": "[ObservedLocation]"},
        "mx_record": {"key": "mxRecord", "type": "[ObservedBoolean]"},
        "ns_record": {"key": "nsRecord", "type": "[ObservedBoolean]"},
        "nxdomain": {"key": "nxdomain", "type": "[ObservedBoolean]"},
        "parent_hosts": {"key": "parentHosts", "type": "[ObservedString]"},
        "resource_urls": {"key": "resourceUrls", "type": "[ResourceUrl]"},
        "response_bodies": {"key": "responseBodies", "type": "[ObservedString]"},
        "scan_metadata": {"key": "scanMetadata", "type": "[ScanMetadata]"},
        "services": {"key": "services", "type": "[Service]"},
        "sources": {"key": "sources", "type": "[Source]"},
        "ssl_certs": {"key": "sslCerts", "type": "[SslCertAsset]"},
        "ssl_server_config": {"key": "sslServerConfig", "type": "[SslServerConfig]"},
        "web_components": {"key": "webComponents", "type": "[WebComponent]"},
        "webserver": {"key": "webserver", "type": "[ObservedBoolean]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        host: Optional[str] = None,
        asns: Optional[List["_models.ObservedLong"]] = None,
        attributes: Optional[List["_models.Attribute"]] = None,
        banners: Optional[List["_models.Banner"]] = None,
        child_hosts: Optional[List["_models.ObservedString"]] = None,
        cnames: Optional[List["_models.ObservedString"]] = None,
        cookies: Optional[List["_models.Cookie"]] = None,
        count: Optional[int] = None,
        domain: Optional[str] = None,
        domain_asset: Optional["_models.DomainAsset"] = None,
        first_seen: Optional[datetime.datetime] = None,
        headers: Optional[List["_models.ObservedHeader"]] = None,
        host_core: Optional["_models.HostCore"] = None,
        ip_addresses: Optional[List["_models.ObservedString"]] = None,
        ip_blocks: Optional[List["_models.IpBlock"]] = None,
        ipv4: Optional[List["_models.ObservedBoolean"]] = None,
        ipv6: Optional[List["_models.ObservedBoolean"]] = None,
        is_wildcard: Optional[List["_models.ObservedBoolean"]] = None,
        last_seen: Optional[datetime.datetime] = None,
        location: Optional[List["_models.ObservedLocation"]] = None,
        mx_record: Optional[List["_models.ObservedBoolean"]] = None,
        ns_record: Optional[List["_models.ObservedBoolean"]] = None,
        nxdomain: Optional[List["_models.ObservedBoolean"]] = None,
        parent_hosts: Optional[List["_models.ObservedString"]] = None,
        resource_urls: Optional[List["_models.ResourceUrl"]] = None,
        response_bodies: Optional[List["_models.ObservedString"]] = None,
        scan_metadata: Optional[List["_models.ScanMetadata"]] = None,
        services: Optional[List["_models.Service"]] = None,
        sources: Optional[List["_models.Source"]] = None,
        ssl_certs: Optional[List["_models.SslCertAsset"]] = None,
        ssl_server_config: Optional[List["_models.SslServerConfig"]] = None,
        web_components: Optional[List["_models.WebComponent"]] = None,
        webserver: Optional[List["_models.ObservedBoolean"]] = None,
        **kwargs
    ):
        """
        :keyword host:
        :paramtype host: str
        :keyword asns:
        :paramtype asns: list[~azure.easm.models.ObservedLong]
        :keyword attributes:
        :paramtype attributes: list[~azure.easm.models.Attribute]
        :keyword banners:
        :paramtype banners: list[~azure.easm.models.Banner]
        :keyword child_hosts:
        :paramtype child_hosts: list[~azure.easm.models.ObservedString]
        :keyword cnames:
        :paramtype cnames: list[~azure.easm.models.ObservedString]
        :keyword cookies:
        :paramtype cookies: list[~azure.easm.models.Cookie]
        :keyword count:
        :paramtype count: int
        :keyword domain:
        :paramtype domain: str
        :keyword domain_asset:
        :paramtype domain_asset: ~azure.easm.models.DomainAsset
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword headers:
        :paramtype headers: list[~azure.easm.models.ObservedHeader]
        :keyword host_core:
        :paramtype host_core: ~azure.easm.models.HostCore
        :keyword ip_addresses:
        :paramtype ip_addresses: list[~azure.easm.models.ObservedString]
        :keyword ip_blocks:
        :paramtype ip_blocks: list[~azure.easm.models.IpBlock]
        :keyword ipv4:
        :paramtype ipv4: list[~azure.easm.models.ObservedBoolean]
        :keyword ipv6:
        :paramtype ipv6: list[~azure.easm.models.ObservedBoolean]
        :keyword is_wildcard:
        :paramtype is_wildcard: list[~azure.easm.models.ObservedBoolean]
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword location:
        :paramtype location: list[~azure.easm.models.ObservedLocation]
        :keyword mx_record:
        :paramtype mx_record: list[~azure.easm.models.ObservedBoolean]
        :keyword ns_record:
        :paramtype ns_record: list[~azure.easm.models.ObservedBoolean]
        :keyword nxdomain:
        :paramtype nxdomain: list[~azure.easm.models.ObservedBoolean]
        :keyword parent_hosts:
        :paramtype parent_hosts: list[~azure.easm.models.ObservedString]
        :keyword resource_urls:
        :paramtype resource_urls: list[~azure.easm.models.ResourceUrl]
        :keyword response_bodies:
        :paramtype response_bodies: list[~azure.easm.models.ObservedString]
        :keyword scan_metadata:
        :paramtype scan_metadata: list[~azure.easm.models.ScanMetadata]
        :keyword services:
        :paramtype services: list[~azure.easm.models.Service]
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword ssl_certs:
        :paramtype ssl_certs: list[~azure.easm.models.SslCertAsset]
        :keyword ssl_server_config:
        :paramtype ssl_server_config: list[~azure.easm.models.SslServerConfig]
        :keyword web_components:
        :paramtype web_components: list[~azure.easm.models.WebComponent]
        :keyword webserver:
        :paramtype webserver: list[~azure.easm.models.ObservedBoolean]
        """
        super().__init__(**kwargs)
        self.host = host
        self.asns = asns
        self.attributes = attributes
        self.banners = banners
        self.child_hosts = child_hosts
        self.cnames = cnames
        self.cookies = cookies
        self.count = count
        self.domain = domain
        self.domain_asset = domain_asset
        self.first_seen = first_seen
        self.headers = headers
        self.host_core = host_core
        self.ip_addresses = ip_addresses
        self.ip_blocks = ip_blocks
        self.ipv4 = ipv4
        self.ipv6 = ipv6
        self.is_wildcard = is_wildcard
        self.last_seen = last_seen
        self.location = location
        self.mx_record = mx_record
        self.ns_record = ns_record
        self.nxdomain = nxdomain
        self.parent_hosts = parent_hosts
        self.resource_urls = resource_urls
        self.response_bodies = response_bodies
        self.scan_metadata = scan_metadata
        self.services = services
        self.sources = sources
        self.ssl_certs = ssl_certs
        self.ssl_server_config = ssl_server_config
        self.web_components = web_components
        self.webserver = webserver


class HostAssetResponse(AssetResponse):  # pylint: disable=too-many-instance-attributes
    """HostAssetResponse.

    All required parameters must be populated in order to send to Azure.

    :ivar audit_trail:
    :vartype audit_trail: list[~azure.easm.models.AuditTrailItem]
    :ivar created_date:
    :vartype created_date: ~datetime.datetime
    :ivar disco_group_name:
    :vartype disco_group_name: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar external_id:
    :vartype external_id: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Required. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AssetResponseKind
    :ivar labels:
    :vartype labels: list[~azure.easm.models.LabelResource]
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    :ivar state: Known values are: "candidate", "confirmed", "dismissed", "candidateInvestigate",
     "associatedPartner", "associatedThirdparty", and "archived".
    :vartype state: str or ~azure.easm.models.AssetResponseState
    :ivar updated_date:
    :vartype updated_date: ~datetime.datetime
    :ivar uuid:
    :vartype uuid: str
    :ivar wildcard:
    :vartype wildcard: bool
    :ivar asset: Required.
    :vartype asset: ~azure.easm.models.HostAsset
    """

    _validation = {
        "kind": {"required": True},
        "asset": {"required": True},
    }

    _attribute_map = {
        "audit_trail": {"key": "auditTrail", "type": "[AuditTrailItem]"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "disco_group_name": {"key": "discoGroupName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "labels": {"key": "labels", "type": "[LabelResource]"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
        "uuid": {"key": "uuid", "type": "str"},
        "wildcard": {"key": "wildcard", "type": "bool"},
        "asset": {"key": "asset", "type": "HostAsset"},
    }

    def __init__(
        self,
        *,
        asset: "_models.HostAsset",
        audit_trail: Optional[List["_models.AuditTrailItem"]] = None,
        created_date: Optional[datetime.datetime] = None,
        disco_group_name: Optional[str] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        labels: Optional[List["_models.LabelResource"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        state: Optional[Union[str, "_models.AssetResponseState"]] = None,
        updated_date: Optional[datetime.datetime] = None,
        uuid: Optional[str] = None,
        wildcard: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword audit_trail:
        :paramtype audit_trail: list[~azure.easm.models.AuditTrailItem]
        :keyword created_date:
        :paramtype created_date: ~datetime.datetime
        :keyword disco_group_name:
        :paramtype disco_group_name: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword external_id:
        :paramtype external_id: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword labels:
        :paramtype labels: list[~azure.easm.models.LabelResource]
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        :keyword state: Known values are: "candidate", "confirmed", "dismissed",
         "candidateInvestigate", "associatedPartner", "associatedThirdparty", and "archived".
        :paramtype state: str or ~azure.easm.models.AssetResponseState
        :keyword updated_date:
        :paramtype updated_date: ~datetime.datetime
        :keyword uuid:
        :paramtype uuid: str
        :keyword wildcard:
        :paramtype wildcard: bool
        :keyword asset: Required.
        :paramtype asset: ~azure.easm.models.HostAsset
        """
        super().__init__(
            audit_trail=audit_trail,
            created_date=created_date,
            disco_group_name=disco_group_name,
            display_name=display_name,
            external_id=external_id,
            id=id,
            labels=labels,
            name=name,
            reason=reason,
            state=state,
            updated_date=updated_date,
            uuid=uuid,
            wildcard=wildcard,
            **kwargs
        )
        self.kind = "host"  # type: str
        self.asset = asset


class HostCore(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """HostCore.

    :ivar host:
    :vartype host: str
    :ivar alexa_rank:
    :vartype alexa_rank: int
    :ivar blacklist_cause_count:
    :vartype blacklist_cause_count: int
    :ivar blacklist_cause_first_seen:
    :vartype blacklist_cause_first_seen: ~datetime.datetime
    :ivar blacklist_cause_last_seen:
    :vartype blacklist_cause_last_seen: ~datetime.datetime
    :ivar blacklist_resource_count:
    :vartype blacklist_resource_count: int
    :ivar blacklist_resource_first_seen:
    :vartype blacklist_resource_first_seen: ~datetime.datetime
    :ivar blacklist_resource_last_seen:
    :vartype blacklist_resource_last_seen: ~datetime.datetime
    :ivar blacklist_sequence_count:
    :vartype blacklist_sequence_count: int
    :ivar blacklist_sequence_first_seen:
    :vartype blacklist_sequence_first_seen: ~datetime.datetime
    :ivar blacklist_sequence_last_seen:
    :vartype blacklist_sequence_last_seen: ~datetime.datetime
    :ivar count:
    :vartype count: int
    :ivar domain:
    :vartype domain: str
    :ivar domain_malware_reputation_score:
    :vartype domain_malware_reputation_score: int
    :ivar domain_phish_reputation_score:
    :vartype domain_phish_reputation_score: int
    :ivar domain_reputation_score:
    :vartype domain_reputation_score: int
    :ivar domain_scam_reputation_score:
    :vartype domain_scam_reputation_score: int
    :ivar domain_spam_reputation_score:
    :vartype domain_spam_reputation_score: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar host_malware_reputation_score:
    :vartype host_malware_reputation_score: int
    :ivar host_phish_reputation_score:
    :vartype host_phish_reputation_score: int
    :ivar host_reputation_score:
    :vartype host_reputation_score: int
    :ivar host_scam_reputation_score:
    :vartype host_scam_reputation_score: int
    :ivar host_spam_reputation_score:
    :vartype host_spam_reputation_score: int
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar malware_cause_count:
    :vartype malware_cause_count: int
    :ivar malware_resource_count:
    :vartype malware_resource_count: int
    :ivar malware_sequence_count:
    :vartype malware_sequence_count: int
    :ivar phish_cause_count:
    :vartype phish_cause_count: int
    :ivar phish_resource_count:
    :vartype phish_resource_count: int
    :ivar phish_sequence_count:
    :vartype phish_sequence_count: int
    :ivar scam_cause_count:
    :vartype scam_cause_count: int
    :ivar scam_resource_count:
    :vartype scam_resource_count: int
    :ivar scam_sequence_count:
    :vartype scam_sequence_count: int
    :ivar spam_cause_count:
    :vartype spam_cause_count: int
    :ivar spam_resource_count:
    :vartype spam_resource_count: int
    :ivar spam_sequence_count:
    :vartype spam_sequence_count: int
    :ivar uuid:
    :vartype uuid: str
    """

    _attribute_map = {
        "host": {"key": "host", "type": "str"},
        "alexa_rank": {"key": "alexaRank", "type": "int"},
        "blacklist_cause_count": {"key": "blacklistCauseCount", "type": "int"},
        "blacklist_cause_first_seen": {"key": "blacklistCauseFirstSeen", "type": "iso-8601"},
        "blacklist_cause_last_seen": {"key": "blacklistCauseLastSeen", "type": "iso-8601"},
        "blacklist_resource_count": {"key": "blacklistResourceCount", "type": "int"},
        "blacklist_resource_first_seen": {"key": "blacklistResourceFirstSeen", "type": "iso-8601"},
        "blacklist_resource_last_seen": {"key": "blacklistResourceLastSeen", "type": "iso-8601"},
        "blacklist_sequence_count": {"key": "blacklistSequenceCount", "type": "int"},
        "blacklist_sequence_first_seen": {"key": "blacklistSequenceFirstSeen", "type": "iso-8601"},
        "blacklist_sequence_last_seen": {"key": "blacklistSequenceLastSeen", "type": "iso-8601"},
        "count": {"key": "count", "type": "int"},
        "domain": {"key": "domain", "type": "str"},
        "domain_malware_reputation_score": {"key": "domainMalwareReputationScore", "type": "int"},
        "domain_phish_reputation_score": {"key": "domainPhishReputationScore", "type": "int"},
        "domain_reputation_score": {"key": "domainReputationScore", "type": "int"},
        "domain_scam_reputation_score": {"key": "domainScamReputationScore", "type": "int"},
        "domain_spam_reputation_score": {"key": "domainSpamReputationScore", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "host_malware_reputation_score": {"key": "hostMalwareReputationScore", "type": "int"},
        "host_phish_reputation_score": {"key": "hostPhishReputationScore", "type": "int"},
        "host_reputation_score": {"key": "hostReputationScore", "type": "int"},
        "host_scam_reputation_score": {"key": "hostScamReputationScore", "type": "int"},
        "host_spam_reputation_score": {"key": "hostSpamReputationScore", "type": "int"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "malware_cause_count": {"key": "malwareCauseCount", "type": "int"},
        "malware_resource_count": {"key": "malwareResourceCount", "type": "int"},
        "malware_sequence_count": {"key": "malwareSequenceCount", "type": "int"},
        "phish_cause_count": {"key": "phishCauseCount", "type": "int"},
        "phish_resource_count": {"key": "phishResourceCount", "type": "int"},
        "phish_sequence_count": {"key": "phishSequenceCount", "type": "int"},
        "scam_cause_count": {"key": "scamCauseCount", "type": "int"},
        "scam_resource_count": {"key": "scamResourceCount", "type": "int"},
        "scam_sequence_count": {"key": "scamSequenceCount", "type": "int"},
        "spam_cause_count": {"key": "spamCauseCount", "type": "int"},
        "spam_resource_count": {"key": "spamResourceCount", "type": "int"},
        "spam_sequence_count": {"key": "spamSequenceCount", "type": "int"},
        "uuid": {"key": "uuid", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        host: Optional[str] = None,
        alexa_rank: Optional[int] = None,
        blacklist_cause_count: Optional[int] = None,
        blacklist_cause_first_seen: Optional[datetime.datetime] = None,
        blacklist_cause_last_seen: Optional[datetime.datetime] = None,
        blacklist_resource_count: Optional[int] = None,
        blacklist_resource_first_seen: Optional[datetime.datetime] = None,
        blacklist_resource_last_seen: Optional[datetime.datetime] = None,
        blacklist_sequence_count: Optional[int] = None,
        blacklist_sequence_first_seen: Optional[datetime.datetime] = None,
        blacklist_sequence_last_seen: Optional[datetime.datetime] = None,
        count: Optional[int] = None,
        domain: Optional[str] = None,
        domain_malware_reputation_score: Optional[int] = None,
        domain_phish_reputation_score: Optional[int] = None,
        domain_reputation_score: Optional[int] = None,
        domain_scam_reputation_score: Optional[int] = None,
        domain_spam_reputation_score: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        host_malware_reputation_score: Optional[int] = None,
        host_phish_reputation_score: Optional[int] = None,
        host_reputation_score: Optional[int] = None,
        host_scam_reputation_score: Optional[int] = None,
        host_spam_reputation_score: Optional[int] = None,
        last_seen: Optional[datetime.datetime] = None,
        malware_cause_count: Optional[int] = None,
        malware_resource_count: Optional[int] = None,
        malware_sequence_count: Optional[int] = None,
        phish_cause_count: Optional[int] = None,
        phish_resource_count: Optional[int] = None,
        phish_sequence_count: Optional[int] = None,
        scam_cause_count: Optional[int] = None,
        scam_resource_count: Optional[int] = None,
        scam_sequence_count: Optional[int] = None,
        spam_cause_count: Optional[int] = None,
        spam_resource_count: Optional[int] = None,
        spam_sequence_count: Optional[int] = None,
        uuid: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword host:
        :paramtype host: str
        :keyword alexa_rank:
        :paramtype alexa_rank: int
        :keyword blacklist_cause_count:
        :paramtype blacklist_cause_count: int
        :keyword blacklist_cause_first_seen:
        :paramtype blacklist_cause_first_seen: ~datetime.datetime
        :keyword blacklist_cause_last_seen:
        :paramtype blacklist_cause_last_seen: ~datetime.datetime
        :keyword blacklist_resource_count:
        :paramtype blacklist_resource_count: int
        :keyword blacklist_resource_first_seen:
        :paramtype blacklist_resource_first_seen: ~datetime.datetime
        :keyword blacklist_resource_last_seen:
        :paramtype blacklist_resource_last_seen: ~datetime.datetime
        :keyword blacklist_sequence_count:
        :paramtype blacklist_sequence_count: int
        :keyword blacklist_sequence_first_seen:
        :paramtype blacklist_sequence_first_seen: ~datetime.datetime
        :keyword blacklist_sequence_last_seen:
        :paramtype blacklist_sequence_last_seen: ~datetime.datetime
        :keyword count:
        :paramtype count: int
        :keyword domain:
        :paramtype domain: str
        :keyword domain_malware_reputation_score:
        :paramtype domain_malware_reputation_score: int
        :keyword domain_phish_reputation_score:
        :paramtype domain_phish_reputation_score: int
        :keyword domain_reputation_score:
        :paramtype domain_reputation_score: int
        :keyword domain_scam_reputation_score:
        :paramtype domain_scam_reputation_score: int
        :keyword domain_spam_reputation_score:
        :paramtype domain_spam_reputation_score: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword host_malware_reputation_score:
        :paramtype host_malware_reputation_score: int
        :keyword host_phish_reputation_score:
        :paramtype host_phish_reputation_score: int
        :keyword host_reputation_score:
        :paramtype host_reputation_score: int
        :keyword host_scam_reputation_score:
        :paramtype host_scam_reputation_score: int
        :keyword host_spam_reputation_score:
        :paramtype host_spam_reputation_score: int
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword malware_cause_count:
        :paramtype malware_cause_count: int
        :keyword malware_resource_count:
        :paramtype malware_resource_count: int
        :keyword malware_sequence_count:
        :paramtype malware_sequence_count: int
        :keyword phish_cause_count:
        :paramtype phish_cause_count: int
        :keyword phish_resource_count:
        :paramtype phish_resource_count: int
        :keyword phish_sequence_count:
        :paramtype phish_sequence_count: int
        :keyword scam_cause_count:
        :paramtype scam_cause_count: int
        :keyword scam_resource_count:
        :paramtype scam_resource_count: int
        :keyword scam_sequence_count:
        :paramtype scam_sequence_count: int
        :keyword spam_cause_count:
        :paramtype spam_cause_count: int
        :keyword spam_resource_count:
        :paramtype spam_resource_count: int
        :keyword spam_sequence_count:
        :paramtype spam_sequence_count: int
        :keyword uuid:
        :paramtype uuid: str
        """
        super().__init__(**kwargs)
        self.host = host
        self.alexa_rank = alexa_rank
        self.blacklist_cause_count = blacklist_cause_count
        self.blacklist_cause_first_seen = blacklist_cause_first_seen
        self.blacklist_cause_last_seen = blacklist_cause_last_seen
        self.blacklist_resource_count = blacklist_resource_count
        self.blacklist_resource_first_seen = blacklist_resource_first_seen
        self.blacklist_resource_last_seen = blacklist_resource_last_seen
        self.blacklist_sequence_count = blacklist_sequence_count
        self.blacklist_sequence_first_seen = blacklist_sequence_first_seen
        self.blacklist_sequence_last_seen = blacklist_sequence_last_seen
        self.count = count
        self.domain = domain
        self.domain_malware_reputation_score = domain_malware_reputation_score
        self.domain_phish_reputation_score = domain_phish_reputation_score
        self.domain_reputation_score = domain_reputation_score
        self.domain_scam_reputation_score = domain_scam_reputation_score
        self.domain_spam_reputation_score = domain_spam_reputation_score
        self.first_seen = first_seen
        self.host_malware_reputation_score = host_malware_reputation_score
        self.host_phish_reputation_score = host_phish_reputation_score
        self.host_reputation_score = host_reputation_score
        self.host_scam_reputation_score = host_scam_reputation_score
        self.host_spam_reputation_score = host_spam_reputation_score
        self.last_seen = last_seen
        self.malware_cause_count = malware_cause_count
        self.malware_resource_count = malware_resource_count
        self.malware_sequence_count = malware_sequence_count
        self.phish_cause_count = phish_cause_count
        self.phish_resource_count = phish_resource_count
        self.phish_sequence_count = phish_sequence_count
        self.scam_cause_count = scam_cause_count
        self.scam_resource_count = scam_resource_count
        self.scam_sequence_count = scam_sequence_count
        self.spam_cause_count = spam_cause_count
        self.spam_resource_count = spam_resource_count
        self.spam_sequence_count = spam_sequence_count
        self.uuid = uuid


class InnerError(_serialization.Model):
    """This is an object containing more specific information than the current object about the error.

    :ivar code: This is a more specific error code than was provided by the containing error.
    :vartype code: str
    :ivar value: This is an additional field representing the value that caused the error to help
     with debugging.
    :vartype value: JSON
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "value": {"key": "value", "type": "object"},
    }

    def __init__(self, *, code: Optional[str] = None, value: Optional[JSON] = None, **kwargs):
        """
        :keyword code: This is a more specific error code than was provided by the containing error.
        :paramtype code: str
        :keyword value: This is an additional field representing the value that caused the error to
         help with debugging.
        :paramtype value: JSON
        """
        super().__init__(**kwargs)
        self.code = code
        self.value = value


class IpAddressAsset(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """IpAddressAsset.

    :ivar asns:
    :vartype asns: list[~azure.easm.models.ObservedLong]
    :ivar attributes:
    :vartype attributes: list[~azure.easm.models.Attribute]
    :ivar banners:
    :vartype banners: list[~azure.easm.models.Banner]
    :ivar cookies:
    :vartype cookies: list[~azure.easm.models.Cookie]
    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar headers:
    :vartype headers: list[~azure.easm.models.ObservedHeader]
    :ivar hosts:
    :vartype hosts: list[~azure.easm.models.ObservedString]
    :ivar ip_address:
    :vartype ip_address: str
    :ivar ip_blocks:
    :vartype ip_blocks: list[~azure.easm.models.IpBlock]
    :ivar ipv4:
    :vartype ipv4: bool
    :ivar ipv6:
    :vartype ipv6: bool
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar location:
    :vartype location: list[~azure.easm.models.ObservedLocation]
    :ivar mx_record:
    :vartype mx_record: list[~azure.easm.models.ObservedBoolean]
    :ivar net_ranges:
    :vartype net_ranges: list[~azure.easm.models.ObservedString]
    :ivar ns_record:
    :vartype ns_record: list[~azure.easm.models.ObservedBoolean]
    :ivar nxdomain:
    :vartype nxdomain: list[~azure.easm.models.ObservedBoolean]
    :ivar reputations:
    :vartype reputations: list[~azure.easm.models.Reputation]
    :ivar scan_metadata:
    :vartype scan_metadata: list[~azure.easm.models.ScanMetadata]
    :ivar services:
    :vartype services: list[~azure.easm.models.Service]
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar ssl_certs:
    :vartype ssl_certs: list[~azure.easm.models.SslCertAsset]
    :ivar ssl_server_config:
    :vartype ssl_server_config: list[~azure.easm.models.SslServerConfig]
    :ivar web_components:
    :vartype web_components: list[~azure.easm.models.WebComponent]
    """

    _attribute_map = {
        "asns": {"key": "asns", "type": "[ObservedLong]"},
        "attributes": {"key": "attributes", "type": "[Attribute]"},
        "banners": {"key": "banners", "type": "[Banner]"},
        "cookies": {"key": "cookies", "type": "[Cookie]"},
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "headers": {"key": "headers", "type": "[ObservedHeader]"},
        "hosts": {"key": "hosts", "type": "[ObservedString]"},
        "ip_address": {"key": "ipAddress", "type": "str"},
        "ip_blocks": {"key": "ipBlocks", "type": "[IpBlock]"},
        "ipv4": {"key": "ipv4", "type": "bool"},
        "ipv6": {"key": "ipv6", "type": "bool"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "location": {"key": "location", "type": "[ObservedLocation]"},
        "mx_record": {"key": "mxRecord", "type": "[ObservedBoolean]"},
        "net_ranges": {"key": "netRanges", "type": "[ObservedString]"},
        "ns_record": {"key": "nsRecord", "type": "[ObservedBoolean]"},
        "nxdomain": {"key": "nxdomain", "type": "[ObservedBoolean]"},
        "reputations": {"key": "reputations", "type": "[Reputation]"},
        "scan_metadata": {"key": "scanMetadata", "type": "[ScanMetadata]"},
        "services": {"key": "services", "type": "[Service]"},
        "sources": {"key": "sources", "type": "[Source]"},
        "ssl_certs": {"key": "sslCerts", "type": "[SslCertAsset]"},
        "ssl_server_config": {"key": "sslServerConfig", "type": "[SslServerConfig]"},
        "web_components": {"key": "webComponents", "type": "[WebComponent]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        asns: Optional[List["_models.ObservedLong"]] = None,
        attributes: Optional[List["_models.Attribute"]] = None,
        banners: Optional[List["_models.Banner"]] = None,
        cookies: Optional[List["_models.Cookie"]] = None,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        headers: Optional[List["_models.ObservedHeader"]] = None,
        hosts: Optional[List["_models.ObservedString"]] = None,
        ip_address: Optional[str] = None,
        ip_blocks: Optional[List["_models.IpBlock"]] = None,
        ipv4: Optional[bool] = None,
        ipv6: Optional[bool] = None,
        last_seen: Optional[datetime.datetime] = None,
        location: Optional[List["_models.ObservedLocation"]] = None,
        mx_record: Optional[List["_models.ObservedBoolean"]] = None,
        net_ranges: Optional[List["_models.ObservedString"]] = None,
        ns_record: Optional[List["_models.ObservedBoolean"]] = None,
        nxdomain: Optional[List["_models.ObservedBoolean"]] = None,
        reputations: Optional[List["_models.Reputation"]] = None,
        scan_metadata: Optional[List["_models.ScanMetadata"]] = None,
        services: Optional[List["_models.Service"]] = None,
        sources: Optional[List["_models.Source"]] = None,
        ssl_certs: Optional[List["_models.SslCertAsset"]] = None,
        ssl_server_config: Optional[List["_models.SslServerConfig"]] = None,
        web_components: Optional[List["_models.WebComponent"]] = None,
        **kwargs
    ):
        """
        :keyword asns:
        :paramtype asns: list[~azure.easm.models.ObservedLong]
        :keyword attributes:
        :paramtype attributes: list[~azure.easm.models.Attribute]
        :keyword banners:
        :paramtype banners: list[~azure.easm.models.Banner]
        :keyword cookies:
        :paramtype cookies: list[~azure.easm.models.Cookie]
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword headers:
        :paramtype headers: list[~azure.easm.models.ObservedHeader]
        :keyword hosts:
        :paramtype hosts: list[~azure.easm.models.ObservedString]
        :keyword ip_address:
        :paramtype ip_address: str
        :keyword ip_blocks:
        :paramtype ip_blocks: list[~azure.easm.models.IpBlock]
        :keyword ipv4:
        :paramtype ipv4: bool
        :keyword ipv6:
        :paramtype ipv6: bool
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword location:
        :paramtype location: list[~azure.easm.models.ObservedLocation]
        :keyword mx_record:
        :paramtype mx_record: list[~azure.easm.models.ObservedBoolean]
        :keyword net_ranges:
        :paramtype net_ranges: list[~azure.easm.models.ObservedString]
        :keyword ns_record:
        :paramtype ns_record: list[~azure.easm.models.ObservedBoolean]
        :keyword nxdomain:
        :paramtype nxdomain: list[~azure.easm.models.ObservedBoolean]
        :keyword reputations:
        :paramtype reputations: list[~azure.easm.models.Reputation]
        :keyword scan_metadata:
        :paramtype scan_metadata: list[~azure.easm.models.ScanMetadata]
        :keyword services:
        :paramtype services: list[~azure.easm.models.Service]
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword ssl_certs:
        :paramtype ssl_certs: list[~azure.easm.models.SslCertAsset]
        :keyword ssl_server_config:
        :paramtype ssl_server_config: list[~azure.easm.models.SslServerConfig]
        :keyword web_components:
        :paramtype web_components: list[~azure.easm.models.WebComponent]
        """
        super().__init__(**kwargs)
        self.asns = asns
        self.attributes = attributes
        self.banners = banners
        self.cookies = cookies
        self.count = count
        self.first_seen = first_seen
        self.headers = headers
        self.hosts = hosts
        self.ip_address = ip_address
        self.ip_blocks = ip_blocks
        self.ipv4 = ipv4
        self.ipv6 = ipv6
        self.last_seen = last_seen
        self.location = location
        self.mx_record = mx_record
        self.net_ranges = net_ranges
        self.ns_record = ns_record
        self.nxdomain = nxdomain
        self.reputations = reputations
        self.scan_metadata = scan_metadata
        self.services = services
        self.sources = sources
        self.ssl_certs = ssl_certs
        self.ssl_server_config = ssl_server_config
        self.web_components = web_components


class IpAddressAssetResponse(AssetResponse):  # pylint: disable=too-many-instance-attributes
    """IpAddressAssetResponse.

    All required parameters must be populated in order to send to Azure.

    :ivar audit_trail:
    :vartype audit_trail: list[~azure.easm.models.AuditTrailItem]
    :ivar created_date:
    :vartype created_date: ~datetime.datetime
    :ivar disco_group_name:
    :vartype disco_group_name: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar external_id:
    :vartype external_id: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Required. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AssetResponseKind
    :ivar labels:
    :vartype labels: list[~azure.easm.models.LabelResource]
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    :ivar state: Known values are: "candidate", "confirmed", "dismissed", "candidateInvestigate",
     "associatedPartner", "associatedThirdparty", and "archived".
    :vartype state: str or ~azure.easm.models.AssetResponseState
    :ivar updated_date:
    :vartype updated_date: ~datetime.datetime
    :ivar uuid:
    :vartype uuid: str
    :ivar wildcard:
    :vartype wildcard: bool
    :ivar asset: Required.
    :vartype asset: ~azure.easm.models.IpAddressAsset
    """

    _validation = {
        "kind": {"required": True},
        "asset": {"required": True},
    }

    _attribute_map = {
        "audit_trail": {"key": "auditTrail", "type": "[AuditTrailItem]"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "disco_group_name": {"key": "discoGroupName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "labels": {"key": "labels", "type": "[LabelResource]"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
        "uuid": {"key": "uuid", "type": "str"},
        "wildcard": {"key": "wildcard", "type": "bool"},
        "asset": {"key": "asset", "type": "IpAddressAsset"},
    }

    def __init__(
        self,
        *,
        asset: "_models.IpAddressAsset",
        audit_trail: Optional[List["_models.AuditTrailItem"]] = None,
        created_date: Optional[datetime.datetime] = None,
        disco_group_name: Optional[str] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        labels: Optional[List["_models.LabelResource"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        state: Optional[Union[str, "_models.AssetResponseState"]] = None,
        updated_date: Optional[datetime.datetime] = None,
        uuid: Optional[str] = None,
        wildcard: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword audit_trail:
        :paramtype audit_trail: list[~azure.easm.models.AuditTrailItem]
        :keyword created_date:
        :paramtype created_date: ~datetime.datetime
        :keyword disco_group_name:
        :paramtype disco_group_name: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword external_id:
        :paramtype external_id: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword labels:
        :paramtype labels: list[~azure.easm.models.LabelResource]
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        :keyword state: Known values are: "candidate", "confirmed", "dismissed",
         "candidateInvestigate", "associatedPartner", "associatedThirdparty", and "archived".
        :paramtype state: str or ~azure.easm.models.AssetResponseState
        :keyword updated_date:
        :paramtype updated_date: ~datetime.datetime
        :keyword uuid:
        :paramtype uuid: str
        :keyword wildcard:
        :paramtype wildcard: bool
        :keyword asset: Required.
        :paramtype asset: ~azure.easm.models.IpAddressAsset
        """
        super().__init__(
            audit_trail=audit_trail,
            created_date=created_date,
            disco_group_name=disco_group_name,
            display_name=display_name,
            external_id=external_id,
            id=id,
            labels=labels,
            name=name,
            reason=reason,
            state=state,
            updated_date=updated_date,
            uuid=uuid,
            wildcard=wildcard,
            **kwargs
        )
        self.kind = "ipAddress"  # type: str
        self.asset = asset


class IpBlock(_serialization.Model):
    """IpBlock.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar ip_block:
    :vartype ip_block: str
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "ip_block": {"key": "ipBlock", "type": "str"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "sources": {"key": "sources", "type": "[Source]"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        ip_block: Optional[str] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        sources: Optional[List["_models.Source"]] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword ip_block:
        :paramtype ip_block: str
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.ip_block = ip_block
        self.last_seen = last_seen
        self.recent = recent
        self.sources = sources


class IpBlockAsset(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """IpBlockAsset.

    :ivar admin_contacts:
    :vartype admin_contacts: list[~azure.easm.models.ObservedString]
    :ivar admin_names:
    :vartype admin_names: list[~azure.easm.models.ObservedString]
    :ivar admin_orgs:
    :vartype admin_orgs: list[~azure.easm.models.ObservedString]
    :ivar admin_phones:
    :vartype admin_phones: list[~azure.easm.models.ObservedString]
    :ivar asns:
    :vartype asns: list[~azure.easm.models.ObservedLong]
    :ivar bgp_prefixes:
    :vartype bgp_prefixes: list[~azure.easm.models.ObservedString]
    :ivar count:
    :vartype count: int
    :ivar detailed_from_whois_at:
    :vartype detailed_from_whois_at: ~datetime.datetime
    :ivar end_ip:
    :vartype end_ip: str
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar ip_block:
    :vartype ip_block: str
    :ivar ipv4:
    :vartype ipv4: bool
    :ivar ipv6:
    :vartype ipv6: bool
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar location:
    :vartype location: list[~azure.easm.models.ObservedLocation]
    :ivar net_names:
    :vartype net_names: list[~azure.easm.models.ObservedString]
    :ivar net_ranges:
    :vartype net_ranges: list[~azure.easm.models.ObservedString]
    :ivar registrant_contacts:
    :vartype registrant_contacts: list[~azure.easm.models.ObservedString]
    :ivar registrant_names:
    :vartype registrant_names: list[~azure.easm.models.ObservedString]
    :ivar registrant_orgs:
    :vartype registrant_orgs: list[~azure.easm.models.ObservedString]
    :ivar registrant_phones:
    :vartype registrant_phones: list[~azure.easm.models.ObservedString]
    :ivar registrar_created_at:
    :vartype registrar_created_at: list[~azure.easm.models.ObservedLong]
    :ivar registrar_expires_at:
    :vartype registrar_expires_at: list[~azure.easm.models.ObservedLong]
    :ivar registrar_updated_at:
    :vartype registrar_updated_at: list[~azure.easm.models.ObservedLong]
    :ivar reputations:
    :vartype reputations: list[~azure.easm.models.Reputation]
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar start_ip:
    :vartype start_ip: str
    :ivar technical_contacts:
    :vartype technical_contacts: list[~azure.easm.models.ObservedString]
    :ivar technical_names:
    :vartype technical_names: list[~azure.easm.models.ObservedString]
    :ivar technical_orgs:
    :vartype technical_orgs: list[~azure.easm.models.ObservedString]
    :ivar technical_phones:
    :vartype technical_phones: list[~azure.easm.models.ObservedString]
    """

    _attribute_map = {
        "admin_contacts": {"key": "adminContacts", "type": "[ObservedString]"},
        "admin_names": {"key": "adminNames", "type": "[ObservedString]"},
        "admin_orgs": {"key": "adminOrgs", "type": "[ObservedString]"},
        "admin_phones": {"key": "adminPhones", "type": "[ObservedString]"},
        "asns": {"key": "asns", "type": "[ObservedLong]"},
        "bgp_prefixes": {"key": "bgpPrefixes", "type": "[ObservedString]"},
        "count": {"key": "count", "type": "int"},
        "detailed_from_whois_at": {"key": "detailedFromWhoisAt", "type": "iso-8601"},
        "end_ip": {"key": "endIp", "type": "str"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "ip_block": {"key": "ipBlock", "type": "str"},
        "ipv4": {"key": "ipv4", "type": "bool"},
        "ipv6": {"key": "ipv6", "type": "bool"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "location": {"key": "location", "type": "[ObservedLocation]"},
        "net_names": {"key": "netNames", "type": "[ObservedString]"},
        "net_ranges": {"key": "netRanges", "type": "[ObservedString]"},
        "registrant_contacts": {"key": "registrantContacts", "type": "[ObservedString]"},
        "registrant_names": {"key": "registrantNames", "type": "[ObservedString]"},
        "registrant_orgs": {"key": "registrantOrgs", "type": "[ObservedString]"},
        "registrant_phones": {"key": "registrantPhones", "type": "[ObservedString]"},
        "registrar_created_at": {"key": "registrarCreatedAt", "type": "[ObservedLong]"},
        "registrar_expires_at": {"key": "registrarExpiresAt", "type": "[ObservedLong]"},
        "registrar_updated_at": {"key": "registrarUpdatedAt", "type": "[ObservedLong]"},
        "reputations": {"key": "reputations", "type": "[Reputation]"},
        "sources": {"key": "sources", "type": "[Source]"},
        "start_ip": {"key": "startIp", "type": "str"},
        "technical_contacts": {"key": "technicalContacts", "type": "[ObservedString]"},
        "technical_names": {"key": "technicalNames", "type": "[ObservedString]"},
        "technical_orgs": {"key": "technicalOrgs", "type": "[ObservedString]"},
        "technical_phones": {"key": "technicalPhones", "type": "[ObservedString]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        admin_contacts: Optional[List["_models.ObservedString"]] = None,
        admin_names: Optional[List["_models.ObservedString"]] = None,
        admin_orgs: Optional[List["_models.ObservedString"]] = None,
        admin_phones: Optional[List["_models.ObservedString"]] = None,
        asns: Optional[List["_models.ObservedLong"]] = None,
        bgp_prefixes: Optional[List["_models.ObservedString"]] = None,
        count: Optional[int] = None,
        detailed_from_whois_at: Optional[datetime.datetime] = None,
        end_ip: Optional[str] = None,
        first_seen: Optional[datetime.datetime] = None,
        ip_block: Optional[str] = None,
        ipv4: Optional[bool] = None,
        ipv6: Optional[bool] = None,
        last_seen: Optional[datetime.datetime] = None,
        location: Optional[List["_models.ObservedLocation"]] = None,
        net_names: Optional[List["_models.ObservedString"]] = None,
        net_ranges: Optional[List["_models.ObservedString"]] = None,
        registrant_contacts: Optional[List["_models.ObservedString"]] = None,
        registrant_names: Optional[List["_models.ObservedString"]] = None,
        registrant_orgs: Optional[List["_models.ObservedString"]] = None,
        registrant_phones: Optional[List["_models.ObservedString"]] = None,
        registrar_created_at: Optional[List["_models.ObservedLong"]] = None,
        registrar_expires_at: Optional[List["_models.ObservedLong"]] = None,
        registrar_updated_at: Optional[List["_models.ObservedLong"]] = None,
        reputations: Optional[List["_models.Reputation"]] = None,
        sources: Optional[List["_models.Source"]] = None,
        start_ip: Optional[str] = None,
        technical_contacts: Optional[List["_models.ObservedString"]] = None,
        technical_names: Optional[List["_models.ObservedString"]] = None,
        technical_orgs: Optional[List["_models.ObservedString"]] = None,
        technical_phones: Optional[List["_models.ObservedString"]] = None,
        **kwargs
    ):
        """
        :keyword admin_contacts:
        :paramtype admin_contacts: list[~azure.easm.models.ObservedString]
        :keyword admin_names:
        :paramtype admin_names: list[~azure.easm.models.ObservedString]
        :keyword admin_orgs:
        :paramtype admin_orgs: list[~azure.easm.models.ObservedString]
        :keyword admin_phones:
        :paramtype admin_phones: list[~azure.easm.models.ObservedString]
        :keyword asns:
        :paramtype asns: list[~azure.easm.models.ObservedLong]
        :keyword bgp_prefixes:
        :paramtype bgp_prefixes: list[~azure.easm.models.ObservedString]
        :keyword count:
        :paramtype count: int
        :keyword detailed_from_whois_at:
        :paramtype detailed_from_whois_at: ~datetime.datetime
        :keyword end_ip:
        :paramtype end_ip: str
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword ip_block:
        :paramtype ip_block: str
        :keyword ipv4:
        :paramtype ipv4: bool
        :keyword ipv6:
        :paramtype ipv6: bool
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword location:
        :paramtype location: list[~azure.easm.models.ObservedLocation]
        :keyword net_names:
        :paramtype net_names: list[~azure.easm.models.ObservedString]
        :keyword net_ranges:
        :paramtype net_ranges: list[~azure.easm.models.ObservedString]
        :keyword registrant_contacts:
        :paramtype registrant_contacts: list[~azure.easm.models.ObservedString]
        :keyword registrant_names:
        :paramtype registrant_names: list[~azure.easm.models.ObservedString]
        :keyword registrant_orgs:
        :paramtype registrant_orgs: list[~azure.easm.models.ObservedString]
        :keyword registrant_phones:
        :paramtype registrant_phones: list[~azure.easm.models.ObservedString]
        :keyword registrar_created_at:
        :paramtype registrar_created_at: list[~azure.easm.models.ObservedLong]
        :keyword registrar_expires_at:
        :paramtype registrar_expires_at: list[~azure.easm.models.ObservedLong]
        :keyword registrar_updated_at:
        :paramtype registrar_updated_at: list[~azure.easm.models.ObservedLong]
        :keyword reputations:
        :paramtype reputations: list[~azure.easm.models.Reputation]
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword start_ip:
        :paramtype start_ip: str
        :keyword technical_contacts:
        :paramtype technical_contacts: list[~azure.easm.models.ObservedString]
        :keyword technical_names:
        :paramtype technical_names: list[~azure.easm.models.ObservedString]
        :keyword technical_orgs:
        :paramtype technical_orgs: list[~azure.easm.models.ObservedString]
        :keyword technical_phones:
        :paramtype technical_phones: list[~azure.easm.models.ObservedString]
        """
        super().__init__(**kwargs)
        self.admin_contacts = admin_contacts
        self.admin_names = admin_names
        self.admin_orgs = admin_orgs
        self.admin_phones = admin_phones
        self.asns = asns
        self.bgp_prefixes = bgp_prefixes
        self.count = count
        self.detailed_from_whois_at = detailed_from_whois_at
        self.end_ip = end_ip
        self.first_seen = first_seen
        self.ip_block = ip_block
        self.ipv4 = ipv4
        self.ipv6 = ipv6
        self.last_seen = last_seen
        self.location = location
        self.net_names = net_names
        self.net_ranges = net_ranges
        self.registrant_contacts = registrant_contacts
        self.registrant_names = registrant_names
        self.registrant_orgs = registrant_orgs
        self.registrant_phones = registrant_phones
        self.registrar_created_at = registrar_created_at
        self.registrar_expires_at = registrar_expires_at
        self.registrar_updated_at = registrar_updated_at
        self.reputations = reputations
        self.sources = sources
        self.start_ip = start_ip
        self.technical_contacts = technical_contacts
        self.technical_names = technical_names
        self.technical_orgs = technical_orgs
        self.technical_phones = technical_phones


class IpBlockAssetResponse(AssetResponse):  # pylint: disable=too-many-instance-attributes
    """IpBlockAssetResponse.

    All required parameters must be populated in order to send to Azure.

    :ivar audit_trail:
    :vartype audit_trail: list[~azure.easm.models.AuditTrailItem]
    :ivar created_date:
    :vartype created_date: ~datetime.datetime
    :ivar disco_group_name:
    :vartype disco_group_name: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar external_id:
    :vartype external_id: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Required. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AssetResponseKind
    :ivar labels:
    :vartype labels: list[~azure.easm.models.LabelResource]
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    :ivar state: Known values are: "candidate", "confirmed", "dismissed", "candidateInvestigate",
     "associatedPartner", "associatedThirdparty", and "archived".
    :vartype state: str or ~azure.easm.models.AssetResponseState
    :ivar updated_date:
    :vartype updated_date: ~datetime.datetime
    :ivar uuid:
    :vartype uuid: str
    :ivar wildcard:
    :vartype wildcard: bool
    :ivar asset: Required.
    :vartype asset: ~azure.easm.models.IpBlockAsset
    """

    _validation = {
        "kind": {"required": True},
        "asset": {"required": True},
    }

    _attribute_map = {
        "audit_trail": {"key": "auditTrail", "type": "[AuditTrailItem]"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "disco_group_name": {"key": "discoGroupName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "labels": {"key": "labels", "type": "[LabelResource]"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
        "uuid": {"key": "uuid", "type": "str"},
        "wildcard": {"key": "wildcard", "type": "bool"},
        "asset": {"key": "asset", "type": "IpBlockAsset"},
    }

    def __init__(
        self,
        *,
        asset: "_models.IpBlockAsset",
        audit_trail: Optional[List["_models.AuditTrailItem"]] = None,
        created_date: Optional[datetime.datetime] = None,
        disco_group_name: Optional[str] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        labels: Optional[List["_models.LabelResource"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        state: Optional[Union[str, "_models.AssetResponseState"]] = None,
        updated_date: Optional[datetime.datetime] = None,
        uuid: Optional[str] = None,
        wildcard: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword audit_trail:
        :paramtype audit_trail: list[~azure.easm.models.AuditTrailItem]
        :keyword created_date:
        :paramtype created_date: ~datetime.datetime
        :keyword disco_group_name:
        :paramtype disco_group_name: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword external_id:
        :paramtype external_id: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword labels:
        :paramtype labels: list[~azure.easm.models.LabelResource]
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        :keyword state: Known values are: "candidate", "confirmed", "dismissed",
         "candidateInvestigate", "associatedPartner", "associatedThirdparty", and "archived".
        :paramtype state: str or ~azure.easm.models.AssetResponseState
        :keyword updated_date:
        :paramtype updated_date: ~datetime.datetime
        :keyword uuid:
        :paramtype uuid: str
        :keyword wildcard:
        :paramtype wildcard: bool
        :keyword asset: Required.
        :paramtype asset: ~azure.easm.models.IpBlockAsset
        """
        super().__init__(
            audit_trail=audit_trail,
            created_date=created_date,
            disco_group_name=disco_group_name,
            display_name=display_name,
            external_id=external_id,
            id=id,
            labels=labels,
            name=name,
            reason=reason,
            state=state,
            updated_date=updated_date,
            uuid=uuid,
            wildcard=wildcard,
            **kwargs
        )
        self.kind = "ipBlock"  # type: str
        self.asset = asset


class LabelResource(_serialization.Model):
    """LabelResource.

    :ivar color:
    :vartype color: str
    :ivar display_name:
    :vartype display_name: str
    :ivar id:
    :vartype id: str
    :ivar name:
    :vartype name: str
    :ivar type:
    :vartype type: str
    :ivar uuid:
    :vartype uuid: str
    """

    _attribute_map = {
        "color": {"key": "color", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "uuid": {"key": "uuid", "type": "str"},
    }

    def __init__(
        self,
        *,
        color: Optional[str] = None,
        display_name: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        type: Optional[str] = None,
        uuid: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword color:
        :paramtype color: str
        :keyword display_name:
        :paramtype display_name: str
        :keyword id:
        :paramtype id: str
        :keyword name:
        :paramtype name: str
        :keyword type:
        :paramtype type: str
        :keyword uuid:
        :paramtype uuid: str
        """
        super().__init__(**kwargs)
        self.color = color
        self.display_name = display_name
        self.id = id
        self.name = name
        self.type = type
        self.uuid = uuid


class Location(_serialization.Model):
    """Location.

    :ivar city:
    :vartype city: str
    :ivar latitude:
    :vartype latitude: float
    :ivar longitude:
    :vartype longitude: float
    :ivar region:
    :vartype region: str
    """

    _attribute_map = {
        "city": {"key": "city", "type": "str"},
        "latitude": {"key": "latitude", "type": "float"},
        "longitude": {"key": "longitude", "type": "float"},
        "region": {"key": "region", "type": "str"},
    }

    def __init__(
        self,
        *,
        city: Optional[str] = None,
        latitude: Optional[float] = None,
        longitude: Optional[float] = None,
        region: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword city:
        :paramtype city: str
        :keyword latitude:
        :paramtype latitude: float
        :keyword longitude:
        :paramtype longitude: float
        :keyword region:
        :paramtype region: str
        """
        super().__init__(**kwargs)
        self.city = city
        self.latitude = latitude
        self.longitude = longitude
        self.region = region


class ObservedBoolean(_serialization.Model):
    """ObservedBoolean.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar value:
    :vartype value: bool
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "sources": {"key": "sources", "type": "[Source]"},
        "value": {"key": "value", "type": "bool"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        sources: Optional[List["_models.Source"]] = None,
        value: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword value:
        :paramtype value: bool
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent
        self.sources = sources
        self.value = value


class ObservedHeader(_serialization.Model):
    """ObservedHeader.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar header_name:
    :vartype header_name: str
    :ivar header_value:
    :vartype header_value: str
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "header_name": {"key": "headerName", "type": "str"},
        "header_value": {"key": "headerValue", "type": "str"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        header_name: Optional[str] = None,
        header_value: Optional[str] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword header_name:
        :paramtype header_name: str
        :keyword header_value:
        :paramtype header_value: str
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.header_name = header_name
        self.header_value = header_value
        self.last_seen = last_seen
        self.recent = recent


class ObservedInteger(_serialization.Model):
    """ObservedInteger.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar value:
    :vartype value: int
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "sources": {"key": "sources", "type": "[Source]"},
        "value": {"key": "value", "type": "int"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        sources: Optional[List["_models.Source"]] = None,
        value: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword value:
        :paramtype value: int
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent
        self.sources = sources
        self.value = value


class ObservedIntegers(_serialization.Model):
    """ObservedIntegers.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar values:
    :vartype values: list[int]
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "sources": {"key": "sources", "type": "[Source]"},
        "values": {"key": "values", "type": "[int]"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        sources: Optional[List["_models.Source"]] = None,
        values: Optional[List[int]] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword values:
        :paramtype values: list[int]
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent
        self.sources = sources
        self.values = values


class ObservedLocation(_serialization.Model):
    """ObservedLocation.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar value:
    :vartype value: ~azure.easm.models.Location
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "sources": {"key": "sources", "type": "[Source]"},
        "value": {"key": "value", "type": "Location"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        sources: Optional[List["_models.Source"]] = None,
        value: Optional["_models.Location"] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword value:
        :paramtype value: ~azure.easm.models.Location
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent
        self.sources = sources
        self.value = value


class ObservedLong(_serialization.Model):
    """ObservedLong.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar value:
    :vartype value: int
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "sources": {"key": "sources", "type": "[Source]"},
        "value": {"key": "value", "type": "int"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        sources: Optional[List["_models.Source"]] = None,
        value: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword value:
        :paramtype value: int
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent
        self.sources = sources
        self.value = value


class ObservedPortState(_serialization.Model):
    """ObservedPortState.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar port:
    :vartype port: int
    :ivar recent:
    :vartype recent: bool
    :ivar value: Known values are: "open", "closed", and "filtered".
    :vartype value: str or ~azure.easm.models.ObservedPortStateValue
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "port": {"key": "port", "type": "int"},
        "recent": {"key": "recent", "type": "bool"},
        "value": {"key": "value", "type": "str"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        port: Optional[int] = None,
        recent: Optional[bool] = None,
        value: Optional[Union[str, "_models.ObservedPortStateValue"]] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword port:
        :paramtype port: int
        :keyword recent:
        :paramtype recent: bool
        :keyword value: Known values are: "open", "closed", and "filtered".
        :paramtype value: str or ~azure.easm.models.ObservedPortStateValue
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.port = port
        self.recent = recent
        self.value = value


class ObservedString(_serialization.Model):
    """ObservedString.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar value:
    :vartype value: str
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "sources": {"key": "sources", "type": "[Source]"},
        "value": {"key": "value", "type": "str"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        sources: Optional[List["_models.Source"]] = None,
        value: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword value:
        :paramtype value: str
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent
        self.sources = sources
        self.value = value


class PageAsset(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """PageAsset.

    :ivar host:
    :vartype host: str
    :ivar asns:
    :vartype asns: list[~azure.easm.models.ObservedLong]
    :ivar asset_security_policies:
    :vartype asset_security_policies: list[~azure.easm.models.AssetSecurityPolicy]
    :ivar attributes:
    :vartype attributes: list[~azure.easm.models.Attribute]
    :ivar cause:
    :vartype cause: ~azure.easm.models.PageCause
    :ivar cdns:
    :vartype cdns: list[~azure.easm.models.ObservedString]
    :ivar charsets:
    :vartype charsets: list[~azure.easm.models.ObservedString]
    :ivar cnames:
    :vartype cnames: list[~azure.easm.models.ObservedString]
    :ivar content_lengths:
    :vartype content_lengths: list[~azure.easm.models.ObservedLong]
    :ivar content_types:
    :vartype content_types: list[~azure.easm.models.ObservedString]
    :ivar cookies:
    :vartype cookies: list[~azure.easm.models.Cookie]
    :ivar count:
    :vartype count: int
    :ivar domain:
    :vartype domain: str
    :ivar domain_asset:
    :vartype domain_asset: ~azure.easm.models.DomainAsset
    :ivar errors:
    :vartype errors: list[~azure.easm.models.ObservedString]
    :ivar final_asns:
    :vartype final_asns: list[~azure.easm.models.ObservedLong]
    :ivar final_ip_addresses:
    :vartype final_ip_addresses: list[~azure.easm.models.ObservedString]
    :ivar final_ip_blocks:
    :vartype final_ip_blocks: list[~azure.easm.models.IpBlock]
    :ivar final_response_codes:
    :vartype final_response_codes: list[~azure.easm.models.ObservedInteger]
    :ivar final_urls:
    :vartype final_urls: list[~azure.easm.models.ObservedString]
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar frames:
    :vartype frames: list[~azure.easm.models.ObservedBoolean]
    :ivar full_dom_minhash_signatures:
    :vartype full_dom_minhash_signatures: list[~azure.easm.models.ObservedIntegers]
    :ivar gdpr_asset_security_policies:
    :vartype gdpr_asset_security_policies: list[~azure.easm.models.AssetSecurityPolicy]
    :ivar guids:
    :vartype guids: list[~azure.easm.models.GuidPair]
    :ivar http_method:
    :vartype http_method: str
    :ivar http_response_codes:
    :vartype http_response_codes: list[~azure.easm.models.ObservedInteger]
    :ivar http_response_messages:
    :vartype http_response_messages: list[~azure.easm.models.ObservedString]
    :ivar ip_addresses:
    :vartype ip_addresses: list[~azure.easm.models.ObservedString]
    :ivar ip_blocks:
    :vartype ip_blocks: list[~azure.easm.models.IpBlock]
    :ivar ipv4:
    :vartype ipv4: list[~azure.easm.models.ObservedBoolean]
    :ivar ipv6:
    :vartype ipv6: list[~azure.easm.models.ObservedBoolean]
    :ivar is_root_url:
    :vartype is_root_url: bool
    :ivar languages:
    :vartype languages: list[~azure.easm.models.ObservedString]
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar location:
    :vartype location: list[~azure.easm.models.ObservedLocation]
    :ivar non_html_frames:
    :vartype non_html_frames: list[~azure.easm.models.ObservedBoolean]
    :ivar parked_page:
    :vartype parked_page: list[~azure.easm.models.ObservedBoolean]
    :ivar redirect_type: Known values are: "httpHeader", "metaRefresh", "javascript", and "final".
    :vartype redirect_type: str or ~azure.easm.models.PageAssetRedirectType
    :ivar redirect_urls:
    :vartype redirect_urls: list[~azure.easm.models.ObservedString]
    :ivar referrer:
    :vartype referrer: str
    :ivar resource_urls:
    :vartype resource_urls: list[~azure.easm.models.ResourceUrl]
    :ivar response_bodies:
    :vartype response_bodies: list[~azure.easm.models.ObservedString]
    :ivar response_body_hash_signatures:
    :vartype response_body_hash_signatures: list[~azure.easm.models.ObservedString]
    :ivar response_body_minhash_signatures:
    :vartype response_body_minhash_signatures: list[~azure.easm.models.ObservedIntegers]
    :ivar response_headers:
    :vartype response_headers: list[~azure.easm.models.ObservedHeader]
    :ivar response_times:
    :vartype response_times: list[~azure.easm.models.ObservedLong]
    :ivar root_url:
    :vartype root_url: ~azure.easm.models.ObservedBoolean
    :ivar service:
    :vartype service: str
    :ivar services:
    :vartype services: list[~azure.easm.models.Service]
    :ivar site_status:
    :vartype site_status: str
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar ssl_certs:
    :vartype ssl_certs: list[~azure.easm.models.SslCertAsset]
    :ivar ssl_server_config:
    :vartype ssl_server_config: list[~azure.easm.models.SslServerConfig]
    :ivar successful:
    :vartype successful: list[~azure.easm.models.ObservedBoolean]
    :ivar titles:
    :vartype titles: list[~azure.easm.models.ObservedString]
    :ivar undirected_content:
    :vartype undirected_content: list[~azure.easm.models.ObservedBoolean]
    :ivar url:
    :vartype url: str
    :ivar web_components:
    :vartype web_components: list[~azure.easm.models.WebComponent]
    :ivar window_names:
    :vartype window_names: list[~azure.easm.models.ObservedString]
    :ivar windows:
    :vartype windows: list[~azure.easm.models.ObservedBoolean]
    """

    _attribute_map = {
        "host": {"key": "host", "type": "str"},
        "asns": {"key": "asns", "type": "[ObservedLong]"},
        "asset_security_policies": {"key": "assetSecurityPolicies", "type": "[AssetSecurityPolicy]"},
        "attributes": {"key": "attributes", "type": "[Attribute]"},
        "cause": {"key": "cause", "type": "PageCause"},
        "cdns": {"key": "cdns", "type": "[ObservedString]"},
        "charsets": {"key": "charsets", "type": "[ObservedString]"},
        "cnames": {"key": "cnames", "type": "[ObservedString]"},
        "content_lengths": {"key": "contentLengths", "type": "[ObservedLong]"},
        "content_types": {"key": "contentTypes", "type": "[ObservedString]"},
        "cookies": {"key": "cookies", "type": "[Cookie]"},
        "count": {"key": "count", "type": "int"},
        "domain": {"key": "domain", "type": "str"},
        "domain_asset": {"key": "domainAsset", "type": "DomainAsset"},
        "errors": {"key": "errors", "type": "[ObservedString]"},
        "final_asns": {"key": "finalAsns", "type": "[ObservedLong]"},
        "final_ip_addresses": {"key": "finalIpAddresses", "type": "[ObservedString]"},
        "final_ip_blocks": {"key": "finalIpBlocks", "type": "[IpBlock]"},
        "final_response_codes": {"key": "finalResponseCodes", "type": "[ObservedInteger]"},
        "final_urls": {"key": "finalUrls", "type": "[ObservedString]"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "frames": {"key": "frames", "type": "[ObservedBoolean]"},
        "full_dom_minhash_signatures": {"key": "fullDomMinhashSignatures", "type": "[ObservedIntegers]"},
        "gdpr_asset_security_policies": {"key": "gdprAssetSecurityPolicies", "type": "[AssetSecurityPolicy]"},
        "guids": {"key": "guids", "type": "[GuidPair]"},
        "http_method": {"key": "httpMethod", "type": "str"},
        "http_response_codes": {"key": "httpResponseCodes", "type": "[ObservedInteger]"},
        "http_response_messages": {"key": "httpResponseMessages", "type": "[ObservedString]"},
        "ip_addresses": {"key": "ipAddresses", "type": "[ObservedString]"},
        "ip_blocks": {"key": "ipBlocks", "type": "[IpBlock]"},
        "ipv4": {"key": "ipv4", "type": "[ObservedBoolean]"},
        "ipv6": {"key": "ipv6", "type": "[ObservedBoolean]"},
        "is_root_url": {"key": "isRootUrl", "type": "bool"},
        "languages": {"key": "languages", "type": "[ObservedString]"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "location": {"key": "location", "type": "[ObservedLocation]"},
        "non_html_frames": {"key": "nonHtmlFrames", "type": "[ObservedBoolean]"},
        "parked_page": {"key": "parkedPage", "type": "[ObservedBoolean]"},
        "redirect_type": {"key": "redirectType", "type": "str"},
        "redirect_urls": {"key": "redirectUrls", "type": "[ObservedString]"},
        "referrer": {"key": "referrer", "type": "str"},
        "resource_urls": {"key": "resourceUrls", "type": "[ResourceUrl]"},
        "response_bodies": {"key": "responseBodies", "type": "[ObservedString]"},
        "response_body_hash_signatures": {"key": "responseBodyHashSignatures", "type": "[ObservedString]"},
        "response_body_minhash_signatures": {"key": "responseBodyMinhashSignatures", "type": "[ObservedIntegers]"},
        "response_headers": {"key": "responseHeaders", "type": "[ObservedHeader]"},
        "response_times": {"key": "responseTimes", "type": "[ObservedLong]"},
        "root_url": {"key": "rootUrl", "type": "ObservedBoolean"},
        "service": {"key": "service", "type": "str"},
        "services": {"key": "services", "type": "[Service]"},
        "site_status": {"key": "siteStatus", "type": "str"},
        "sources": {"key": "sources", "type": "[Source]"},
        "ssl_certs": {"key": "sslCerts", "type": "[SslCertAsset]"},
        "ssl_server_config": {"key": "sslServerConfig", "type": "[SslServerConfig]"},
        "successful": {"key": "successful", "type": "[ObservedBoolean]"},
        "titles": {"key": "titles", "type": "[ObservedString]"},
        "undirected_content": {"key": "undirectedContent", "type": "[ObservedBoolean]"},
        "url": {"key": "url", "type": "str"},
        "web_components": {"key": "webComponents", "type": "[WebComponent]"},
        "window_names": {"key": "windowNames", "type": "[ObservedString]"},
        "windows": {"key": "windows", "type": "[ObservedBoolean]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        host: Optional[str] = None,
        asns: Optional[List["_models.ObservedLong"]] = None,
        asset_security_policies: Optional[List["_models.AssetSecurityPolicy"]] = None,
        attributes: Optional[List["_models.Attribute"]] = None,
        cause: Optional["_models.PageCause"] = None,
        cdns: Optional[List["_models.ObservedString"]] = None,
        charsets: Optional[List["_models.ObservedString"]] = None,
        cnames: Optional[List["_models.ObservedString"]] = None,
        content_lengths: Optional[List["_models.ObservedLong"]] = None,
        content_types: Optional[List["_models.ObservedString"]] = None,
        cookies: Optional[List["_models.Cookie"]] = None,
        count: Optional[int] = None,
        domain: Optional[str] = None,
        domain_asset: Optional["_models.DomainAsset"] = None,
        errors: Optional[List["_models.ObservedString"]] = None,
        final_asns: Optional[List["_models.ObservedLong"]] = None,
        final_ip_addresses: Optional[List["_models.ObservedString"]] = None,
        final_ip_blocks: Optional[List["_models.IpBlock"]] = None,
        final_response_codes: Optional[List["_models.ObservedInteger"]] = None,
        final_urls: Optional[List["_models.ObservedString"]] = None,
        first_seen: Optional[datetime.datetime] = None,
        frames: Optional[List["_models.ObservedBoolean"]] = None,
        full_dom_minhash_signatures: Optional[List["_models.ObservedIntegers"]] = None,
        gdpr_asset_security_policies: Optional[List["_models.AssetSecurityPolicy"]] = None,
        guids: Optional[List["_models.GuidPair"]] = None,
        http_method: Optional[str] = None,
        http_response_codes: Optional[List["_models.ObservedInteger"]] = None,
        http_response_messages: Optional[List["_models.ObservedString"]] = None,
        ip_addresses: Optional[List["_models.ObservedString"]] = None,
        ip_blocks: Optional[List["_models.IpBlock"]] = None,
        ipv4: Optional[List["_models.ObservedBoolean"]] = None,
        ipv6: Optional[List["_models.ObservedBoolean"]] = None,
        is_root_url: Optional[bool] = None,
        languages: Optional[List["_models.ObservedString"]] = None,
        last_seen: Optional[datetime.datetime] = None,
        location: Optional[List["_models.ObservedLocation"]] = None,
        non_html_frames: Optional[List["_models.ObservedBoolean"]] = None,
        parked_page: Optional[List["_models.ObservedBoolean"]] = None,
        redirect_type: Optional[Union[str, "_models.PageAssetRedirectType"]] = None,
        redirect_urls: Optional[List["_models.ObservedString"]] = None,
        referrer: Optional[str] = None,
        resource_urls: Optional[List["_models.ResourceUrl"]] = None,
        response_bodies: Optional[List["_models.ObservedString"]] = None,
        response_body_hash_signatures: Optional[List["_models.ObservedString"]] = None,
        response_body_minhash_signatures: Optional[List["_models.ObservedIntegers"]] = None,
        response_headers: Optional[List["_models.ObservedHeader"]] = None,
        response_times: Optional[List["_models.ObservedLong"]] = None,
        root_url: Optional["_models.ObservedBoolean"] = None,
        service: Optional[str] = None,
        services: Optional[List["_models.Service"]] = None,
        site_status: Optional[str] = None,
        sources: Optional[List["_models.Source"]] = None,
        ssl_certs: Optional[List["_models.SslCertAsset"]] = None,
        ssl_server_config: Optional[List["_models.SslServerConfig"]] = None,
        successful: Optional[List["_models.ObservedBoolean"]] = None,
        titles: Optional[List["_models.ObservedString"]] = None,
        undirected_content: Optional[List["_models.ObservedBoolean"]] = None,
        url: Optional[str] = None,
        web_components: Optional[List["_models.WebComponent"]] = None,
        window_names: Optional[List["_models.ObservedString"]] = None,
        windows: Optional[List["_models.ObservedBoolean"]] = None,
        **kwargs
    ):
        """
        :keyword host:
        :paramtype host: str
        :keyword asns:
        :paramtype asns: list[~azure.easm.models.ObservedLong]
        :keyword asset_security_policies:
        :paramtype asset_security_policies: list[~azure.easm.models.AssetSecurityPolicy]
        :keyword attributes:
        :paramtype attributes: list[~azure.easm.models.Attribute]
        :keyword cause:
        :paramtype cause: ~azure.easm.models.PageCause
        :keyword cdns:
        :paramtype cdns: list[~azure.easm.models.ObservedString]
        :keyword charsets:
        :paramtype charsets: list[~azure.easm.models.ObservedString]
        :keyword cnames:
        :paramtype cnames: list[~azure.easm.models.ObservedString]
        :keyword content_lengths:
        :paramtype content_lengths: list[~azure.easm.models.ObservedLong]
        :keyword content_types:
        :paramtype content_types: list[~azure.easm.models.ObservedString]
        :keyword cookies:
        :paramtype cookies: list[~azure.easm.models.Cookie]
        :keyword count:
        :paramtype count: int
        :keyword domain:
        :paramtype domain: str
        :keyword domain_asset:
        :paramtype domain_asset: ~azure.easm.models.DomainAsset
        :keyword errors:
        :paramtype errors: list[~azure.easm.models.ObservedString]
        :keyword final_asns:
        :paramtype final_asns: list[~azure.easm.models.ObservedLong]
        :keyword final_ip_addresses:
        :paramtype final_ip_addresses: list[~azure.easm.models.ObservedString]
        :keyword final_ip_blocks:
        :paramtype final_ip_blocks: list[~azure.easm.models.IpBlock]
        :keyword final_response_codes:
        :paramtype final_response_codes: list[~azure.easm.models.ObservedInteger]
        :keyword final_urls:
        :paramtype final_urls: list[~azure.easm.models.ObservedString]
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword frames:
        :paramtype frames: list[~azure.easm.models.ObservedBoolean]
        :keyword full_dom_minhash_signatures:
        :paramtype full_dom_minhash_signatures: list[~azure.easm.models.ObservedIntegers]
        :keyword gdpr_asset_security_policies:
        :paramtype gdpr_asset_security_policies: list[~azure.easm.models.AssetSecurityPolicy]
        :keyword guids:
        :paramtype guids: list[~azure.easm.models.GuidPair]
        :keyword http_method:
        :paramtype http_method: str
        :keyword http_response_codes:
        :paramtype http_response_codes: list[~azure.easm.models.ObservedInteger]
        :keyword http_response_messages:
        :paramtype http_response_messages: list[~azure.easm.models.ObservedString]
        :keyword ip_addresses:
        :paramtype ip_addresses: list[~azure.easm.models.ObservedString]
        :keyword ip_blocks:
        :paramtype ip_blocks: list[~azure.easm.models.IpBlock]
        :keyword ipv4:
        :paramtype ipv4: list[~azure.easm.models.ObservedBoolean]
        :keyword ipv6:
        :paramtype ipv6: list[~azure.easm.models.ObservedBoolean]
        :keyword is_root_url:
        :paramtype is_root_url: bool
        :keyword languages:
        :paramtype languages: list[~azure.easm.models.ObservedString]
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword location:
        :paramtype location: list[~azure.easm.models.ObservedLocation]
        :keyword non_html_frames:
        :paramtype non_html_frames: list[~azure.easm.models.ObservedBoolean]
        :keyword parked_page:
        :paramtype parked_page: list[~azure.easm.models.ObservedBoolean]
        :keyword redirect_type: Known values are: "httpHeader", "metaRefresh", "javascript", and
         "final".
        :paramtype redirect_type: str or ~azure.easm.models.PageAssetRedirectType
        :keyword redirect_urls:
        :paramtype redirect_urls: list[~azure.easm.models.ObservedString]
        :keyword referrer:
        :paramtype referrer: str
        :keyword resource_urls:
        :paramtype resource_urls: list[~azure.easm.models.ResourceUrl]
        :keyword response_bodies:
        :paramtype response_bodies: list[~azure.easm.models.ObservedString]
        :keyword response_body_hash_signatures:
        :paramtype response_body_hash_signatures: list[~azure.easm.models.ObservedString]
        :keyword response_body_minhash_signatures:
        :paramtype response_body_minhash_signatures: list[~azure.easm.models.ObservedIntegers]
        :keyword response_headers:
        :paramtype response_headers: list[~azure.easm.models.ObservedHeader]
        :keyword response_times:
        :paramtype response_times: list[~azure.easm.models.ObservedLong]
        :keyword root_url:
        :paramtype root_url: ~azure.easm.models.ObservedBoolean
        :keyword service:
        :paramtype service: str
        :keyword services:
        :paramtype services: list[~azure.easm.models.Service]
        :keyword site_status:
        :paramtype site_status: str
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword ssl_certs:
        :paramtype ssl_certs: list[~azure.easm.models.SslCertAsset]
        :keyword ssl_server_config:
        :paramtype ssl_server_config: list[~azure.easm.models.SslServerConfig]
        :keyword successful:
        :paramtype successful: list[~azure.easm.models.ObservedBoolean]
        :keyword titles:
        :paramtype titles: list[~azure.easm.models.ObservedString]
        :keyword undirected_content:
        :paramtype undirected_content: list[~azure.easm.models.ObservedBoolean]
        :keyword url:
        :paramtype url: str
        :keyword web_components:
        :paramtype web_components: list[~azure.easm.models.WebComponent]
        :keyword window_names:
        :paramtype window_names: list[~azure.easm.models.ObservedString]
        :keyword windows:
        :paramtype windows: list[~azure.easm.models.ObservedBoolean]
        """
        super().__init__(**kwargs)
        self.host = host
        self.asns = asns
        self.asset_security_policies = asset_security_policies
        self.attributes = attributes
        self.cause = cause
        self.cdns = cdns
        self.charsets = charsets
        self.cnames = cnames
        self.content_lengths = content_lengths
        self.content_types = content_types
        self.cookies = cookies
        self.count = count
        self.domain = domain
        self.domain_asset = domain_asset
        self.errors = errors
        self.final_asns = final_asns
        self.final_ip_addresses = final_ip_addresses
        self.final_ip_blocks = final_ip_blocks
        self.final_response_codes = final_response_codes
        self.final_urls = final_urls
        self.first_seen = first_seen
        self.frames = frames
        self.full_dom_minhash_signatures = full_dom_minhash_signatures
        self.gdpr_asset_security_policies = gdpr_asset_security_policies
        self.guids = guids
        self.http_method = http_method
        self.http_response_codes = http_response_codes
        self.http_response_messages = http_response_messages
        self.ip_addresses = ip_addresses
        self.ip_blocks = ip_blocks
        self.ipv4 = ipv4
        self.ipv6 = ipv6
        self.is_root_url = is_root_url
        self.languages = languages
        self.last_seen = last_seen
        self.location = location
        self.non_html_frames = non_html_frames
        self.parked_page = parked_page
        self.redirect_type = redirect_type
        self.redirect_urls = redirect_urls
        self.referrer = referrer
        self.resource_urls = resource_urls
        self.response_bodies = response_bodies
        self.response_body_hash_signatures = response_body_hash_signatures
        self.response_body_minhash_signatures = response_body_minhash_signatures
        self.response_headers = response_headers
        self.response_times = response_times
        self.root_url = root_url
        self.service = service
        self.services = services
        self.site_status = site_status
        self.sources = sources
        self.ssl_certs = ssl_certs
        self.ssl_server_config = ssl_server_config
        self.successful = successful
        self.titles = titles
        self.undirected_content = undirected_content
        self.url = url
        self.web_components = web_components
        self.window_names = window_names
        self.windows = windows


class PageAssetResponse(AssetResponse):  # pylint: disable=too-many-instance-attributes
    """PageAssetResponse.

    All required parameters must be populated in order to send to Azure.

    :ivar audit_trail:
    :vartype audit_trail: list[~azure.easm.models.AuditTrailItem]
    :ivar created_date:
    :vartype created_date: ~datetime.datetime
    :ivar disco_group_name:
    :vartype disco_group_name: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar external_id:
    :vartype external_id: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Required. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AssetResponseKind
    :ivar labels:
    :vartype labels: list[~azure.easm.models.LabelResource]
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    :ivar state: Known values are: "candidate", "confirmed", "dismissed", "candidateInvestigate",
     "associatedPartner", "associatedThirdparty", and "archived".
    :vartype state: str or ~azure.easm.models.AssetResponseState
    :ivar updated_date:
    :vartype updated_date: ~datetime.datetime
    :ivar uuid:
    :vartype uuid: str
    :ivar wildcard:
    :vartype wildcard: bool
    :ivar asset: Required.
    :vartype asset: ~azure.easm.models.PageAsset
    """

    _validation = {
        "kind": {"required": True},
        "asset": {"required": True},
    }

    _attribute_map = {
        "audit_trail": {"key": "auditTrail", "type": "[AuditTrailItem]"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "disco_group_name": {"key": "discoGroupName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "labels": {"key": "labels", "type": "[LabelResource]"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
        "uuid": {"key": "uuid", "type": "str"},
        "wildcard": {"key": "wildcard", "type": "bool"},
        "asset": {"key": "asset", "type": "PageAsset"},
    }

    def __init__(
        self,
        *,
        asset: "_models.PageAsset",
        audit_trail: Optional[List["_models.AuditTrailItem"]] = None,
        created_date: Optional[datetime.datetime] = None,
        disco_group_name: Optional[str] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        labels: Optional[List["_models.LabelResource"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        state: Optional[Union[str, "_models.AssetResponseState"]] = None,
        updated_date: Optional[datetime.datetime] = None,
        uuid: Optional[str] = None,
        wildcard: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword audit_trail:
        :paramtype audit_trail: list[~azure.easm.models.AuditTrailItem]
        :keyword created_date:
        :paramtype created_date: ~datetime.datetime
        :keyword disco_group_name:
        :paramtype disco_group_name: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword external_id:
        :paramtype external_id: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword labels:
        :paramtype labels: list[~azure.easm.models.LabelResource]
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        :keyword state: Known values are: "candidate", "confirmed", "dismissed",
         "candidateInvestigate", "associatedPartner", "associatedThirdparty", and "archived".
        :paramtype state: str or ~azure.easm.models.AssetResponseState
        :keyword updated_date:
        :paramtype updated_date: ~datetime.datetime
        :keyword uuid:
        :paramtype uuid: str
        :keyword wildcard:
        :paramtype wildcard: bool
        :keyword asset: Required.
        :paramtype asset: ~azure.easm.models.PageAsset
        """
        super().__init__(
            audit_trail=audit_trail,
            created_date=created_date,
            disco_group_name=disco_group_name,
            display_name=display_name,
            external_id=external_id,
            id=id,
            labels=labels,
            name=name,
            reason=reason,
            state=state,
            updated_date=updated_date,
            uuid=uuid,
            wildcard=wildcard,
            **kwargs
        )
        self.kind = "page"  # type: str
        self.asset = asset


class PageCause(_serialization.Model):
    """PageCause.

    :ivar cause:
    :vartype cause: str
    :ivar location:
    :vartype location: str
    :ivar version:
    :vartype version: int
    """

    _attribute_map = {
        "cause": {"key": "cause", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "version": {"key": "version", "type": "int"},
    }

    def __init__(
        self, *, cause: Optional[str] = None, location: Optional[str] = None, version: Optional[int] = None, **kwargs
    ):
        """
        :keyword cause:
        :paramtype cause: str
        :keyword location:
        :paramtype location: str
        :keyword version:
        :paramtype version: int
        """
        super().__init__(**kwargs)
        self.cause = cause
        self.location = location
        self.version = version


class Port(_serialization.Model):
    """Port.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar port:
    :vartype port: int
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "port": {"key": "port", "type": "int"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        port: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword port:
        :paramtype port: int
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.port = port


class ReportAssetSnapshotRequest(_serialization.Model):
    """A request body used to retrieve an asset report snapshot.

    :ivar label_name: The name of the label to retrieve a snapshot for.
    :vartype label_name: str
    :ivar metric: The metric to retrieve a snapshot for.
    :vartype metric: str
    :ivar page: The page to retrieve.
    :vartype page: int
    :ivar size: The number of assets per page.
    :vartype size: int
    """

    _attribute_map = {
        "label_name": {"key": "labelName", "type": "str"},
        "metric": {"key": "metric", "type": "str"},
        "page": {"key": "page", "type": "int"},
        "size": {"key": "size", "type": "int"},
    }

    def __init__(
        self,
        *,
        label_name: Optional[str] = None,
        metric: Optional[str] = None,
        page: Optional[int] = None,
        size: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword label_name: The name of the label to retrieve a snapshot for.
        :paramtype label_name: str
        :keyword metric: The metric to retrieve a snapshot for.
        :paramtype metric: str
        :keyword page: The page to retrieve.
        :paramtype page: int
        :keyword size: The number of assets per page.
        :paramtype size: int
        """
        super().__init__(**kwargs)
        self.label_name = label_name
        self.metric = metric
        self.page = page
        self.size = size


class ReportAssetSnapshotResponse(_serialization.Model):
    """ReportAssetSnapshotResponse.

    :ivar assets:
    :vartype assets: ~azure.easm.models.AssetPageResponse
    :ivar description:
    :vartype description: str
    :ivar display_name:
    :vartype display_name: str
    :ivar label_name:
    :vartype label_name: str
    :ivar metric:
    :vartype metric: str
    :ivar updated_at:
    :vartype updated_at: ~datetime.datetime
    """

    _attribute_map = {
        "assets": {"key": "assets", "type": "_models._models.AssetPageResponse"},
        "description": {"key": "description", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "label_name": {"key": "labelName", "type": "str"},
        "metric": {"key": "metric", "type": "str"},
        "updated_at": {"key": "updatedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        assets: Optional["_models._models.AssetPageResponse"] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        label_name: Optional[str] = None,
        metric: Optional[str] = None,
        updated_at: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword assets:
        :paramtype assets: ~azure.easm.models.AssetPageResponse
        :keyword description:
        :paramtype description: str
        :keyword display_name:
        :paramtype display_name: str
        :keyword label_name:
        :paramtype label_name: str
        :keyword metric:
        :paramtype metric: str
        :keyword updated_at:
        :paramtype updated_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.assets = assets
        self.description = description
        self.display_name = display_name
        self.label_name = label_name
        self.metric = metric
        self.updated_at = updated_at


class ReportAssetSummaryRequest(_serialization.Model):
    """A request body used to retrieve summary asset information. One and only one collection of summary identifiers must be provided: filters, metrics, or metricCategories.

    :ivar filters: RIQL query filters to apply to the asset summary.
    :vartype filters: list[str]
    :ivar group_by: A parameter to group the assets by (first level facet field), only used when
     the chosen summary identifier is filters.
    :vartype group_by: str
    :ivar label_name: Currently unused.
    :vartype label_name: str
    :ivar metric_categories: Categories to retrieve risk reporting data for.
    :vartype metric_categories: list[str]
    :ivar metrics: Metrics to retrieve risk reporting data for.
    :vartype metrics: list[str]
    :ivar segment_by: A parameter to segment the assets by (second level facet field), only used
     when the chosen summary identifier is filters.
    :vartype segment_by: str
    """

    _attribute_map = {
        "filters": {"key": "filters", "type": "[str]"},
        "group_by": {"key": "groupBy", "type": "str"},
        "label_name": {"key": "labelName", "type": "str"},
        "metric_categories": {"key": "metricCategories", "type": "[str]"},
        "metrics": {"key": "metrics", "type": "[str]"},
        "segment_by": {"key": "segmentBy", "type": "str"},
    }

    def __init__(
        self,
        *,
        filters: Optional[List[str]] = None,
        group_by: Optional[str] = None,
        label_name: Optional[str] = None,
        metric_categories: Optional[List[str]] = None,
        metrics: Optional[List[str]] = None,
        segment_by: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword filters: RIQL query filters to apply to the asset summary.
        :paramtype filters: list[str]
        :keyword group_by: A parameter to group the assets by (first level facet field), only used when
         the chosen summary identifier is filters.
        :paramtype group_by: str
        :keyword label_name: Currently unused.
        :paramtype label_name: str
        :keyword metric_categories: Categories to retrieve risk reporting data for.
        :paramtype metric_categories: list[str]
        :keyword metrics: Metrics to retrieve risk reporting data for.
        :paramtype metrics: list[str]
        :keyword segment_by: A parameter to segment the assets by (second level facet field), only used
         when the chosen summary identifier is filters.
        :paramtype segment_by: str
        """
        super().__init__(**kwargs)
        self.filters = filters
        self.group_by = group_by
        self.label_name = label_name
        self.metric_categories = metric_categories
        self.metrics = metrics
        self.segment_by = segment_by


class ReportAssetSummaryResponse(_serialization.Model):
    """ReportAssetSummaryResponse.

    :ivar asset_summaries:
    :vartype asset_summaries: list[~azure.easm.models.AssetSummaryResponse]
    """

    _attribute_map = {
        "asset_summaries": {"key": "assetSummaries", "type": "[AssetSummaryResponse]"},
    }

    def __init__(self, *, asset_summaries: Optional[List["_models.AssetSummaryResponse"]] = None, **kwargs):
        """
        :keyword asset_summaries:
        :paramtype asset_summaries: list[~azure.easm.models.AssetSummaryResponse]
        """
        super().__init__(**kwargs)
        self.asset_summaries = asset_summaries


class Reputation(_serialization.Model):
    """Reputation.

    :ivar cidr:
    :vartype cidr: str
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar list_name:
    :vartype list_name: str
    :ivar list_updated_at:
    :vartype list_updated_at: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar threat_type:
    :vartype threat_type: str
    :ivar trusted:
    :vartype trusted: bool
    """

    _attribute_map = {
        "cidr": {"key": "cidr", "type": "str"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "list_name": {"key": "listName", "type": "str"},
        "list_updated_at": {"key": "listUpdatedAt", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "threat_type": {"key": "threatType", "type": "str"},
        "trusted": {"key": "trusted", "type": "bool"},
    }

    def __init__(
        self,
        *,
        cidr: Optional[str] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        list_name: Optional[str] = None,
        list_updated_at: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        threat_type: Optional[str] = None,
        trusted: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword cidr:
        :paramtype cidr: str
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword list_name:
        :paramtype list_name: str
        :keyword list_updated_at:
        :paramtype list_updated_at: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword threat_type:
        :paramtype threat_type: str
        :keyword trusted:
        :paramtype trusted: bool
        """
        super().__init__(**kwargs)
        self.cidr = cidr
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.list_name = list_name
        self.list_updated_at = list_updated_at
        self.recent = recent
        self.threat_type = threat_type
        self.trusted = trusted


class ResourceUrl(_serialization.Model):
    """ResourceUrl.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar recent:
    :vartype recent: bool
    :ivar resources:
    :vartype resources: list[~azure.easm.models.DependentResource]
    :ivar url:
    :vartype url: str
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "recent": {"key": "recent", "type": "bool"},
        "resources": {"key": "resources", "type": "[DependentResource]"},
        "url": {"key": "url", "type": "str"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        recent: Optional[bool] = None,
        resources: Optional[List["_models.DependentResource"]] = None,
        url: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword recent:
        :paramtype recent: bool
        :keyword resources:
        :paramtype resources: list[~azure.easm.models.DependentResource]
        :keyword url:
        :paramtype url: str
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.recent = recent
        self.resources = resources
        self.url = url


class SavedFilterPageResponse(_serialization.Model):
    """SavedFilterPageResponse.

    :ivar content: The items in the current page of results.
    :vartype content: list[~azure.easm.models.SavedFilterResponse]
    :ivar first: Whether or not this is the first page of results.
    :vartype first: bool
    :ivar last: Whether or not this is the last page of results.
    :vartype last: bool
    :ivar next_link: The link to access the next page of results.  Not set if at the end of the
     result set.
    :vartype next_link: str
    :ivar number: The page number requested.
    :vartype number: int
    :ivar number_of_elements: The number of items in the current page of results.
    :vartype number_of_elements: int
    :ivar size: The page size requested.
    :vartype size: int
    :ivar total_elements: The total number of items available in the full result set.
    :vartype total_elements: int
    :ivar total_pages: The total number of pages available in the full result set.
    :vartype total_pages: int
    """

    _attribute_map = {
        "content": {"key": "content", "type": "[SavedFilterResponse]"},
        "first": {"key": "first", "type": "bool"},
        "last": {"key": "last", "type": "bool"},
        "next_link": {"key": "nextLink", "type": "str"},
        "number": {"key": "number", "type": "int"},
        "number_of_elements": {"key": "numberOfElements", "type": "int"},
        "size": {"key": "size", "type": "int"},
        "total_elements": {"key": "totalElements", "type": "int"},
        "total_pages": {"key": "totalPages", "type": "int"},
    }

    def __init__(
        self,
        *,
        content: Optional[List["_models.SavedFilterResponse"]] = None,
        first: Optional[bool] = None,
        last: Optional[bool] = None,
        next_link: Optional[str] = None,
        number: Optional[int] = None,
        number_of_elements: Optional[int] = None,
        size: Optional[int] = None,
        total_elements: Optional[int] = None,
        total_pages: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword content: The items in the current page of results.
        :paramtype content: list[~azure.easm.models.SavedFilterResponse]
        :keyword first: Whether or not this is the first page of results.
        :paramtype first: bool
        :keyword last: Whether or not this is the last page of results.
        :paramtype last: bool
        :keyword next_link: The link to access the next page of results.  Not set if at the end of the
         result set.
        :paramtype next_link: str
        :keyword number: The page number requested.
        :paramtype number: int
        :keyword number_of_elements: The number of items in the current page of results.
        :paramtype number_of_elements: int
        :keyword size: The page size requested.
        :paramtype size: int
        :keyword total_elements: The total number of items available in the full result set.
        :paramtype total_elements: int
        :keyword total_pages: The total number of pages available in the full result set.
        :paramtype total_pages: int
        """
        super().__init__(**kwargs)
        self.content = content
        self.first = first
        self.last = last
        self.next_link = next_link
        self.number = number
        self.number_of_elements = number_of_elements
        self.size = size
        self.total_elements = total_elements
        self.total_pages = total_pages


class SavedFilterRequest(_serialization.Model):
    """A request body used to create a saved filter.

    All required parameters must be populated in order to send to Azure.

    :ivar description: A human readable description of the saved filter. Required.
    :vartype description: str
    :ivar filter: An expression on the resource type that selects the resources to be returned.
     Required.
    :vartype filter: str
    """

    _validation = {
        "description": {"required": True},
        "filter": {"required": True},
    }

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "filter": {"key": "filter", "type": "str"},
    }

    def __init__(self, *, description: str, filter: str, **kwargs):  # pylint: disable=redefined-builtin
        """
        :keyword description: A human readable description of the saved filter. Required.
        :paramtype description: str
        :keyword filter: An expression on the resource type that selects the resources to be returned.
         Required.
        :paramtype filter: str
        """
        super().__init__(**kwargs)
        self.description = description
        self.filter = filter


class SavedFilterResponse(_serialization.Model):
    """SavedFilterResponse.

    :ivar description:
    :vartype description: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar filter:
    :vartype filter: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "filter": {"key": "filter", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        filter: Optional[str] = None,  # pylint: disable=redefined-builtin
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword description:
        :paramtype description: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword filter:
        :paramtype filter: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.description = description
        self.display_name = display_name
        self.filter = filter
        self.id = id
        self.name = name


class ScanMetadata(_serialization.Model):
    """ScanMetadata.

    :ivar banner_metadata:
    :vartype banner_metadata: str
    :ivar end_scan:
    :vartype end_scan: ~datetime.datetime
    :ivar port:
    :vartype port: int
    :ivar start_scan:
    :vartype start_scan: ~datetime.datetime
    """

    _attribute_map = {
        "banner_metadata": {"key": "bannerMetadata", "type": "str"},
        "end_scan": {"key": "endScan", "type": "iso-8601"},
        "port": {"key": "port", "type": "int"},
        "start_scan": {"key": "startScan", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        banner_metadata: Optional[str] = None,
        end_scan: Optional[datetime.datetime] = None,
        port: Optional[int] = None,
        start_scan: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword banner_metadata:
        :paramtype banner_metadata: str
        :keyword end_scan:
        :paramtype end_scan: ~datetime.datetime
        :keyword port:
        :paramtype port: int
        :keyword start_scan:
        :paramtype start_scan: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.banner_metadata = banner_metadata
        self.end_scan = end_scan
        self.port = port
        self.start_scan = start_scan


class Service(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Service.

    :ivar count:
    :vartype count: int
    :ivar exceptions:
    :vartype exceptions: list[~azure.easm.models.ObservedString]
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar port:
    :vartype port: int
    :ivar port_states:
    :vartype port_states: list[~azure.easm.models.ObservedPortState]
    :ivar recent:
    :vartype recent: bool
    :ivar scheme:
    :vartype scheme: str
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar ssl_certs:
    :vartype ssl_certs: list[~azure.easm.models.SslCertAsset]
    :ivar web_components:
    :vartype web_components: list[~azure.easm.models.WebComponent]
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "exceptions": {"key": "exceptions", "type": "[ObservedString]"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "port": {"key": "port", "type": "int"},
        "port_states": {"key": "portStates", "type": "[ObservedPortState]"},
        "recent": {"key": "recent", "type": "bool"},
        "scheme": {"key": "scheme", "type": "str"},
        "sources": {"key": "sources", "type": "[Source]"},
        "ssl_certs": {"key": "sslCerts", "type": "[SslCertAsset]"},
        "web_components": {"key": "webComponents", "type": "[WebComponent]"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        exceptions: Optional[List["_models.ObservedString"]] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        port: Optional[int] = None,
        port_states: Optional[List["_models.ObservedPortState"]] = None,
        recent: Optional[bool] = None,
        scheme: Optional[str] = None,
        sources: Optional[List["_models.Source"]] = None,
        ssl_certs: Optional[List["_models.SslCertAsset"]] = None,
        web_components: Optional[List["_models.WebComponent"]] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword exceptions:
        :paramtype exceptions: list[~azure.easm.models.ObservedString]
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword port:
        :paramtype port: int
        :keyword port_states:
        :paramtype port_states: list[~azure.easm.models.ObservedPortState]
        :keyword recent:
        :paramtype recent: bool
        :keyword scheme:
        :paramtype scheme: str
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword ssl_certs:
        :paramtype ssl_certs: list[~azure.easm.models.SslCertAsset]
        :keyword web_components:
        :paramtype web_components: list[~azure.easm.models.WebComponent]
        """
        super().__init__(**kwargs)
        self.count = count
        self.exceptions = exceptions
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.port = port
        self.port_states = port_states
        self.recent = recent
        self.scheme = scheme
        self.sources = sources
        self.ssl_certs = ssl_certs
        self.web_components = web_components


class SoaRecord(_serialization.Model):
    """SoaRecord.

    :ivar count:
    :vartype count: int
    :ivar email:
    :vartype email: str
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar name_server:
    :vartype name_server: str
    :ivar recent:
    :vartype recent: bool
    :ivar serial_number:
    :vartype serial_number: int
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "email": {"key": "email", "type": "str"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "name_server": {"key": "nameServer", "type": "str"},
        "recent": {"key": "recent", "type": "bool"},
        "serial_number": {"key": "serialNumber", "type": "int"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        email: Optional[str] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        name_server: Optional[str] = None,
        recent: Optional[bool] = None,
        serial_number: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword email:
        :paramtype email: str
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword name_server:
        :paramtype name_server: str
        :keyword recent:
        :paramtype recent: bool
        :keyword serial_number:
        :paramtype serial_number: int
        """
        super().__init__(**kwargs)
        self.count = count
        self.email = email
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.name_server = name_server
        self.recent = recent
        self.serial_number = serial_number


class Source(_serialization.Model):
    """Source.

    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar reason:
    :vartype reason: str
    :ivar source:
    :vartype source: str
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "reason": {"key": "reason", "type": "str"},
        "source": {"key": "source", "type": "str"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        reason: Optional[str] = None,
        source: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword reason:
        :paramtype reason: str
        :keyword source:
        :paramtype source: str
        """
        super().__init__(**kwargs)
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.reason = reason
        self.source = source


class SslCertAsset(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """SslCertAsset.

    :ivar certificate_authority:
    :vartype certificate_authority: bool
    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar invalid_after:
    :vartype invalid_after: ~datetime.datetime
    :ivar invalid_before:
    :vartype invalid_before: ~datetime.datetime
    :ivar issuer_alternative_names:
    :vartype issuer_alternative_names: list[str]
    :ivar issuer_common_names:
    :vartype issuer_common_names: list[str]
    :ivar issuer_country:
    :vartype issuer_country: list[str]
    :ivar issuer_locality:
    :vartype issuer_locality: list[str]
    :ivar issuer_organizational_units:
    :vartype issuer_organizational_units: list[str]
    :ivar issuer_organizations:
    :vartype issuer_organizations: list[str]
    :ivar issuer_state:
    :vartype issuer_state: list[str]
    :ivar key_algorithm:
    :vartype key_algorithm: str
    :ivar key_size:
    :vartype key_size: int
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar organizational_units:
    :vartype organizational_units: list[str]
    :ivar organizations:
    :vartype organizations: list[str]
    :ivar recent:
    :vartype recent: bool
    :ivar self_signed:
    :vartype self_signed: bool
    :ivar serial_number:
    :vartype serial_number: str
    :ivar sha1:
    :vartype sha1: str
    :ivar sig_alg_name:
    :vartype sig_alg_name: str
    :ivar sig_alg_oid:
    :vartype sig_alg_oid: str
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar subject_alternative_names:
    :vartype subject_alternative_names: list[str]
    :ivar subject_common_names:
    :vartype subject_common_names: list[str]
    :ivar subject_country:
    :vartype subject_country: list[str]
    :ivar subject_locality:
    :vartype subject_locality: list[str]
    :ivar subject_organizational_units:
    :vartype subject_organizational_units: list[str]
    :ivar subject_organizations:
    :vartype subject_organizations: list[str]
    :ivar subject_state:
    :vartype subject_state: list[str]
    :ivar validation_type: Known values are: "domainValidation", "organizationValidation", and
     "extendedValidation".
    :vartype validation_type: str or ~azure.easm.models.SslCertAssetValidationType
    :ivar version:
    :vartype version: int
    """

    _attribute_map = {
        "certificate_authority": {"key": "certificateAuthority", "type": "bool"},
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "invalid_after": {"key": "invalidAfter", "type": "iso-8601"},
        "invalid_before": {"key": "invalidBefore", "type": "iso-8601"},
        "issuer_alternative_names": {"key": "issuerAlternativeNames", "type": "[str]"},
        "issuer_common_names": {"key": "issuerCommonNames", "type": "[str]"},
        "issuer_country": {"key": "issuerCountry", "type": "[str]"},
        "issuer_locality": {"key": "issuerLocality", "type": "[str]"},
        "issuer_organizational_units": {"key": "issuerOrganizationalUnits", "type": "[str]"},
        "issuer_organizations": {"key": "issuerOrganizations", "type": "[str]"},
        "issuer_state": {"key": "issuerState", "type": "[str]"},
        "key_algorithm": {"key": "keyAlgorithm", "type": "str"},
        "key_size": {"key": "keySize", "type": "int"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "organizational_units": {"key": "organizationalUnits", "type": "[str]"},
        "organizations": {"key": "organizations", "type": "[str]"},
        "recent": {"key": "recent", "type": "bool"},
        "self_signed": {"key": "selfSigned", "type": "bool"},
        "serial_number": {"key": "serialNumber", "type": "str"},
        "sha1": {"key": "sha1", "type": "str"},
        "sig_alg_name": {"key": "sigAlgName", "type": "str"},
        "sig_alg_oid": {"key": "sigAlgOid", "type": "str"},
        "sources": {"key": "sources", "type": "[Source]"},
        "subject_alternative_names": {"key": "subjectAlternativeNames", "type": "[str]"},
        "subject_common_names": {"key": "subjectCommonNames", "type": "[str]"},
        "subject_country": {"key": "subjectCountry", "type": "[str]"},
        "subject_locality": {"key": "subjectLocality", "type": "[str]"},
        "subject_organizational_units": {"key": "subjectOrganizationalUnits", "type": "[str]"},
        "subject_organizations": {"key": "subjectOrganizations", "type": "[str]"},
        "subject_state": {"key": "subjectState", "type": "[str]"},
        "validation_type": {"key": "validationType", "type": "str"},
        "version": {"key": "version", "type": "int"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        certificate_authority: Optional[bool] = None,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        invalid_after: Optional[datetime.datetime] = None,
        invalid_before: Optional[datetime.datetime] = None,
        issuer_alternative_names: Optional[List[str]] = None,
        issuer_common_names: Optional[List[str]] = None,
        issuer_country: Optional[List[str]] = None,
        issuer_locality: Optional[List[str]] = None,
        issuer_organizational_units: Optional[List[str]] = None,
        issuer_organizations: Optional[List[str]] = None,
        issuer_state: Optional[List[str]] = None,
        key_algorithm: Optional[str] = None,
        key_size: Optional[int] = None,
        last_seen: Optional[datetime.datetime] = None,
        organizational_units: Optional[List[str]] = None,
        organizations: Optional[List[str]] = None,
        recent: Optional[bool] = None,
        self_signed: Optional[bool] = None,
        serial_number: Optional[str] = None,
        sha1: Optional[str] = None,
        sig_alg_name: Optional[str] = None,
        sig_alg_oid: Optional[str] = None,
        sources: Optional[List["_models.Source"]] = None,
        subject_alternative_names: Optional[List[str]] = None,
        subject_common_names: Optional[List[str]] = None,
        subject_country: Optional[List[str]] = None,
        subject_locality: Optional[List[str]] = None,
        subject_organizational_units: Optional[List[str]] = None,
        subject_organizations: Optional[List[str]] = None,
        subject_state: Optional[List[str]] = None,
        validation_type: Optional[Union[str, "_models.SslCertAssetValidationType"]] = None,
        version: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword certificate_authority:
        :paramtype certificate_authority: bool
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword invalid_after:
        :paramtype invalid_after: ~datetime.datetime
        :keyword invalid_before:
        :paramtype invalid_before: ~datetime.datetime
        :keyword issuer_alternative_names:
        :paramtype issuer_alternative_names: list[str]
        :keyword issuer_common_names:
        :paramtype issuer_common_names: list[str]
        :keyword issuer_country:
        :paramtype issuer_country: list[str]
        :keyword issuer_locality:
        :paramtype issuer_locality: list[str]
        :keyword issuer_organizational_units:
        :paramtype issuer_organizational_units: list[str]
        :keyword issuer_organizations:
        :paramtype issuer_organizations: list[str]
        :keyword issuer_state:
        :paramtype issuer_state: list[str]
        :keyword key_algorithm:
        :paramtype key_algorithm: str
        :keyword key_size:
        :paramtype key_size: int
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword organizational_units:
        :paramtype organizational_units: list[str]
        :keyword organizations:
        :paramtype organizations: list[str]
        :keyword recent:
        :paramtype recent: bool
        :keyword self_signed:
        :paramtype self_signed: bool
        :keyword serial_number:
        :paramtype serial_number: str
        :keyword sha1:
        :paramtype sha1: str
        :keyword sig_alg_name:
        :paramtype sig_alg_name: str
        :keyword sig_alg_oid:
        :paramtype sig_alg_oid: str
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword subject_alternative_names:
        :paramtype subject_alternative_names: list[str]
        :keyword subject_common_names:
        :paramtype subject_common_names: list[str]
        :keyword subject_country:
        :paramtype subject_country: list[str]
        :keyword subject_locality:
        :paramtype subject_locality: list[str]
        :keyword subject_organizational_units:
        :paramtype subject_organizational_units: list[str]
        :keyword subject_organizations:
        :paramtype subject_organizations: list[str]
        :keyword subject_state:
        :paramtype subject_state: list[str]
        :keyword validation_type: Known values are: "domainValidation", "organizationValidation", and
         "extendedValidation".
        :paramtype validation_type: str or ~azure.easm.models.SslCertAssetValidationType
        :keyword version:
        :paramtype version: int
        """
        super().__init__(**kwargs)
        self.certificate_authority = certificate_authority
        self.count = count
        self.first_seen = first_seen
        self.invalid_after = invalid_after
        self.invalid_before = invalid_before
        self.issuer_alternative_names = issuer_alternative_names
        self.issuer_common_names = issuer_common_names
        self.issuer_country = issuer_country
        self.issuer_locality = issuer_locality
        self.issuer_organizational_units = issuer_organizational_units
        self.issuer_organizations = issuer_organizations
        self.issuer_state = issuer_state
        self.key_algorithm = key_algorithm
        self.key_size = key_size
        self.last_seen = last_seen
        self.organizational_units = organizational_units
        self.organizations = organizations
        self.recent = recent
        self.self_signed = self_signed
        self.serial_number = serial_number
        self.sha1 = sha1
        self.sig_alg_name = sig_alg_name
        self.sig_alg_oid = sig_alg_oid
        self.sources = sources
        self.subject_alternative_names = subject_alternative_names
        self.subject_common_names = subject_common_names
        self.subject_country = subject_country
        self.subject_locality = subject_locality
        self.subject_organizational_units = subject_organizational_units
        self.subject_organizations = subject_organizations
        self.subject_state = subject_state
        self.validation_type = validation_type
        self.version = version


class SslCertAssetResponse(AssetResponse):  # pylint: disable=too-many-instance-attributes
    """SslCertAssetResponse.

    All required parameters must be populated in order to send to Azure.

    :ivar audit_trail:
    :vartype audit_trail: list[~azure.easm.models.AuditTrailItem]
    :ivar created_date:
    :vartype created_date: ~datetime.datetime
    :ivar disco_group_name:
    :vartype disco_group_name: str
    :ivar display_name: The name that can be used for display purposes.
    :vartype display_name: str
    :ivar external_id:
    :vartype external_id: str
    :ivar id: The system generated unique id for the resource.
    :vartype id: str
    :ivar kind: The kind of asset. Required. Known values are: "as", "contact", "domain", "host",
     "ipAddress", "ipBlock", "page", and "sslCert".
    :vartype kind: str or ~azure.easm.models.AssetResponseKind
    :ivar labels:
    :vartype labels: list[~azure.easm.models.LabelResource]
    :ivar name: The caller provided unique name for the resource.
    :vartype name: str
    :ivar reason:
    :vartype reason: str
    :ivar state: Known values are: "candidate", "confirmed", "dismissed", "candidateInvestigate",
     "associatedPartner", "associatedThirdparty", and "archived".
    :vartype state: str or ~azure.easm.models.AssetResponseState
    :ivar updated_date:
    :vartype updated_date: ~datetime.datetime
    :ivar uuid:
    :vartype uuid: str
    :ivar wildcard:
    :vartype wildcard: bool
    :ivar asset: Required.
    :vartype asset: ~azure.easm.models.SslCertAsset
    """

    _validation = {
        "kind": {"required": True},
        "asset": {"required": True},
    }

    _attribute_map = {
        "audit_trail": {"key": "auditTrail", "type": "[AuditTrailItem]"},
        "created_date": {"key": "createdDate", "type": "iso-8601"},
        "disco_group_name": {"key": "discoGroupName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "labels": {"key": "labels", "type": "[LabelResource]"},
        "name": {"key": "name", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "updated_date": {"key": "updatedDate", "type": "iso-8601"},
        "uuid": {"key": "uuid", "type": "str"},
        "wildcard": {"key": "wildcard", "type": "bool"},
        "asset": {"key": "asset", "type": "SslCertAsset"},
    }

    def __init__(
        self,
        *,
        asset: "_models.SslCertAsset",
        audit_trail: Optional[List["_models.AuditTrailItem"]] = None,
        created_date: Optional[datetime.datetime] = None,
        disco_group_name: Optional[str] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        labels: Optional[List["_models.LabelResource"]] = None,
        name: Optional[str] = None,
        reason: Optional[str] = None,
        state: Optional[Union[str, "_models.AssetResponseState"]] = None,
        updated_date: Optional[datetime.datetime] = None,
        uuid: Optional[str] = None,
        wildcard: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword audit_trail:
        :paramtype audit_trail: list[~azure.easm.models.AuditTrailItem]
        :keyword created_date:
        :paramtype created_date: ~datetime.datetime
        :keyword disco_group_name:
        :paramtype disco_group_name: str
        :keyword display_name: The name that can be used for display purposes.
        :paramtype display_name: str
        :keyword external_id:
        :paramtype external_id: str
        :keyword id: The system generated unique id for the resource.
        :paramtype id: str
        :keyword labels:
        :paramtype labels: list[~azure.easm.models.LabelResource]
        :keyword name: The caller provided unique name for the resource.
        :paramtype name: str
        :keyword reason:
        :paramtype reason: str
        :keyword state: Known values are: "candidate", "confirmed", "dismissed",
         "candidateInvestigate", "associatedPartner", "associatedThirdparty", and "archived".
        :paramtype state: str or ~azure.easm.models.AssetResponseState
        :keyword updated_date:
        :paramtype updated_date: ~datetime.datetime
        :keyword uuid:
        :paramtype uuid: str
        :keyword wildcard:
        :paramtype wildcard: bool
        :keyword asset: Required.
        :paramtype asset: ~azure.easm.models.SslCertAsset
        """
        super().__init__(
            audit_trail=audit_trail,
            created_date=created_date,
            disco_group_name=disco_group_name,
            display_name=display_name,
            external_id=external_id,
            id=id,
            labels=labels,
            name=name,
            reason=reason,
            state=state,
            updated_date=updated_date,
            uuid=uuid,
            wildcard=wildcard,
            **kwargs
        )
        self.kind = "sslCert"  # type: str
        self.asset = asset


class SslServerConfig(_serialization.Model):
    """SslServerConfig.

    :ivar cipher_suites:
    :vartype cipher_suites: list[str]
    :ivar count:
    :vartype count: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar tls_versions:
    :vartype tls_versions: list[str]
    """

    _attribute_map = {
        "cipher_suites": {"key": "cipherSuites", "type": "[str]"},
        "count": {"key": "count", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "sources": {"key": "sources", "type": "[Source]"},
        "tls_versions": {"key": "tlsVersions", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        cipher_suites: Optional[List[str]] = None,
        count: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        sources: Optional[List["_models.Source"]] = None,
        tls_versions: Optional[List[str]] = None,
        **kwargs
    ):
        """
        :keyword cipher_suites:
        :paramtype cipher_suites: list[str]
        :keyword count:
        :paramtype count: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword tls_versions:
        :paramtype tls_versions: list[str]
        """
        super().__init__(**kwargs)
        self.cipher_suites = cipher_suites
        self.count = count
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.sources = sources
        self.tls_versions = tls_versions


class SubResourceIntegrityCheck(_serialization.Model):
    """SubResourceIntegrityCheck.

    :ivar cause_page_url:
    :vartype cause_page_url: str
    :ivar count:
    :vartype count: int
    :ivar crawl_guid:
    :vartype crawl_guid: str
    :ivar expected_hash:
    :vartype expected_hash: str
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar page_guid:
    :vartype page_guid: str
    :ivar resource_guid:
    :vartype resource_guid: str
    :ivar violation:
    :vartype violation: bool
    """

    _attribute_map = {
        "cause_page_url": {"key": "causePageUrl", "type": "str"},
        "count": {"key": "count", "type": "int"},
        "crawl_guid": {"key": "crawlGuid", "type": "str"},
        "expected_hash": {"key": "expectedHash", "type": "str"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "page_guid": {"key": "pageGuid", "type": "str"},
        "resource_guid": {"key": "resourceGuid", "type": "str"},
        "violation": {"key": "violation", "type": "bool"},
    }

    def __init__(
        self,
        *,
        cause_page_url: Optional[str] = None,
        count: Optional[int] = None,
        crawl_guid: Optional[str] = None,
        expected_hash: Optional[str] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        page_guid: Optional[str] = None,
        resource_guid: Optional[str] = None,
        violation: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword cause_page_url:
        :paramtype cause_page_url: str
        :keyword count:
        :paramtype count: int
        :keyword crawl_guid:
        :paramtype crawl_guid: str
        :keyword expected_hash:
        :paramtype expected_hash: str
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword page_guid:
        :paramtype page_guid: str
        :keyword resource_guid:
        :paramtype resource_guid: str
        :keyword violation:
        :paramtype violation: bool
        """
        super().__init__(**kwargs)
        self.cause_page_url = cause_page_url
        self.count = count
        self.crawl_guid = crawl_guid
        self.expected_hash = expected_hash
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.page_guid = page_guid
        self.resource_guid = resource_guid
        self.violation = violation


class TaskPageResponse(_serialization.Model):
    """TaskPageResponse.

    :ivar content: The items in the current page of results.
    :vartype content: list[~azure.easm.models.TaskResponse]
    :ivar first: Whether or not this is the first page of results.
    :vartype first: bool
    :ivar last: Whether or not this is the last page of results.
    :vartype last: bool
    :ivar next_link: The link to access the next page of results.  Not set if at the end of the
     result set.
    :vartype next_link: str
    :ivar number: The page number requested.
    :vartype number: int
    :ivar number_of_elements: The number of items in the current page of results.
    :vartype number_of_elements: int
    :ivar size: The page size requested.
    :vartype size: int
    :ivar total_elements: The total number of items available in the full result set.
    :vartype total_elements: int
    :ivar total_pages: The total number of pages available in the full result set.
    :vartype total_pages: int
    """

    _attribute_map = {
        "content": {"key": "content", "type": "[TaskResponse]"},
        "first": {"key": "first", "type": "bool"},
        "last": {"key": "last", "type": "bool"},
        "next_link": {"key": "nextLink", "type": "str"},
        "number": {"key": "number", "type": "int"},
        "number_of_elements": {"key": "numberOfElements", "type": "int"},
        "size": {"key": "size", "type": "int"},
        "total_elements": {"key": "totalElements", "type": "int"},
        "total_pages": {"key": "totalPages", "type": "int"},
    }

    def __init__(
        self,
        *,
        content: Optional[List["_models.TaskResponse"]] = None,
        first: Optional[bool] = None,
        last: Optional[bool] = None,
        next_link: Optional[str] = None,
        number: Optional[int] = None,
        number_of_elements: Optional[int] = None,
        size: Optional[int] = None,
        total_elements: Optional[int] = None,
        total_pages: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword content: The items in the current page of results.
        :paramtype content: list[~azure.easm.models.TaskResponse]
        :keyword first: Whether or not this is the first page of results.
        :paramtype first: bool
        :keyword last: Whether or not this is the last page of results.
        :paramtype last: bool
        :keyword next_link: The link to access the next page of results.  Not set if at the end of the
         result set.
        :paramtype next_link: str
        :keyword number: The page number requested.
        :paramtype number: int
        :keyword number_of_elements: The number of items in the current page of results.
        :paramtype number_of_elements: int
        :keyword size: The page size requested.
        :paramtype size: int
        :keyword total_elements: The total number of items available in the full result set.
        :paramtype total_elements: int
        :keyword total_pages: The total number of pages available in the full result set.
        :paramtype total_pages: int
        """
        super().__init__(**kwargs)
        self.content = content
        self.first = first
        self.last = last
        self.next_link = next_link
        self.number = number
        self.number_of_elements = number_of_elements
        self.size = size
        self.total_elements = total_elements
        self.total_pages = total_pages


class TaskResponse(_serialization.Model):
    """TaskResponse.

    :ivar completed_at:
    :vartype completed_at: ~datetime.datetime
    :ivar id:
    :vartype id: str
    :ivar last_polled_at:
    :vartype last_polled_at: ~datetime.datetime
    :ivar phase: Known values are: "running", "polling", and "complete".
    :vartype phase: str or ~azure.easm.models.TaskResponsePhase
    :ivar reason:
    :vartype reason: str
    :ivar started_at:
    :vartype started_at: ~datetime.datetime
    :ivar state: Known values are: "pending", "running", "paused", "complete", "incomplete",
     "failed", and "warning".
    :vartype state: str or ~azure.easm.models.TaskResponseState
    """

    _attribute_map = {
        "completed_at": {"key": "completedAt", "type": "iso-8601"},
        "id": {"key": "id", "type": "str"},
        "last_polled_at": {"key": "lastPolledAt", "type": "iso-8601"},
        "phase": {"key": "phase", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "started_at": {"key": "startedAt", "type": "iso-8601"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(
        self,
        *,
        completed_at: Optional[datetime.datetime] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        last_polled_at: Optional[datetime.datetime] = None,
        phase: Optional[Union[str, "_models.TaskResponsePhase"]] = None,
        reason: Optional[str] = None,
        started_at: Optional[datetime.datetime] = None,
        state: Optional[Union[str, "_models.TaskResponseState"]] = None,
        **kwargs
    ):
        """
        :keyword completed_at:
        :paramtype completed_at: ~datetime.datetime
        :keyword id:
        :paramtype id: str
        :keyword last_polled_at:
        :paramtype last_polled_at: ~datetime.datetime
        :keyword phase: Known values are: "running", "polling", and "complete".
        :paramtype phase: str or ~azure.easm.models.TaskResponsePhase
        :keyword reason:
        :paramtype reason: str
        :keyword started_at:
        :paramtype started_at: ~datetime.datetime
        :keyword state: Known values are: "pending", "running", "paused", "complete", "incomplete",
         "failed", and "warning".
        :paramtype state: str or ~azure.easm.models.TaskResponseState
        """
        super().__init__(**kwargs)
        self.completed_at = completed_at
        self.id = id
        self.last_polled_at = last_polled_at
        self.phase = phase
        self.reason = reason
        self.started_at = started_at
        self.state = state


class WebComponent(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """WebComponent.

    :ivar count:
    :vartype count: int
    :ivar cve:
    :vartype cve: list[~azure.easm.models.Cve]
    :ivar end_of_life:
    :vartype end_of_life: int
    :ivar first_seen:
    :vartype first_seen: ~datetime.datetime
    :ivar last_seen:
    :vartype last_seen: ~datetime.datetime
    :ivar name:
    :vartype name: str
    :ivar ports:
    :vartype ports: list[~azure.easm.models.Port]
    :ivar recent:
    :vartype recent: bool
    :ivar service:
    :vartype service: str
    :ivar sources:
    :vartype sources: list[~azure.easm.models.Source]
    :ivar type:
    :vartype type: str
    :ivar version:
    :vartype version: str
    """

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "cve": {"key": "cve", "type": "[Cve]"},
        "end_of_life": {"key": "endOfLife", "type": "int"},
        "first_seen": {"key": "firstSeen", "type": "iso-8601"},
        "last_seen": {"key": "lastSeen", "type": "iso-8601"},
        "name": {"key": "name", "type": "str"},
        "ports": {"key": "ports", "type": "[Port]"},
        "recent": {"key": "recent", "type": "bool"},
        "service": {"key": "service", "type": "str"},
        "sources": {"key": "sources", "type": "[Source]"},
        "type": {"key": "type", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(
        self,
        *,
        count: Optional[int] = None,
        cve: Optional[List["_models.Cve"]] = None,
        end_of_life: Optional[int] = None,
        first_seen: Optional[datetime.datetime] = None,
        last_seen: Optional[datetime.datetime] = None,
        name: Optional[str] = None,
        ports: Optional[List["_models.Port"]] = None,
        recent: Optional[bool] = None,
        service: Optional[str] = None,
        sources: Optional[List["_models.Source"]] = None,
        type: Optional[str] = None,
        version: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword count:
        :paramtype count: int
        :keyword cve:
        :paramtype cve: list[~azure.easm.models.Cve]
        :keyword end_of_life:
        :paramtype end_of_life: int
        :keyword first_seen:
        :paramtype first_seen: ~datetime.datetime
        :keyword last_seen:
        :paramtype last_seen: ~datetime.datetime
        :keyword name:
        :paramtype name: str
        :keyword ports:
        :paramtype ports: list[~azure.easm.models.Port]
        :keyword recent:
        :paramtype recent: bool
        :keyword service:
        :paramtype service: str
        :keyword sources:
        :paramtype sources: list[~azure.easm.models.Source]
        :keyword type:
        :paramtype type: str
        :keyword version:
        :paramtype version: str
        """
        super().__init__(**kwargs)
        self.count = count
        self.cve = cve
        self.end_of_life = end_of_life
        self.first_seen = first_seen
        self.last_seen = last_seen
        self.name = name
        self.ports = ports
        self.recent = recent
        self.service = service
        self.sources = sources
        self.type = type
        self.version = version
